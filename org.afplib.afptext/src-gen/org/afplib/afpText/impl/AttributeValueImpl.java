/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.AttributeValue;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Attribute Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.AttributeValueImpl#getReserved0 <em>Reserved0</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.AttributeValueImpl#getAttVal <em>Att Val</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AttributeValueImpl extends tripletImpl implements AttributeValue
{
  /**
   * The default value of the '{@link #getReserved0() <em>Reserved0</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved0()
   * @generated
   * @ordered
   */
  protected static final int RESERVED0_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getReserved0() <em>Reserved0</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved0()
   * @generated
   * @ordered
   */
  protected int reserved0 = RESERVED0_EDEFAULT;

  /**
   * The default value of the '{@link #getAttVal() <em>Att Val</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttVal()
   * @generated
   * @ordered
   */
  protected static final String ATT_VAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAttVal() <em>Att Val</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttVal()
   * @generated
   * @ordered
   */
  protected String attVal = ATT_VAL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AttributeValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getAttributeValue();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getReserved0()
  {
    return reserved0;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReserved0(int newReserved0)
  {
    int oldReserved0 = reserved0;
    reserved0 = newReserved0;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.ATTRIBUTE_VALUE__RESERVED0, oldReserved0, reserved0));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAttVal()
  {
    return attVal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttVal(String newAttVal)
  {
    String oldAttVal = attVal;
    attVal = newAttVal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.ATTRIBUTE_VALUE__ATT_VAL, oldAttVal, attVal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.ATTRIBUTE_VALUE__RESERVED0:
        return getReserved0();
      case AfpTextPackage.ATTRIBUTE_VALUE__ATT_VAL:
        return getAttVal();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.ATTRIBUTE_VALUE__RESERVED0:
        setReserved0((Integer)newValue);
        return;
      case AfpTextPackage.ATTRIBUTE_VALUE__ATT_VAL:
        setAttVal((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.ATTRIBUTE_VALUE__RESERVED0:
        setReserved0(RESERVED0_EDEFAULT);
        return;
      case AfpTextPackage.ATTRIBUTE_VALUE__ATT_VAL:
        setAttVal(ATT_VAL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.ATTRIBUTE_VALUE__RESERVED0:
        return reserved0 != RESERVED0_EDEFAULT;
      case AfpTextPackage.ATTRIBUTE_VALUE__ATT_VAL:
        return ATT_VAL_EDEFAULT == null ? attVal != null : !ATT_VAL_EDEFAULT.equals(attVal);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (Reserved0: ");
    result.append(reserved0);
    result.append(", AttVal: ");
    result.append(attVal);
    result.append(')');
    return result.toString();
  }

} //AttributeValueImpl
