/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import java.util.Collection;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.BDD;
import org.afplib.afpText.triplet;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>BDD</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getUBASE <em>UBASE</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getReserved <em>Reserved</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getXUPUB <em>XUPUB</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getYUPUB <em>YUPUB</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getXEXTENT <em>XEXTENT</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getYEXTENT <em>YEXTENT</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getReserved2 <em>Reserved2</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getTYPE <em>TYPE</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getMOD <em>MOD</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getLID <em>LID</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getCOLOR <em>COLOR</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getMODULEWIDTH <em>MODULEWIDTH</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getELEMENTHEIGHT <em>ELEMENTHEIGHT</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getMULT <em>MULT</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getWENE <em>WENE</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.BDDImpl#getTriplets <em>Triplets</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BDDImpl extends structuredFieldImpl implements BDD
{
  /**
   * The default value of the '{@link #getUBASE() <em>UBASE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUBASE()
   * @generated
   * @ordered
   */
  protected static final int UBASE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getUBASE() <em>UBASE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUBASE()
   * @generated
   * @ordered
   */
  protected int ubase = UBASE_EDEFAULT;

  /**
   * The default value of the '{@link #getReserved() <em>Reserved</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved()
   * @generated
   * @ordered
   */
  protected static final int RESERVED_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getReserved() <em>Reserved</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved()
   * @generated
   * @ordered
   */
  protected int reserved = RESERVED_EDEFAULT;

  /**
   * The default value of the '{@link #getXUPUB() <em>XUPUB</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXUPUB()
   * @generated
   * @ordered
   */
  protected static final int XUPUB_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXUPUB() <em>XUPUB</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXUPUB()
   * @generated
   * @ordered
   */
  protected int xupub = XUPUB_EDEFAULT;

  /**
   * The default value of the '{@link #getYUPUB() <em>YUPUB</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYUPUB()
   * @generated
   * @ordered
   */
  protected static final int YUPUB_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYUPUB() <em>YUPUB</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYUPUB()
   * @generated
   * @ordered
   */
  protected int yupub = YUPUB_EDEFAULT;

  /**
   * The default value of the '{@link #getXEXTENT() <em>XEXTENT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXEXTENT()
   * @generated
   * @ordered
   */
  protected static final int XEXTENT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXEXTENT() <em>XEXTENT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXEXTENT()
   * @generated
   * @ordered
   */
  protected int xextent = XEXTENT_EDEFAULT;

  /**
   * The default value of the '{@link #getYEXTENT() <em>YEXTENT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYEXTENT()
   * @generated
   * @ordered
   */
  protected static final int YEXTENT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYEXTENT() <em>YEXTENT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYEXTENT()
   * @generated
   * @ordered
   */
  protected int yextent = YEXTENT_EDEFAULT;

  /**
   * The default value of the '{@link #getReserved2() <em>Reserved2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved2()
   * @generated
   * @ordered
   */
  protected static final int RESERVED2_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getReserved2() <em>Reserved2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved2()
   * @generated
   * @ordered
   */
  protected int reserved2 = RESERVED2_EDEFAULT;

  /**
   * The default value of the '{@link #getTYPE() <em>TYPE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTYPE()
   * @generated
   * @ordered
   */
  protected static final int TYPE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getTYPE() <em>TYPE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTYPE()
   * @generated
   * @ordered
   */
  protected int type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getMOD() <em>MOD</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMOD()
   * @generated
   * @ordered
   */
  protected static final int MOD_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMOD() <em>MOD</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMOD()
   * @generated
   * @ordered
   */
  protected int mod = MOD_EDEFAULT;

  /**
   * The default value of the '{@link #getLID() <em>LID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLID()
   * @generated
   * @ordered
   */
  protected static final int LID_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getLID() <em>LID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLID()
   * @generated
   * @ordered
   */
  protected int lid = LID_EDEFAULT;

  /**
   * The default value of the '{@link #getCOLOR() <em>COLOR</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCOLOR()
   * @generated
   * @ordered
   */
  protected static final int COLOR_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCOLOR() <em>COLOR</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCOLOR()
   * @generated
   * @ordered
   */
  protected int color = COLOR_EDEFAULT;

  /**
   * The default value of the '{@link #getMODULEWIDTH() <em>MODULEWIDTH</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMODULEWIDTH()
   * @generated
   * @ordered
   */
  protected static final int MODULEWIDTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMODULEWIDTH() <em>MODULEWIDTH</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMODULEWIDTH()
   * @generated
   * @ordered
   */
  protected int modulewidth = MODULEWIDTH_EDEFAULT;

  /**
   * The default value of the '{@link #getELEMENTHEIGHT() <em>ELEMENTHEIGHT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getELEMENTHEIGHT()
   * @generated
   * @ordered
   */
  protected static final int ELEMENTHEIGHT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getELEMENTHEIGHT() <em>ELEMENTHEIGHT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getELEMENTHEIGHT()
   * @generated
   * @ordered
   */
  protected int elementheight = ELEMENTHEIGHT_EDEFAULT;

  /**
   * The default value of the '{@link #getMULT() <em>MULT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMULT()
   * @generated
   * @ordered
   */
  protected static final int MULT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMULT() <em>MULT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMULT()
   * @generated
   * @ordered
   */
  protected int mult = MULT_EDEFAULT;

  /**
   * The default value of the '{@link #getWENE() <em>WENE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWENE()
   * @generated
   * @ordered
   */
  protected static final int WENE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getWENE() <em>WENE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWENE()
   * @generated
   * @ordered
   */
  protected int wene = WENE_EDEFAULT;

  /**
   * The cached value of the '{@link #getTriplets() <em>Triplets</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTriplets()
   * @generated
   * @ordered
   */
  protected EList<triplet> triplets;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BDDImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getBDD();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getUBASE()
  {
    return ubase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUBASE(int newUBASE)
  {
    int oldUBASE = ubase;
    ubase = newUBASE;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__UBASE, oldUBASE, ubase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getReserved()
  {
    return reserved;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReserved(int newReserved)
  {
    int oldReserved = reserved;
    reserved = newReserved;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__RESERVED, oldReserved, reserved));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXUPUB()
  {
    return xupub;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXUPUB(int newXUPUB)
  {
    int oldXUPUB = xupub;
    xupub = newXUPUB;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__XUPUB, oldXUPUB, xupub));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYUPUB()
  {
    return yupub;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYUPUB(int newYUPUB)
  {
    int oldYUPUB = yupub;
    yupub = newYUPUB;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__YUPUB, oldYUPUB, yupub));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXEXTENT()
  {
    return xextent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXEXTENT(int newXEXTENT)
  {
    int oldXEXTENT = xextent;
    xextent = newXEXTENT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__XEXTENT, oldXEXTENT, xextent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYEXTENT()
  {
    return yextent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYEXTENT(int newYEXTENT)
  {
    int oldYEXTENT = yextent;
    yextent = newYEXTENT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__YEXTENT, oldYEXTENT, yextent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getReserved2()
  {
    return reserved2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReserved2(int newReserved2)
  {
    int oldReserved2 = reserved2;
    reserved2 = newReserved2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__RESERVED2, oldReserved2, reserved2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getTYPE()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTYPE(int newTYPE)
  {
    int oldTYPE = type;
    type = newTYPE;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__TYPE, oldTYPE, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMOD()
  {
    return mod;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMOD(int newMOD)
  {
    int oldMOD = mod;
    mod = newMOD;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__MOD, oldMOD, mod));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getLID()
  {
    return lid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLID(int newLID)
  {
    int oldLID = lid;
    lid = newLID;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__LID, oldLID, lid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCOLOR()
  {
    return color;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCOLOR(int newCOLOR)
  {
    int oldCOLOR = color;
    color = newCOLOR;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__COLOR, oldCOLOR, color));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMODULEWIDTH()
  {
    return modulewidth;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMODULEWIDTH(int newMODULEWIDTH)
  {
    int oldMODULEWIDTH = modulewidth;
    modulewidth = newMODULEWIDTH;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__MODULEWIDTH, oldMODULEWIDTH, modulewidth));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getELEMENTHEIGHT()
  {
    return elementheight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setELEMENTHEIGHT(int newELEMENTHEIGHT)
  {
    int oldELEMENTHEIGHT = elementheight;
    elementheight = newELEMENTHEIGHT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__ELEMENTHEIGHT, oldELEMENTHEIGHT, elementheight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMULT()
  {
    return mult;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMULT(int newMULT)
  {
    int oldMULT = mult;
    mult = newMULT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__MULT, oldMULT, mult));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getWENE()
  {
    return wene;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWENE(int newWENE)
  {
    int oldWENE = wene;
    wene = newWENE;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.BDD__WENE, oldWENE, wene));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<triplet> getTriplets()
  {
    if (triplets == null)
    {
      triplets = new EObjectContainmentEList<triplet>(triplet.class, this, AfpTextPackage.BDD__TRIPLETS);
    }
    return triplets;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AfpTextPackage.BDD__TRIPLETS:
        return ((InternalEList<?>)getTriplets()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.BDD__UBASE:
        return getUBASE();
      case AfpTextPackage.BDD__RESERVED:
        return getReserved();
      case AfpTextPackage.BDD__XUPUB:
        return getXUPUB();
      case AfpTextPackage.BDD__YUPUB:
        return getYUPUB();
      case AfpTextPackage.BDD__XEXTENT:
        return getXEXTENT();
      case AfpTextPackage.BDD__YEXTENT:
        return getYEXTENT();
      case AfpTextPackage.BDD__RESERVED2:
        return getReserved2();
      case AfpTextPackage.BDD__TYPE:
        return getTYPE();
      case AfpTextPackage.BDD__MOD:
        return getMOD();
      case AfpTextPackage.BDD__LID:
        return getLID();
      case AfpTextPackage.BDD__COLOR:
        return getCOLOR();
      case AfpTextPackage.BDD__MODULEWIDTH:
        return getMODULEWIDTH();
      case AfpTextPackage.BDD__ELEMENTHEIGHT:
        return getELEMENTHEIGHT();
      case AfpTextPackage.BDD__MULT:
        return getMULT();
      case AfpTextPackage.BDD__WENE:
        return getWENE();
      case AfpTextPackage.BDD__TRIPLETS:
        return getTriplets();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.BDD__UBASE:
        setUBASE((Integer)newValue);
        return;
      case AfpTextPackage.BDD__RESERVED:
        setReserved((Integer)newValue);
        return;
      case AfpTextPackage.BDD__XUPUB:
        setXUPUB((Integer)newValue);
        return;
      case AfpTextPackage.BDD__YUPUB:
        setYUPUB((Integer)newValue);
        return;
      case AfpTextPackage.BDD__XEXTENT:
        setXEXTENT((Integer)newValue);
        return;
      case AfpTextPackage.BDD__YEXTENT:
        setYEXTENT((Integer)newValue);
        return;
      case AfpTextPackage.BDD__RESERVED2:
        setReserved2((Integer)newValue);
        return;
      case AfpTextPackage.BDD__TYPE:
        setTYPE((Integer)newValue);
        return;
      case AfpTextPackage.BDD__MOD:
        setMOD((Integer)newValue);
        return;
      case AfpTextPackage.BDD__LID:
        setLID((Integer)newValue);
        return;
      case AfpTextPackage.BDD__COLOR:
        setCOLOR((Integer)newValue);
        return;
      case AfpTextPackage.BDD__MODULEWIDTH:
        setMODULEWIDTH((Integer)newValue);
        return;
      case AfpTextPackage.BDD__ELEMENTHEIGHT:
        setELEMENTHEIGHT((Integer)newValue);
        return;
      case AfpTextPackage.BDD__MULT:
        setMULT((Integer)newValue);
        return;
      case AfpTextPackage.BDD__WENE:
        setWENE((Integer)newValue);
        return;
      case AfpTextPackage.BDD__TRIPLETS:
        getTriplets().clear();
        getTriplets().addAll((Collection<? extends triplet>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.BDD__UBASE:
        setUBASE(UBASE_EDEFAULT);
        return;
      case AfpTextPackage.BDD__RESERVED:
        setReserved(RESERVED_EDEFAULT);
        return;
      case AfpTextPackage.BDD__XUPUB:
        setXUPUB(XUPUB_EDEFAULT);
        return;
      case AfpTextPackage.BDD__YUPUB:
        setYUPUB(YUPUB_EDEFAULT);
        return;
      case AfpTextPackage.BDD__XEXTENT:
        setXEXTENT(XEXTENT_EDEFAULT);
        return;
      case AfpTextPackage.BDD__YEXTENT:
        setYEXTENT(YEXTENT_EDEFAULT);
        return;
      case AfpTextPackage.BDD__RESERVED2:
        setReserved2(RESERVED2_EDEFAULT);
        return;
      case AfpTextPackage.BDD__TYPE:
        setTYPE(TYPE_EDEFAULT);
        return;
      case AfpTextPackage.BDD__MOD:
        setMOD(MOD_EDEFAULT);
        return;
      case AfpTextPackage.BDD__LID:
        setLID(LID_EDEFAULT);
        return;
      case AfpTextPackage.BDD__COLOR:
        setCOLOR(COLOR_EDEFAULT);
        return;
      case AfpTextPackage.BDD__MODULEWIDTH:
        setMODULEWIDTH(MODULEWIDTH_EDEFAULT);
        return;
      case AfpTextPackage.BDD__ELEMENTHEIGHT:
        setELEMENTHEIGHT(ELEMENTHEIGHT_EDEFAULT);
        return;
      case AfpTextPackage.BDD__MULT:
        setMULT(MULT_EDEFAULT);
        return;
      case AfpTextPackage.BDD__WENE:
        setWENE(WENE_EDEFAULT);
        return;
      case AfpTextPackage.BDD__TRIPLETS:
        getTriplets().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.BDD__UBASE:
        return ubase != UBASE_EDEFAULT;
      case AfpTextPackage.BDD__RESERVED:
        return reserved != RESERVED_EDEFAULT;
      case AfpTextPackage.BDD__XUPUB:
        return xupub != XUPUB_EDEFAULT;
      case AfpTextPackage.BDD__YUPUB:
        return yupub != YUPUB_EDEFAULT;
      case AfpTextPackage.BDD__XEXTENT:
        return xextent != XEXTENT_EDEFAULT;
      case AfpTextPackage.BDD__YEXTENT:
        return yextent != YEXTENT_EDEFAULT;
      case AfpTextPackage.BDD__RESERVED2:
        return reserved2 != RESERVED2_EDEFAULT;
      case AfpTextPackage.BDD__TYPE:
        return type != TYPE_EDEFAULT;
      case AfpTextPackage.BDD__MOD:
        return mod != MOD_EDEFAULT;
      case AfpTextPackage.BDD__LID:
        return lid != LID_EDEFAULT;
      case AfpTextPackage.BDD__COLOR:
        return color != COLOR_EDEFAULT;
      case AfpTextPackage.BDD__MODULEWIDTH:
        return modulewidth != MODULEWIDTH_EDEFAULT;
      case AfpTextPackage.BDD__ELEMENTHEIGHT:
        return elementheight != ELEMENTHEIGHT_EDEFAULT;
      case AfpTextPackage.BDD__MULT:
        return mult != MULT_EDEFAULT;
      case AfpTextPackage.BDD__WENE:
        return wene != WENE_EDEFAULT;
      case AfpTextPackage.BDD__TRIPLETS:
        return triplets != null && !triplets.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (UBASE: ");
    result.append(ubase);
    result.append(", Reserved: ");
    result.append(reserved);
    result.append(", XUPUB: ");
    result.append(xupub);
    result.append(", YUPUB: ");
    result.append(yupub);
    result.append(", XEXTENT: ");
    result.append(xextent);
    result.append(", YEXTENT: ");
    result.append(yextent);
    result.append(", Reserved2: ");
    result.append(reserved2);
    result.append(", TYPE: ");
    result.append(type);
    result.append(", MOD: ");
    result.append(mod);
    result.append(", LID: ");
    result.append(lid);
    result.append(", COLOR: ");
    result.append(color);
    result.append(", MODULEWIDTH: ");
    result.append(modulewidth);
    result.append(", ELEMENTHEIGHT: ");
    result.append(elementheight);
    result.append(", MULT: ");
    result.append(mult);
    result.append(", WENE: ");
    result.append(wene);
    result.append(')');
    return result.toString();
  }

} //BDDImpl
