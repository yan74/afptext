/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import java.util.Collection;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.CDD;
import org.afplib.afpText.triplet;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CDD</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.CDDImpl#getXocBase <em>Xoc Base</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CDDImpl#getYocBase <em>Yoc Base</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CDDImpl#getXocUnits <em>Xoc Units</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CDDImpl#getYocUnits <em>Yoc Units</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CDDImpl#getXocSize <em>Xoc Size</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CDDImpl#getYocSize <em>Yoc Size</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CDDImpl#getTriplets <em>Triplets</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CDDImpl extends structuredFieldImpl implements CDD
{
  /**
   * The default value of the '{@link #getXocBase() <em>Xoc Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXocBase()
   * @generated
   * @ordered
   */
  protected static final int XOC_BASE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXocBase() <em>Xoc Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXocBase()
   * @generated
   * @ordered
   */
  protected int xocBase = XOC_BASE_EDEFAULT;

  /**
   * The default value of the '{@link #getYocBase() <em>Yoc Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYocBase()
   * @generated
   * @ordered
   */
  protected static final int YOC_BASE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYocBase() <em>Yoc Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYocBase()
   * @generated
   * @ordered
   */
  protected int yocBase = YOC_BASE_EDEFAULT;

  /**
   * The default value of the '{@link #getXocUnits() <em>Xoc Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXocUnits()
   * @generated
   * @ordered
   */
  protected static final int XOC_UNITS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXocUnits() <em>Xoc Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXocUnits()
   * @generated
   * @ordered
   */
  protected int xocUnits = XOC_UNITS_EDEFAULT;

  /**
   * The default value of the '{@link #getYocUnits() <em>Yoc Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYocUnits()
   * @generated
   * @ordered
   */
  protected static final int YOC_UNITS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYocUnits() <em>Yoc Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYocUnits()
   * @generated
   * @ordered
   */
  protected int yocUnits = YOC_UNITS_EDEFAULT;

  /**
   * The default value of the '{@link #getXocSize() <em>Xoc Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXocSize()
   * @generated
   * @ordered
   */
  protected static final int XOC_SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXocSize() <em>Xoc Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXocSize()
   * @generated
   * @ordered
   */
  protected int xocSize = XOC_SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getYocSize() <em>Yoc Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYocSize()
   * @generated
   * @ordered
   */
  protected static final int YOC_SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYocSize() <em>Yoc Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYocSize()
   * @generated
   * @ordered
   */
  protected int yocSize = YOC_SIZE_EDEFAULT;

  /**
   * The cached value of the '{@link #getTriplets() <em>Triplets</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTriplets()
   * @generated
   * @ordered
   */
  protected EList<triplet> triplets;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CDDImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getCDD();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXocBase()
  {
    return xocBase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXocBase(int newXocBase)
  {
    int oldXocBase = xocBase;
    xocBase = newXocBase;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CDD__XOC_BASE, oldXocBase, xocBase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYocBase()
  {
    return yocBase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYocBase(int newYocBase)
  {
    int oldYocBase = yocBase;
    yocBase = newYocBase;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CDD__YOC_BASE, oldYocBase, yocBase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXocUnits()
  {
    return xocUnits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXocUnits(int newXocUnits)
  {
    int oldXocUnits = xocUnits;
    xocUnits = newXocUnits;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CDD__XOC_UNITS, oldXocUnits, xocUnits));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYocUnits()
  {
    return yocUnits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYocUnits(int newYocUnits)
  {
    int oldYocUnits = yocUnits;
    yocUnits = newYocUnits;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CDD__YOC_UNITS, oldYocUnits, yocUnits));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXocSize()
  {
    return xocSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXocSize(int newXocSize)
  {
    int oldXocSize = xocSize;
    xocSize = newXocSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CDD__XOC_SIZE, oldXocSize, xocSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYocSize()
  {
    return yocSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYocSize(int newYocSize)
  {
    int oldYocSize = yocSize;
    yocSize = newYocSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CDD__YOC_SIZE, oldYocSize, yocSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<triplet> getTriplets()
  {
    if (triplets == null)
    {
      triplets = new EObjectContainmentEList<triplet>(triplet.class, this, AfpTextPackage.CDD__TRIPLETS);
    }
    return triplets;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AfpTextPackage.CDD__TRIPLETS:
        return ((InternalEList<?>)getTriplets()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.CDD__XOC_BASE:
        return getXocBase();
      case AfpTextPackage.CDD__YOC_BASE:
        return getYocBase();
      case AfpTextPackage.CDD__XOC_UNITS:
        return getXocUnits();
      case AfpTextPackage.CDD__YOC_UNITS:
        return getYocUnits();
      case AfpTextPackage.CDD__XOC_SIZE:
        return getXocSize();
      case AfpTextPackage.CDD__YOC_SIZE:
        return getYocSize();
      case AfpTextPackage.CDD__TRIPLETS:
        return getTriplets();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.CDD__XOC_BASE:
        setXocBase((Integer)newValue);
        return;
      case AfpTextPackage.CDD__YOC_BASE:
        setYocBase((Integer)newValue);
        return;
      case AfpTextPackage.CDD__XOC_UNITS:
        setXocUnits((Integer)newValue);
        return;
      case AfpTextPackage.CDD__YOC_UNITS:
        setYocUnits((Integer)newValue);
        return;
      case AfpTextPackage.CDD__XOC_SIZE:
        setXocSize((Integer)newValue);
        return;
      case AfpTextPackage.CDD__YOC_SIZE:
        setYocSize((Integer)newValue);
        return;
      case AfpTextPackage.CDD__TRIPLETS:
        getTriplets().clear();
        getTriplets().addAll((Collection<? extends triplet>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.CDD__XOC_BASE:
        setXocBase(XOC_BASE_EDEFAULT);
        return;
      case AfpTextPackage.CDD__YOC_BASE:
        setYocBase(YOC_BASE_EDEFAULT);
        return;
      case AfpTextPackage.CDD__XOC_UNITS:
        setXocUnits(XOC_UNITS_EDEFAULT);
        return;
      case AfpTextPackage.CDD__YOC_UNITS:
        setYocUnits(YOC_UNITS_EDEFAULT);
        return;
      case AfpTextPackage.CDD__XOC_SIZE:
        setXocSize(XOC_SIZE_EDEFAULT);
        return;
      case AfpTextPackage.CDD__YOC_SIZE:
        setYocSize(YOC_SIZE_EDEFAULT);
        return;
      case AfpTextPackage.CDD__TRIPLETS:
        getTriplets().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.CDD__XOC_BASE:
        return xocBase != XOC_BASE_EDEFAULT;
      case AfpTextPackage.CDD__YOC_BASE:
        return yocBase != YOC_BASE_EDEFAULT;
      case AfpTextPackage.CDD__XOC_UNITS:
        return xocUnits != XOC_UNITS_EDEFAULT;
      case AfpTextPackage.CDD__YOC_UNITS:
        return yocUnits != YOC_UNITS_EDEFAULT;
      case AfpTextPackage.CDD__XOC_SIZE:
        return xocSize != XOC_SIZE_EDEFAULT;
      case AfpTextPackage.CDD__YOC_SIZE:
        return yocSize != YOC_SIZE_EDEFAULT;
      case AfpTextPackage.CDD__TRIPLETS:
        return triplets != null && !triplets.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (XocBase: ");
    result.append(xocBase);
    result.append(", YocBase: ");
    result.append(yocBase);
    result.append(", XocUnits: ");
    result.append(xocUnits);
    result.append(", YocUnits: ");
    result.append(yocUnits);
    result.append(", XocSize: ");
    result.append(xocSize);
    result.append(", YocSize: ");
    result.append(yocSize);
    result.append(')');
    return result.toString();
  }

} //CDDImpl
