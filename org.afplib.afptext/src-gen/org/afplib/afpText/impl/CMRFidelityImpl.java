/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.CMRFidelity;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CMR Fidelity</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.CMRFidelityImpl#getStpCMREx <em>Stp CMR Ex</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CMRFidelityImpl#getRepCMREx <em>Rep CMR Ex</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CMRFidelityImpl extends tripletImpl implements CMRFidelity
{
  /**
   * The default value of the '{@link #getStpCMREx() <em>Stp CMR Ex</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStpCMREx()
   * @generated
   * @ordered
   */
  protected static final int STP_CMR_EX_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getStpCMREx() <em>Stp CMR Ex</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStpCMREx()
   * @generated
   * @ordered
   */
  protected int stpCMREx = STP_CMR_EX_EDEFAULT;

  /**
   * The default value of the '{@link #getRepCMREx() <em>Rep CMR Ex</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRepCMREx()
   * @generated
   * @ordered
   */
  protected static final int REP_CMR_EX_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRepCMREx() <em>Rep CMR Ex</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRepCMREx()
   * @generated
   * @ordered
   */
  protected int repCMREx = REP_CMR_EX_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CMRFidelityImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getCMRFidelity();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getStpCMREx()
  {
    return stpCMREx;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStpCMREx(int newStpCMREx)
  {
    int oldStpCMREx = stpCMREx;
    stpCMREx = newStpCMREx;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CMR_FIDELITY__STP_CMR_EX, oldStpCMREx, stpCMREx));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getRepCMREx()
  {
    return repCMREx;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRepCMREx(int newRepCMREx)
  {
    int oldRepCMREx = repCMREx;
    repCMREx = newRepCMREx;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CMR_FIDELITY__REP_CMR_EX, oldRepCMREx, repCMREx));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.CMR_FIDELITY__STP_CMR_EX:
        return getStpCMREx();
      case AfpTextPackage.CMR_FIDELITY__REP_CMR_EX:
        return getRepCMREx();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.CMR_FIDELITY__STP_CMR_EX:
        setStpCMREx((Integer)newValue);
        return;
      case AfpTextPackage.CMR_FIDELITY__REP_CMR_EX:
        setRepCMREx((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.CMR_FIDELITY__STP_CMR_EX:
        setStpCMREx(STP_CMR_EX_EDEFAULT);
        return;
      case AfpTextPackage.CMR_FIDELITY__REP_CMR_EX:
        setRepCMREx(REP_CMR_EX_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.CMR_FIDELITY__STP_CMR_EX:
        return stpCMREx != STP_CMR_EX_EDEFAULT;
      case AfpTextPackage.CMR_FIDELITY__REP_CMR_EX:
        return repCMREx != REP_CMR_EX_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (StpCMREx: ");
    result.append(stpCMREx);
    result.append(", RepCMREx: ");
    result.append(repCMREx);
    result.append(')');
    return result.toString();
  }

} //CMRFidelityImpl
