/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.CPC;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>CPC</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.CPCImpl#getDefCharID <em>Def Char ID</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CPCImpl#getPrtFlags <em>Prt Flags</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CPCImpl#getCPIRGLen <em>CPIRG Len</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CPCImpl#getVSCharSN <em>VS Char SN</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CPCImpl#getVSChar <em>VS Char</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.CPCImpl#getVSFlags <em>VS Flags</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CPCImpl extends structuredFieldImpl implements CPC
{
  /**
   * The default value of the '{@link #getDefCharID() <em>Def Char ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefCharID()
   * @generated
   * @ordered
   */
  protected static final String DEF_CHAR_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefCharID() <em>Def Char ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefCharID()
   * @generated
   * @ordered
   */
  protected String defCharID = DEF_CHAR_ID_EDEFAULT;

  /**
   * The default value of the '{@link #getPrtFlags() <em>Prt Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrtFlags()
   * @generated
   * @ordered
   */
  protected static final int PRT_FLAGS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPrtFlags() <em>Prt Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrtFlags()
   * @generated
   * @ordered
   */
  protected int prtFlags = PRT_FLAGS_EDEFAULT;

  /**
   * The default value of the '{@link #getCPIRGLen() <em>CPIRG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCPIRGLen()
   * @generated
   * @ordered
   */
  protected static final int CPIRG_LEN_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCPIRGLen() <em>CPIRG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCPIRGLen()
   * @generated
   * @ordered
   */
  protected int cpirgLen = CPIRG_LEN_EDEFAULT;

  /**
   * The default value of the '{@link #getVSCharSN() <em>VS Char SN</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVSCharSN()
   * @generated
   * @ordered
   */
  protected static final int VS_CHAR_SN_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getVSCharSN() <em>VS Char SN</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVSCharSN()
   * @generated
   * @ordered
   */
  protected int vsCharSN = VS_CHAR_SN_EDEFAULT;

  /**
   * The default value of the '{@link #getVSChar() <em>VS Char</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVSChar()
   * @generated
   * @ordered
   */
  protected static final int VS_CHAR_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getVSChar() <em>VS Char</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVSChar()
   * @generated
   * @ordered
   */
  protected int vsChar = VS_CHAR_EDEFAULT;

  /**
   * The default value of the '{@link #getVSFlags() <em>VS Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVSFlags()
   * @generated
   * @ordered
   */
  protected static final int VS_FLAGS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getVSFlags() <em>VS Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVSFlags()
   * @generated
   * @ordered
   */
  protected int vsFlags = VS_FLAGS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CPCImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getCPC();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDefCharID()
  {
    return defCharID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefCharID(String newDefCharID)
  {
    String oldDefCharID = defCharID;
    defCharID = newDefCharID;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CPC__DEF_CHAR_ID, oldDefCharID, defCharID));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getPrtFlags()
  {
    return prtFlags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrtFlags(int newPrtFlags)
  {
    int oldPrtFlags = prtFlags;
    prtFlags = newPrtFlags;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CPC__PRT_FLAGS, oldPrtFlags, prtFlags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCPIRGLen()
  {
    return cpirgLen;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCPIRGLen(int newCPIRGLen)
  {
    int oldCPIRGLen = cpirgLen;
    cpirgLen = newCPIRGLen;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CPC__CPIRG_LEN, oldCPIRGLen, cpirgLen));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getVSCharSN()
  {
    return vsCharSN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVSCharSN(int newVSCharSN)
  {
    int oldVSCharSN = vsCharSN;
    vsCharSN = newVSCharSN;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CPC__VS_CHAR_SN, oldVSCharSN, vsCharSN));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getVSChar()
  {
    return vsChar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVSChar(int newVSChar)
  {
    int oldVSChar = vsChar;
    vsChar = newVSChar;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CPC__VS_CHAR, oldVSChar, vsChar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getVSFlags()
  {
    return vsFlags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVSFlags(int newVSFlags)
  {
    int oldVSFlags = vsFlags;
    vsFlags = newVSFlags;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.CPC__VS_FLAGS, oldVSFlags, vsFlags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.CPC__DEF_CHAR_ID:
        return getDefCharID();
      case AfpTextPackage.CPC__PRT_FLAGS:
        return getPrtFlags();
      case AfpTextPackage.CPC__CPIRG_LEN:
        return getCPIRGLen();
      case AfpTextPackage.CPC__VS_CHAR_SN:
        return getVSCharSN();
      case AfpTextPackage.CPC__VS_CHAR:
        return getVSChar();
      case AfpTextPackage.CPC__VS_FLAGS:
        return getVSFlags();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.CPC__DEF_CHAR_ID:
        setDefCharID((String)newValue);
        return;
      case AfpTextPackage.CPC__PRT_FLAGS:
        setPrtFlags((Integer)newValue);
        return;
      case AfpTextPackage.CPC__CPIRG_LEN:
        setCPIRGLen((Integer)newValue);
        return;
      case AfpTextPackage.CPC__VS_CHAR_SN:
        setVSCharSN((Integer)newValue);
        return;
      case AfpTextPackage.CPC__VS_CHAR:
        setVSChar((Integer)newValue);
        return;
      case AfpTextPackage.CPC__VS_FLAGS:
        setVSFlags((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.CPC__DEF_CHAR_ID:
        setDefCharID(DEF_CHAR_ID_EDEFAULT);
        return;
      case AfpTextPackage.CPC__PRT_FLAGS:
        setPrtFlags(PRT_FLAGS_EDEFAULT);
        return;
      case AfpTextPackage.CPC__CPIRG_LEN:
        setCPIRGLen(CPIRG_LEN_EDEFAULT);
        return;
      case AfpTextPackage.CPC__VS_CHAR_SN:
        setVSCharSN(VS_CHAR_SN_EDEFAULT);
        return;
      case AfpTextPackage.CPC__VS_CHAR:
        setVSChar(VS_CHAR_EDEFAULT);
        return;
      case AfpTextPackage.CPC__VS_FLAGS:
        setVSFlags(VS_FLAGS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.CPC__DEF_CHAR_ID:
        return DEF_CHAR_ID_EDEFAULT == null ? defCharID != null : !DEF_CHAR_ID_EDEFAULT.equals(defCharID);
      case AfpTextPackage.CPC__PRT_FLAGS:
        return prtFlags != PRT_FLAGS_EDEFAULT;
      case AfpTextPackage.CPC__CPIRG_LEN:
        return cpirgLen != CPIRG_LEN_EDEFAULT;
      case AfpTextPackage.CPC__VS_CHAR_SN:
        return vsCharSN != VS_CHAR_SN_EDEFAULT;
      case AfpTextPackage.CPC__VS_CHAR:
        return vsChar != VS_CHAR_EDEFAULT;
      case AfpTextPackage.CPC__VS_FLAGS:
        return vsFlags != VS_FLAGS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (DefCharID: ");
    result.append(defCharID);
    result.append(", PrtFlags: ");
    result.append(prtFlags);
    result.append(", CPIRGLen: ");
    result.append(cpirgLen);
    result.append(", VSCharSN: ");
    result.append(vsCharSN);
    result.append(", VSChar: ");
    result.append(vsChar);
    result.append(", VSFlags: ");
    result.append(vsFlags);
    result.append(')');
    return result.toString();
  }

} //CPCImpl
