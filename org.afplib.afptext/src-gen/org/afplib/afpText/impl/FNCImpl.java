/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import java.util.Collection;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.FNC;
import org.afplib.afpText.triplet;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>FNC</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getRetired <em>Retired</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getPatTech <em>Pat Tech</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getReserved1 <em>Reserved1</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getFntFlags <em>Fnt Flags</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getXUnitBase <em>XUnit Base</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getYUnitBase <em>YUnit Base</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getXftUnits <em>Xft Units</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getYftUnits <em>Yft Units</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getMaxBoxWd <em>Max Box Wd</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getMaxBoxHt <em>Max Box Ht</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getFNORGLen <em>FNORG Len</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getFNIRGLen <em>FNIRG Len</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getPatAlign <em>Pat Align</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getRPatDCnt <em>RPat DCnt</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getFNPRGLen <em>FNPRG Len</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getFNMRGLen <em>FNMRG Len</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getResXUBase <em>Res XU Base</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getResYUBase <em>Res YU Base</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getXfrUnits <em>Xfr Units</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getYfrUnits <em>Yfr Units</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getOPatDCnt <em>OPat DCnt</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getReserved2 <em>Reserved2</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getFNNRGLen <em>FNNRG Len</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getFNNDCnt <em>FNND Cnt</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getFNNMapCnt <em>FNN Map Cnt</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNCImpl#getTriplets <em>Triplets</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FNCImpl extends structuredFieldImpl implements FNC
{
  /**
   * The default value of the '{@link #getRetired() <em>Retired</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRetired()
   * @generated
   * @ordered
   */
  protected static final int RETIRED_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRetired() <em>Retired</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRetired()
   * @generated
   * @ordered
   */
  protected int retired = RETIRED_EDEFAULT;

  /**
   * The default value of the '{@link #getPatTech() <em>Pat Tech</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPatTech()
   * @generated
   * @ordered
   */
  protected static final int PAT_TECH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPatTech() <em>Pat Tech</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPatTech()
   * @generated
   * @ordered
   */
  protected int patTech = PAT_TECH_EDEFAULT;

  /**
   * The default value of the '{@link #getReserved1() <em>Reserved1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved1()
   * @generated
   * @ordered
   */
  protected static final String RESERVED1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReserved1() <em>Reserved1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved1()
   * @generated
   * @ordered
   */
  protected String reserved1 = RESERVED1_EDEFAULT;

  /**
   * The default value of the '{@link #getFntFlags() <em>Fnt Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFntFlags()
   * @generated
   * @ordered
   */
  protected static final int FNT_FLAGS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFntFlags() <em>Fnt Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFntFlags()
   * @generated
   * @ordered
   */
  protected int fntFlags = FNT_FLAGS_EDEFAULT;

  /**
   * The default value of the '{@link #getXUnitBase() <em>XUnit Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXUnitBase()
   * @generated
   * @ordered
   */
  protected static final int XUNIT_BASE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXUnitBase() <em>XUnit Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXUnitBase()
   * @generated
   * @ordered
   */
  protected int xUnitBase = XUNIT_BASE_EDEFAULT;

  /**
   * The default value of the '{@link #getYUnitBase() <em>YUnit Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYUnitBase()
   * @generated
   * @ordered
   */
  protected static final int YUNIT_BASE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYUnitBase() <em>YUnit Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYUnitBase()
   * @generated
   * @ordered
   */
  protected int yUnitBase = YUNIT_BASE_EDEFAULT;

  /**
   * The default value of the '{@link #getXftUnits() <em>Xft Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXftUnits()
   * @generated
   * @ordered
   */
  protected static final int XFT_UNITS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXftUnits() <em>Xft Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXftUnits()
   * @generated
   * @ordered
   */
  protected int xftUnits = XFT_UNITS_EDEFAULT;

  /**
   * The default value of the '{@link #getYftUnits() <em>Yft Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYftUnits()
   * @generated
   * @ordered
   */
  protected static final int YFT_UNITS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYftUnits() <em>Yft Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYftUnits()
   * @generated
   * @ordered
   */
  protected int yftUnits = YFT_UNITS_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxBoxWd() <em>Max Box Wd</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxBoxWd()
   * @generated
   * @ordered
   */
  protected static final int MAX_BOX_WD_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxBoxWd() <em>Max Box Wd</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxBoxWd()
   * @generated
   * @ordered
   */
  protected int maxBoxWd = MAX_BOX_WD_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxBoxHt() <em>Max Box Ht</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxBoxHt()
   * @generated
   * @ordered
   */
  protected static final int MAX_BOX_HT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxBoxHt() <em>Max Box Ht</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxBoxHt()
   * @generated
   * @ordered
   */
  protected int maxBoxHt = MAX_BOX_HT_EDEFAULT;

  /**
   * The default value of the '{@link #getFNORGLen() <em>FNORG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNORGLen()
   * @generated
   * @ordered
   */
  protected static final int FNORG_LEN_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFNORGLen() <em>FNORG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNORGLen()
   * @generated
   * @ordered
   */
  protected int fnorgLen = FNORG_LEN_EDEFAULT;

  /**
   * The default value of the '{@link #getFNIRGLen() <em>FNIRG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNIRGLen()
   * @generated
   * @ordered
   */
  protected static final int FNIRG_LEN_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFNIRGLen() <em>FNIRG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNIRGLen()
   * @generated
   * @ordered
   */
  protected int fnirgLen = FNIRG_LEN_EDEFAULT;

  /**
   * The default value of the '{@link #getPatAlign() <em>Pat Align</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPatAlign()
   * @generated
   * @ordered
   */
  protected static final int PAT_ALIGN_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPatAlign() <em>Pat Align</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPatAlign()
   * @generated
   * @ordered
   */
  protected int patAlign = PAT_ALIGN_EDEFAULT;

  /**
   * The default value of the '{@link #getRPatDCnt() <em>RPat DCnt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRPatDCnt()
   * @generated
   * @ordered
   */
  protected static final int RPAT_DCNT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRPatDCnt() <em>RPat DCnt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRPatDCnt()
   * @generated
   * @ordered
   */
  protected int rPatDCnt = RPAT_DCNT_EDEFAULT;

  /**
   * The default value of the '{@link #getFNPRGLen() <em>FNPRG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNPRGLen()
   * @generated
   * @ordered
   */
  protected static final int FNPRG_LEN_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFNPRGLen() <em>FNPRG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNPRGLen()
   * @generated
   * @ordered
   */
  protected int fnprgLen = FNPRG_LEN_EDEFAULT;

  /**
   * The default value of the '{@link #getFNMRGLen() <em>FNMRG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNMRGLen()
   * @generated
   * @ordered
   */
  protected static final int FNMRG_LEN_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFNMRGLen() <em>FNMRG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNMRGLen()
   * @generated
   * @ordered
   */
  protected int fnmrgLen = FNMRG_LEN_EDEFAULT;

  /**
   * The default value of the '{@link #getResXUBase() <em>Res XU Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResXUBase()
   * @generated
   * @ordered
   */
  protected static final int RES_XU_BASE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getResXUBase() <em>Res XU Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResXUBase()
   * @generated
   * @ordered
   */
  protected int resXUBase = RES_XU_BASE_EDEFAULT;

  /**
   * The default value of the '{@link #getResYUBase() <em>Res YU Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResYUBase()
   * @generated
   * @ordered
   */
  protected static final int RES_YU_BASE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getResYUBase() <em>Res YU Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResYUBase()
   * @generated
   * @ordered
   */
  protected int resYUBase = RES_YU_BASE_EDEFAULT;

  /**
   * The default value of the '{@link #getXfrUnits() <em>Xfr Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXfrUnits()
   * @generated
   * @ordered
   */
  protected static final int XFR_UNITS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXfrUnits() <em>Xfr Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXfrUnits()
   * @generated
   * @ordered
   */
  protected int xfrUnits = XFR_UNITS_EDEFAULT;

  /**
   * The default value of the '{@link #getYfrUnits() <em>Yfr Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYfrUnits()
   * @generated
   * @ordered
   */
  protected static final int YFR_UNITS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYfrUnits() <em>Yfr Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYfrUnits()
   * @generated
   * @ordered
   */
  protected int yfrUnits = YFR_UNITS_EDEFAULT;

  /**
   * The default value of the '{@link #getOPatDCnt() <em>OPat DCnt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOPatDCnt()
   * @generated
   * @ordered
   */
  protected static final int OPAT_DCNT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getOPatDCnt() <em>OPat DCnt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOPatDCnt()
   * @generated
   * @ordered
   */
  protected int oPatDCnt = OPAT_DCNT_EDEFAULT;

  /**
   * The default value of the '{@link #getReserved2() <em>Reserved2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved2()
   * @generated
   * @ordered
   */
  protected static final String RESERVED2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReserved2() <em>Reserved2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved2()
   * @generated
   * @ordered
   */
  protected String reserved2 = RESERVED2_EDEFAULT;

  /**
   * The default value of the '{@link #getFNNRGLen() <em>FNNRG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNNRGLen()
   * @generated
   * @ordered
   */
  protected static final int FNNRG_LEN_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFNNRGLen() <em>FNNRG Len</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNNRGLen()
   * @generated
   * @ordered
   */
  protected int fnnrgLen = FNNRG_LEN_EDEFAULT;

  /**
   * The default value of the '{@link #getFNNDCnt() <em>FNND Cnt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNNDCnt()
   * @generated
   * @ordered
   */
  protected static final int FNND_CNT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFNNDCnt() <em>FNND Cnt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNNDCnt()
   * @generated
   * @ordered
   */
  protected int fnndCnt = FNND_CNT_EDEFAULT;

  /**
   * The default value of the '{@link #getFNNMapCnt() <em>FNN Map Cnt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNNMapCnt()
   * @generated
   * @ordered
   */
  protected static final int FNN_MAP_CNT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFNNMapCnt() <em>FNN Map Cnt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNNMapCnt()
   * @generated
   * @ordered
   */
  protected int fnnMapCnt = FNN_MAP_CNT_EDEFAULT;

  /**
   * The cached value of the '{@link #getTriplets() <em>Triplets</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTriplets()
   * @generated
   * @ordered
   */
  protected EList<triplet> triplets;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FNCImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getFNC();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getRetired()
  {
    return retired;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRetired(int newRetired)
  {
    int oldRetired = retired;
    retired = newRetired;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__RETIRED, oldRetired, retired));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getPatTech()
  {
    return patTech;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPatTech(int newPatTech)
  {
    int oldPatTech = patTech;
    patTech = newPatTech;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__PAT_TECH, oldPatTech, patTech));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReserved1()
  {
    return reserved1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReserved1(String newReserved1)
  {
    String oldReserved1 = reserved1;
    reserved1 = newReserved1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__RESERVED1, oldReserved1, reserved1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFntFlags()
  {
    return fntFlags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFntFlags(int newFntFlags)
  {
    int oldFntFlags = fntFlags;
    fntFlags = newFntFlags;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__FNT_FLAGS, oldFntFlags, fntFlags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXUnitBase()
  {
    return xUnitBase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXUnitBase(int newXUnitBase)
  {
    int oldXUnitBase = xUnitBase;
    xUnitBase = newXUnitBase;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__XUNIT_BASE, oldXUnitBase, xUnitBase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYUnitBase()
  {
    return yUnitBase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYUnitBase(int newYUnitBase)
  {
    int oldYUnitBase = yUnitBase;
    yUnitBase = newYUnitBase;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__YUNIT_BASE, oldYUnitBase, yUnitBase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXftUnits()
  {
    return xftUnits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXftUnits(int newXftUnits)
  {
    int oldXftUnits = xftUnits;
    xftUnits = newXftUnits;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__XFT_UNITS, oldXftUnits, xftUnits));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYftUnits()
  {
    return yftUnits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYftUnits(int newYftUnits)
  {
    int oldYftUnits = yftUnits;
    yftUnits = newYftUnits;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__YFT_UNITS, oldYftUnits, yftUnits));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMaxBoxWd()
  {
    return maxBoxWd;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaxBoxWd(int newMaxBoxWd)
  {
    int oldMaxBoxWd = maxBoxWd;
    maxBoxWd = newMaxBoxWd;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__MAX_BOX_WD, oldMaxBoxWd, maxBoxWd));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMaxBoxHt()
  {
    return maxBoxHt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaxBoxHt(int newMaxBoxHt)
  {
    int oldMaxBoxHt = maxBoxHt;
    maxBoxHt = newMaxBoxHt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__MAX_BOX_HT, oldMaxBoxHt, maxBoxHt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFNORGLen()
  {
    return fnorgLen;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFNORGLen(int newFNORGLen)
  {
    int oldFNORGLen = fnorgLen;
    fnorgLen = newFNORGLen;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__FNORG_LEN, oldFNORGLen, fnorgLen));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFNIRGLen()
  {
    return fnirgLen;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFNIRGLen(int newFNIRGLen)
  {
    int oldFNIRGLen = fnirgLen;
    fnirgLen = newFNIRGLen;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__FNIRG_LEN, oldFNIRGLen, fnirgLen));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getPatAlign()
  {
    return patAlign;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPatAlign(int newPatAlign)
  {
    int oldPatAlign = patAlign;
    patAlign = newPatAlign;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__PAT_ALIGN, oldPatAlign, patAlign));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getRPatDCnt()
  {
    return rPatDCnt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRPatDCnt(int newRPatDCnt)
  {
    int oldRPatDCnt = rPatDCnt;
    rPatDCnt = newRPatDCnt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__RPAT_DCNT, oldRPatDCnt, rPatDCnt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFNPRGLen()
  {
    return fnprgLen;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFNPRGLen(int newFNPRGLen)
  {
    int oldFNPRGLen = fnprgLen;
    fnprgLen = newFNPRGLen;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__FNPRG_LEN, oldFNPRGLen, fnprgLen));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFNMRGLen()
  {
    return fnmrgLen;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFNMRGLen(int newFNMRGLen)
  {
    int oldFNMRGLen = fnmrgLen;
    fnmrgLen = newFNMRGLen;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__FNMRG_LEN, oldFNMRGLen, fnmrgLen));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getResXUBase()
  {
    return resXUBase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setResXUBase(int newResXUBase)
  {
    int oldResXUBase = resXUBase;
    resXUBase = newResXUBase;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__RES_XU_BASE, oldResXUBase, resXUBase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getResYUBase()
  {
    return resYUBase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setResYUBase(int newResYUBase)
  {
    int oldResYUBase = resYUBase;
    resYUBase = newResYUBase;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__RES_YU_BASE, oldResYUBase, resYUBase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXfrUnits()
  {
    return xfrUnits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXfrUnits(int newXfrUnits)
  {
    int oldXfrUnits = xfrUnits;
    xfrUnits = newXfrUnits;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__XFR_UNITS, oldXfrUnits, xfrUnits));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYfrUnits()
  {
    return yfrUnits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYfrUnits(int newYfrUnits)
  {
    int oldYfrUnits = yfrUnits;
    yfrUnits = newYfrUnits;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__YFR_UNITS, oldYfrUnits, yfrUnits));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getOPatDCnt()
  {
    return oPatDCnt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOPatDCnt(int newOPatDCnt)
  {
    int oldOPatDCnt = oPatDCnt;
    oPatDCnt = newOPatDCnt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__OPAT_DCNT, oldOPatDCnt, oPatDCnt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReserved2()
  {
    return reserved2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReserved2(String newReserved2)
  {
    String oldReserved2 = reserved2;
    reserved2 = newReserved2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__RESERVED2, oldReserved2, reserved2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFNNRGLen()
  {
    return fnnrgLen;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFNNRGLen(int newFNNRGLen)
  {
    int oldFNNRGLen = fnnrgLen;
    fnnrgLen = newFNNRGLen;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__FNNRG_LEN, oldFNNRGLen, fnnrgLen));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFNNDCnt()
  {
    return fnndCnt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFNNDCnt(int newFNNDCnt)
  {
    int oldFNNDCnt = fnndCnt;
    fnndCnt = newFNNDCnt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__FNND_CNT, oldFNNDCnt, fnndCnt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFNNMapCnt()
  {
    return fnnMapCnt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFNNMapCnt(int newFNNMapCnt)
  {
    int oldFNNMapCnt = fnnMapCnt;
    fnnMapCnt = newFNNMapCnt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNC__FNN_MAP_CNT, oldFNNMapCnt, fnnMapCnt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<triplet> getTriplets()
  {
    if (triplets == null)
    {
      triplets = new EObjectContainmentEList<triplet>(triplet.class, this, AfpTextPackage.FNC__TRIPLETS);
    }
    return triplets;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNC__TRIPLETS:
        return ((InternalEList<?>)getTriplets()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNC__RETIRED:
        return getRetired();
      case AfpTextPackage.FNC__PAT_TECH:
        return getPatTech();
      case AfpTextPackage.FNC__RESERVED1:
        return getReserved1();
      case AfpTextPackage.FNC__FNT_FLAGS:
        return getFntFlags();
      case AfpTextPackage.FNC__XUNIT_BASE:
        return getXUnitBase();
      case AfpTextPackage.FNC__YUNIT_BASE:
        return getYUnitBase();
      case AfpTextPackage.FNC__XFT_UNITS:
        return getXftUnits();
      case AfpTextPackage.FNC__YFT_UNITS:
        return getYftUnits();
      case AfpTextPackage.FNC__MAX_BOX_WD:
        return getMaxBoxWd();
      case AfpTextPackage.FNC__MAX_BOX_HT:
        return getMaxBoxHt();
      case AfpTextPackage.FNC__FNORG_LEN:
        return getFNORGLen();
      case AfpTextPackage.FNC__FNIRG_LEN:
        return getFNIRGLen();
      case AfpTextPackage.FNC__PAT_ALIGN:
        return getPatAlign();
      case AfpTextPackage.FNC__RPAT_DCNT:
        return getRPatDCnt();
      case AfpTextPackage.FNC__FNPRG_LEN:
        return getFNPRGLen();
      case AfpTextPackage.FNC__FNMRG_LEN:
        return getFNMRGLen();
      case AfpTextPackage.FNC__RES_XU_BASE:
        return getResXUBase();
      case AfpTextPackage.FNC__RES_YU_BASE:
        return getResYUBase();
      case AfpTextPackage.FNC__XFR_UNITS:
        return getXfrUnits();
      case AfpTextPackage.FNC__YFR_UNITS:
        return getYfrUnits();
      case AfpTextPackage.FNC__OPAT_DCNT:
        return getOPatDCnt();
      case AfpTextPackage.FNC__RESERVED2:
        return getReserved2();
      case AfpTextPackage.FNC__FNNRG_LEN:
        return getFNNRGLen();
      case AfpTextPackage.FNC__FNND_CNT:
        return getFNNDCnt();
      case AfpTextPackage.FNC__FNN_MAP_CNT:
        return getFNNMapCnt();
      case AfpTextPackage.FNC__TRIPLETS:
        return getTriplets();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNC__RETIRED:
        setRetired((Integer)newValue);
        return;
      case AfpTextPackage.FNC__PAT_TECH:
        setPatTech((Integer)newValue);
        return;
      case AfpTextPackage.FNC__RESERVED1:
        setReserved1((String)newValue);
        return;
      case AfpTextPackage.FNC__FNT_FLAGS:
        setFntFlags((Integer)newValue);
        return;
      case AfpTextPackage.FNC__XUNIT_BASE:
        setXUnitBase((Integer)newValue);
        return;
      case AfpTextPackage.FNC__YUNIT_BASE:
        setYUnitBase((Integer)newValue);
        return;
      case AfpTextPackage.FNC__XFT_UNITS:
        setXftUnits((Integer)newValue);
        return;
      case AfpTextPackage.FNC__YFT_UNITS:
        setYftUnits((Integer)newValue);
        return;
      case AfpTextPackage.FNC__MAX_BOX_WD:
        setMaxBoxWd((Integer)newValue);
        return;
      case AfpTextPackage.FNC__MAX_BOX_HT:
        setMaxBoxHt((Integer)newValue);
        return;
      case AfpTextPackage.FNC__FNORG_LEN:
        setFNORGLen((Integer)newValue);
        return;
      case AfpTextPackage.FNC__FNIRG_LEN:
        setFNIRGLen((Integer)newValue);
        return;
      case AfpTextPackage.FNC__PAT_ALIGN:
        setPatAlign((Integer)newValue);
        return;
      case AfpTextPackage.FNC__RPAT_DCNT:
        setRPatDCnt((Integer)newValue);
        return;
      case AfpTextPackage.FNC__FNPRG_LEN:
        setFNPRGLen((Integer)newValue);
        return;
      case AfpTextPackage.FNC__FNMRG_LEN:
        setFNMRGLen((Integer)newValue);
        return;
      case AfpTextPackage.FNC__RES_XU_BASE:
        setResXUBase((Integer)newValue);
        return;
      case AfpTextPackage.FNC__RES_YU_BASE:
        setResYUBase((Integer)newValue);
        return;
      case AfpTextPackage.FNC__XFR_UNITS:
        setXfrUnits((Integer)newValue);
        return;
      case AfpTextPackage.FNC__YFR_UNITS:
        setYfrUnits((Integer)newValue);
        return;
      case AfpTextPackage.FNC__OPAT_DCNT:
        setOPatDCnt((Integer)newValue);
        return;
      case AfpTextPackage.FNC__RESERVED2:
        setReserved2((String)newValue);
        return;
      case AfpTextPackage.FNC__FNNRG_LEN:
        setFNNRGLen((Integer)newValue);
        return;
      case AfpTextPackage.FNC__FNND_CNT:
        setFNNDCnt((Integer)newValue);
        return;
      case AfpTextPackage.FNC__FNN_MAP_CNT:
        setFNNMapCnt((Integer)newValue);
        return;
      case AfpTextPackage.FNC__TRIPLETS:
        getTriplets().clear();
        getTriplets().addAll((Collection<? extends triplet>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNC__RETIRED:
        setRetired(RETIRED_EDEFAULT);
        return;
      case AfpTextPackage.FNC__PAT_TECH:
        setPatTech(PAT_TECH_EDEFAULT);
        return;
      case AfpTextPackage.FNC__RESERVED1:
        setReserved1(RESERVED1_EDEFAULT);
        return;
      case AfpTextPackage.FNC__FNT_FLAGS:
        setFntFlags(FNT_FLAGS_EDEFAULT);
        return;
      case AfpTextPackage.FNC__XUNIT_BASE:
        setXUnitBase(XUNIT_BASE_EDEFAULT);
        return;
      case AfpTextPackage.FNC__YUNIT_BASE:
        setYUnitBase(YUNIT_BASE_EDEFAULT);
        return;
      case AfpTextPackage.FNC__XFT_UNITS:
        setXftUnits(XFT_UNITS_EDEFAULT);
        return;
      case AfpTextPackage.FNC__YFT_UNITS:
        setYftUnits(YFT_UNITS_EDEFAULT);
        return;
      case AfpTextPackage.FNC__MAX_BOX_WD:
        setMaxBoxWd(MAX_BOX_WD_EDEFAULT);
        return;
      case AfpTextPackage.FNC__MAX_BOX_HT:
        setMaxBoxHt(MAX_BOX_HT_EDEFAULT);
        return;
      case AfpTextPackage.FNC__FNORG_LEN:
        setFNORGLen(FNORG_LEN_EDEFAULT);
        return;
      case AfpTextPackage.FNC__FNIRG_LEN:
        setFNIRGLen(FNIRG_LEN_EDEFAULT);
        return;
      case AfpTextPackage.FNC__PAT_ALIGN:
        setPatAlign(PAT_ALIGN_EDEFAULT);
        return;
      case AfpTextPackage.FNC__RPAT_DCNT:
        setRPatDCnt(RPAT_DCNT_EDEFAULT);
        return;
      case AfpTextPackage.FNC__FNPRG_LEN:
        setFNPRGLen(FNPRG_LEN_EDEFAULT);
        return;
      case AfpTextPackage.FNC__FNMRG_LEN:
        setFNMRGLen(FNMRG_LEN_EDEFAULT);
        return;
      case AfpTextPackage.FNC__RES_XU_BASE:
        setResXUBase(RES_XU_BASE_EDEFAULT);
        return;
      case AfpTextPackage.FNC__RES_YU_BASE:
        setResYUBase(RES_YU_BASE_EDEFAULT);
        return;
      case AfpTextPackage.FNC__XFR_UNITS:
        setXfrUnits(XFR_UNITS_EDEFAULT);
        return;
      case AfpTextPackage.FNC__YFR_UNITS:
        setYfrUnits(YFR_UNITS_EDEFAULT);
        return;
      case AfpTextPackage.FNC__OPAT_DCNT:
        setOPatDCnt(OPAT_DCNT_EDEFAULT);
        return;
      case AfpTextPackage.FNC__RESERVED2:
        setReserved2(RESERVED2_EDEFAULT);
        return;
      case AfpTextPackage.FNC__FNNRG_LEN:
        setFNNRGLen(FNNRG_LEN_EDEFAULT);
        return;
      case AfpTextPackage.FNC__FNND_CNT:
        setFNNDCnt(FNND_CNT_EDEFAULT);
        return;
      case AfpTextPackage.FNC__FNN_MAP_CNT:
        setFNNMapCnt(FNN_MAP_CNT_EDEFAULT);
        return;
      case AfpTextPackage.FNC__TRIPLETS:
        getTriplets().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNC__RETIRED:
        return retired != RETIRED_EDEFAULT;
      case AfpTextPackage.FNC__PAT_TECH:
        return patTech != PAT_TECH_EDEFAULT;
      case AfpTextPackage.FNC__RESERVED1:
        return RESERVED1_EDEFAULT == null ? reserved1 != null : !RESERVED1_EDEFAULT.equals(reserved1);
      case AfpTextPackage.FNC__FNT_FLAGS:
        return fntFlags != FNT_FLAGS_EDEFAULT;
      case AfpTextPackage.FNC__XUNIT_BASE:
        return xUnitBase != XUNIT_BASE_EDEFAULT;
      case AfpTextPackage.FNC__YUNIT_BASE:
        return yUnitBase != YUNIT_BASE_EDEFAULT;
      case AfpTextPackage.FNC__XFT_UNITS:
        return xftUnits != XFT_UNITS_EDEFAULT;
      case AfpTextPackage.FNC__YFT_UNITS:
        return yftUnits != YFT_UNITS_EDEFAULT;
      case AfpTextPackage.FNC__MAX_BOX_WD:
        return maxBoxWd != MAX_BOX_WD_EDEFAULT;
      case AfpTextPackage.FNC__MAX_BOX_HT:
        return maxBoxHt != MAX_BOX_HT_EDEFAULT;
      case AfpTextPackage.FNC__FNORG_LEN:
        return fnorgLen != FNORG_LEN_EDEFAULT;
      case AfpTextPackage.FNC__FNIRG_LEN:
        return fnirgLen != FNIRG_LEN_EDEFAULT;
      case AfpTextPackage.FNC__PAT_ALIGN:
        return patAlign != PAT_ALIGN_EDEFAULT;
      case AfpTextPackage.FNC__RPAT_DCNT:
        return rPatDCnt != RPAT_DCNT_EDEFAULT;
      case AfpTextPackage.FNC__FNPRG_LEN:
        return fnprgLen != FNPRG_LEN_EDEFAULT;
      case AfpTextPackage.FNC__FNMRG_LEN:
        return fnmrgLen != FNMRG_LEN_EDEFAULT;
      case AfpTextPackage.FNC__RES_XU_BASE:
        return resXUBase != RES_XU_BASE_EDEFAULT;
      case AfpTextPackage.FNC__RES_YU_BASE:
        return resYUBase != RES_YU_BASE_EDEFAULT;
      case AfpTextPackage.FNC__XFR_UNITS:
        return xfrUnits != XFR_UNITS_EDEFAULT;
      case AfpTextPackage.FNC__YFR_UNITS:
        return yfrUnits != YFR_UNITS_EDEFAULT;
      case AfpTextPackage.FNC__OPAT_DCNT:
        return oPatDCnt != OPAT_DCNT_EDEFAULT;
      case AfpTextPackage.FNC__RESERVED2:
        return RESERVED2_EDEFAULT == null ? reserved2 != null : !RESERVED2_EDEFAULT.equals(reserved2);
      case AfpTextPackage.FNC__FNNRG_LEN:
        return fnnrgLen != FNNRG_LEN_EDEFAULT;
      case AfpTextPackage.FNC__FNND_CNT:
        return fnndCnt != FNND_CNT_EDEFAULT;
      case AfpTextPackage.FNC__FNN_MAP_CNT:
        return fnnMapCnt != FNN_MAP_CNT_EDEFAULT;
      case AfpTextPackage.FNC__TRIPLETS:
        return triplets != null && !triplets.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (Retired: ");
    result.append(retired);
    result.append(", PatTech: ");
    result.append(patTech);
    result.append(", Reserved1: ");
    result.append(reserved1);
    result.append(", FntFlags: ");
    result.append(fntFlags);
    result.append(", XUnitBase: ");
    result.append(xUnitBase);
    result.append(", YUnitBase: ");
    result.append(yUnitBase);
    result.append(", XftUnits: ");
    result.append(xftUnits);
    result.append(", YftUnits: ");
    result.append(yftUnits);
    result.append(", MaxBoxWd: ");
    result.append(maxBoxWd);
    result.append(", MaxBoxHt: ");
    result.append(maxBoxHt);
    result.append(", FNORGLen: ");
    result.append(fnorgLen);
    result.append(", FNIRGLen: ");
    result.append(fnirgLen);
    result.append(", PatAlign: ");
    result.append(patAlign);
    result.append(", RPatDCnt: ");
    result.append(rPatDCnt);
    result.append(", FNPRGLen: ");
    result.append(fnprgLen);
    result.append(", FNMRGLen: ");
    result.append(fnmrgLen);
    result.append(", ResXUBase: ");
    result.append(resXUBase);
    result.append(", ResYUBase: ");
    result.append(resYUBase);
    result.append(", XfrUnits: ");
    result.append(xfrUnits);
    result.append(", YfrUnits: ");
    result.append(yfrUnits);
    result.append(", OPatDCnt: ");
    result.append(oPatDCnt);
    result.append(", Reserved2: ");
    result.append(reserved2);
    result.append(", FNNRGLen: ");
    result.append(fnnrgLen);
    result.append(", FNNDCnt: ");
    result.append(fnndCnt);
    result.append(", FNNMapCnt: ");
    result.append(fnnMapCnt);
    result.append(')');
    return result.toString();
  }

} //FNCImpl
