/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.FNIRG;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>FNIRG</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.FNIRGImpl#getGCGID <em>GCGID</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNIRGImpl#getCharInc <em>Char Inc</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNIRGImpl#getAscendHt <em>Ascend Ht</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNIRGImpl#getDescendDp <em>Descend Dp</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNIRGImpl#getReserved <em>Reserved</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNIRGImpl#getFNMCnt <em>FNM Cnt</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNIRGImpl#getASpace <em>ASpace</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNIRGImpl#getBSpace <em>BSpace</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNIRGImpl#getCSpace <em>CSpace</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNIRGImpl#getReserved2 <em>Reserved2</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNIRGImpl#getBaseOset <em>Base Oset</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FNIRGImpl extends MinimalEObjectImpl.Container implements FNIRG
{
  /**
   * The default value of the '{@link #getGCGID() <em>GCGID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGCGID()
   * @generated
   * @ordered
   */
  protected static final String GCGID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGCGID() <em>GCGID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGCGID()
   * @generated
   * @ordered
   */
  protected String gcgid = GCGID_EDEFAULT;

  /**
   * The default value of the '{@link #getCharInc() <em>Char Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCharInc()
   * @generated
   * @ordered
   */
  protected static final int CHAR_INC_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCharInc() <em>Char Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCharInc()
   * @generated
   * @ordered
   */
  protected int charInc = CHAR_INC_EDEFAULT;

  /**
   * The default value of the '{@link #getAscendHt() <em>Ascend Ht</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAscendHt()
   * @generated
   * @ordered
   */
  protected static final int ASCEND_HT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getAscendHt() <em>Ascend Ht</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAscendHt()
   * @generated
   * @ordered
   */
  protected int ascendHt = ASCEND_HT_EDEFAULT;

  /**
   * The default value of the '{@link #getDescendDp() <em>Descend Dp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescendDp()
   * @generated
   * @ordered
   */
  protected static final int DESCEND_DP_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getDescendDp() <em>Descend Dp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescendDp()
   * @generated
   * @ordered
   */
  protected int descendDp = DESCEND_DP_EDEFAULT;

  /**
   * The default value of the '{@link #getReserved() <em>Reserved</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved()
   * @generated
   * @ordered
   */
  protected static final int RESERVED_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getReserved() <em>Reserved</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved()
   * @generated
   * @ordered
   */
  protected int reserved = RESERVED_EDEFAULT;

  /**
   * The default value of the '{@link #getFNMCnt() <em>FNM Cnt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNMCnt()
   * @generated
   * @ordered
   */
  protected static final int FNM_CNT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFNMCnt() <em>FNM Cnt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNMCnt()
   * @generated
   * @ordered
   */
  protected int fnmCnt = FNM_CNT_EDEFAULT;

  /**
   * The default value of the '{@link #getASpace() <em>ASpace</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getASpace()
   * @generated
   * @ordered
   */
  protected static final int ASPACE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getASpace() <em>ASpace</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getASpace()
   * @generated
   * @ordered
   */
  protected int aSpace = ASPACE_EDEFAULT;

  /**
   * The default value of the '{@link #getBSpace() <em>BSpace</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBSpace()
   * @generated
   * @ordered
   */
  protected static final int BSPACE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getBSpace() <em>BSpace</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBSpace()
   * @generated
   * @ordered
   */
  protected int bSpace = BSPACE_EDEFAULT;

  /**
   * The default value of the '{@link #getCSpace() <em>CSpace</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCSpace()
   * @generated
   * @ordered
   */
  protected static final int CSPACE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCSpace() <em>CSpace</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCSpace()
   * @generated
   * @ordered
   */
  protected int cSpace = CSPACE_EDEFAULT;

  /**
   * The default value of the '{@link #getReserved2() <em>Reserved2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved2()
   * @generated
   * @ordered
   */
  protected static final int RESERVED2_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getReserved2() <em>Reserved2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved2()
   * @generated
   * @ordered
   */
  protected int reserved2 = RESERVED2_EDEFAULT;

  /**
   * The default value of the '{@link #getBaseOset() <em>Base Oset</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBaseOset()
   * @generated
   * @ordered
   */
  protected static final int BASE_OSET_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getBaseOset() <em>Base Oset</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBaseOset()
   * @generated
   * @ordered
   */
  protected int baseOset = BASE_OSET_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FNIRGImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getFNIRG();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getGCGID()
  {
    return gcgid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGCGID(String newGCGID)
  {
    String oldGCGID = gcgid;
    gcgid = newGCGID;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNIRG__GCGID, oldGCGID, gcgid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCharInc()
  {
    return charInc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCharInc(int newCharInc)
  {
    int oldCharInc = charInc;
    charInc = newCharInc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNIRG__CHAR_INC, oldCharInc, charInc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getAscendHt()
  {
    return ascendHt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAscendHt(int newAscendHt)
  {
    int oldAscendHt = ascendHt;
    ascendHt = newAscendHt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNIRG__ASCEND_HT, oldAscendHt, ascendHt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getDescendDp()
  {
    return descendDp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescendDp(int newDescendDp)
  {
    int oldDescendDp = descendDp;
    descendDp = newDescendDp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNIRG__DESCEND_DP, oldDescendDp, descendDp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getReserved()
  {
    return reserved;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReserved(int newReserved)
  {
    int oldReserved = reserved;
    reserved = newReserved;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNIRG__RESERVED, oldReserved, reserved));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFNMCnt()
  {
    return fnmCnt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFNMCnt(int newFNMCnt)
  {
    int oldFNMCnt = fnmCnt;
    fnmCnt = newFNMCnt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNIRG__FNM_CNT, oldFNMCnt, fnmCnt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getASpace()
  {
    return aSpace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setASpace(int newASpace)
  {
    int oldASpace = aSpace;
    aSpace = newASpace;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNIRG__ASPACE, oldASpace, aSpace));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getBSpace()
  {
    return bSpace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBSpace(int newBSpace)
  {
    int oldBSpace = bSpace;
    bSpace = newBSpace;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNIRG__BSPACE, oldBSpace, bSpace));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCSpace()
  {
    return cSpace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCSpace(int newCSpace)
  {
    int oldCSpace = cSpace;
    cSpace = newCSpace;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNIRG__CSPACE, oldCSpace, cSpace));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getReserved2()
  {
    return reserved2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReserved2(int newReserved2)
  {
    int oldReserved2 = reserved2;
    reserved2 = newReserved2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNIRG__RESERVED2, oldReserved2, reserved2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getBaseOset()
  {
    return baseOset;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBaseOset(int newBaseOset)
  {
    int oldBaseOset = baseOset;
    baseOset = newBaseOset;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNIRG__BASE_OSET, oldBaseOset, baseOset));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNIRG__GCGID:
        return getGCGID();
      case AfpTextPackage.FNIRG__CHAR_INC:
        return getCharInc();
      case AfpTextPackage.FNIRG__ASCEND_HT:
        return getAscendHt();
      case AfpTextPackage.FNIRG__DESCEND_DP:
        return getDescendDp();
      case AfpTextPackage.FNIRG__RESERVED:
        return getReserved();
      case AfpTextPackage.FNIRG__FNM_CNT:
        return getFNMCnt();
      case AfpTextPackage.FNIRG__ASPACE:
        return getASpace();
      case AfpTextPackage.FNIRG__BSPACE:
        return getBSpace();
      case AfpTextPackage.FNIRG__CSPACE:
        return getCSpace();
      case AfpTextPackage.FNIRG__RESERVED2:
        return getReserved2();
      case AfpTextPackage.FNIRG__BASE_OSET:
        return getBaseOset();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNIRG__GCGID:
        setGCGID((String)newValue);
        return;
      case AfpTextPackage.FNIRG__CHAR_INC:
        setCharInc((Integer)newValue);
        return;
      case AfpTextPackage.FNIRG__ASCEND_HT:
        setAscendHt((Integer)newValue);
        return;
      case AfpTextPackage.FNIRG__DESCEND_DP:
        setDescendDp((Integer)newValue);
        return;
      case AfpTextPackage.FNIRG__RESERVED:
        setReserved((Integer)newValue);
        return;
      case AfpTextPackage.FNIRG__FNM_CNT:
        setFNMCnt((Integer)newValue);
        return;
      case AfpTextPackage.FNIRG__ASPACE:
        setASpace((Integer)newValue);
        return;
      case AfpTextPackage.FNIRG__BSPACE:
        setBSpace((Integer)newValue);
        return;
      case AfpTextPackage.FNIRG__CSPACE:
        setCSpace((Integer)newValue);
        return;
      case AfpTextPackage.FNIRG__RESERVED2:
        setReserved2((Integer)newValue);
        return;
      case AfpTextPackage.FNIRG__BASE_OSET:
        setBaseOset((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNIRG__GCGID:
        setGCGID(GCGID_EDEFAULT);
        return;
      case AfpTextPackage.FNIRG__CHAR_INC:
        setCharInc(CHAR_INC_EDEFAULT);
        return;
      case AfpTextPackage.FNIRG__ASCEND_HT:
        setAscendHt(ASCEND_HT_EDEFAULT);
        return;
      case AfpTextPackage.FNIRG__DESCEND_DP:
        setDescendDp(DESCEND_DP_EDEFAULT);
        return;
      case AfpTextPackage.FNIRG__RESERVED:
        setReserved(RESERVED_EDEFAULT);
        return;
      case AfpTextPackage.FNIRG__FNM_CNT:
        setFNMCnt(FNM_CNT_EDEFAULT);
        return;
      case AfpTextPackage.FNIRG__ASPACE:
        setASpace(ASPACE_EDEFAULT);
        return;
      case AfpTextPackage.FNIRG__BSPACE:
        setBSpace(BSPACE_EDEFAULT);
        return;
      case AfpTextPackage.FNIRG__CSPACE:
        setCSpace(CSPACE_EDEFAULT);
        return;
      case AfpTextPackage.FNIRG__RESERVED2:
        setReserved2(RESERVED2_EDEFAULT);
        return;
      case AfpTextPackage.FNIRG__BASE_OSET:
        setBaseOset(BASE_OSET_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNIRG__GCGID:
        return GCGID_EDEFAULT == null ? gcgid != null : !GCGID_EDEFAULT.equals(gcgid);
      case AfpTextPackage.FNIRG__CHAR_INC:
        return charInc != CHAR_INC_EDEFAULT;
      case AfpTextPackage.FNIRG__ASCEND_HT:
        return ascendHt != ASCEND_HT_EDEFAULT;
      case AfpTextPackage.FNIRG__DESCEND_DP:
        return descendDp != DESCEND_DP_EDEFAULT;
      case AfpTextPackage.FNIRG__RESERVED:
        return reserved != RESERVED_EDEFAULT;
      case AfpTextPackage.FNIRG__FNM_CNT:
        return fnmCnt != FNM_CNT_EDEFAULT;
      case AfpTextPackage.FNIRG__ASPACE:
        return aSpace != ASPACE_EDEFAULT;
      case AfpTextPackage.FNIRG__BSPACE:
        return bSpace != BSPACE_EDEFAULT;
      case AfpTextPackage.FNIRG__CSPACE:
        return cSpace != CSPACE_EDEFAULT;
      case AfpTextPackage.FNIRG__RESERVED2:
        return reserved2 != RESERVED2_EDEFAULT;
      case AfpTextPackage.FNIRG__BASE_OSET:
        return baseOset != BASE_OSET_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (GCGID: ");
    result.append(gcgid);
    result.append(", CharInc: ");
    result.append(charInc);
    result.append(", AscendHt: ");
    result.append(ascendHt);
    result.append(", DescendDp: ");
    result.append(descendDp);
    result.append(", Reserved: ");
    result.append(reserved);
    result.append(", FNMCnt: ");
    result.append(fnmCnt);
    result.append(", ASpace: ");
    result.append(aSpace);
    result.append(", BSpace: ");
    result.append(bSpace);
    result.append(", CSpace: ");
    result.append(cSpace);
    result.append(", Reserved2: ");
    result.append(reserved2);
    result.append(", BaseOset: ");
    result.append(baseOset);
    result.append(')');
    return result.toString();
  }

} //FNIRGImpl
