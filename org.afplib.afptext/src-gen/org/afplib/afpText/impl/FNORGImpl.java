/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.FNORG;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>FNORG</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getReserved <em>Reserved</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getCharRot <em>Char Rot</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getMaxBOset <em>Max BOset</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getMaxCharInc <em>Max Char Inc</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getSpCharInc <em>Sp Char Inc</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getMaxBExt <em>Max BExt</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getOrntFlgs <em>Ornt Flgs</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getReserved2 <em>Reserved2</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getEmSpInc <em>Em Sp Inc</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getReserved3 <em>Reserved3</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getFigSpInc <em>Fig Sp Inc</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getNomCharInc <em>Nom Char Inc</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getDefBInc <em>Def BInc</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FNORGImpl#getMinASp <em>Min ASp</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FNORGImpl extends MinimalEObjectImpl.Container implements FNORG
{
  /**
   * The default value of the '{@link #getReserved() <em>Reserved</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved()
   * @generated
   * @ordered
   */
  protected static final int RESERVED_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getReserved() <em>Reserved</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved()
   * @generated
   * @ordered
   */
  protected int reserved = RESERVED_EDEFAULT;

  /**
   * The default value of the '{@link #getCharRot() <em>Char Rot</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCharRot()
   * @generated
   * @ordered
   */
  protected static final int CHAR_ROT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCharRot() <em>Char Rot</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCharRot()
   * @generated
   * @ordered
   */
  protected int charRot = CHAR_ROT_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxBOset() <em>Max BOset</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxBOset()
   * @generated
   * @ordered
   */
  protected static final int MAX_BOSET_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxBOset() <em>Max BOset</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxBOset()
   * @generated
   * @ordered
   */
  protected int maxBOset = MAX_BOSET_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxCharInc() <em>Max Char Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxCharInc()
   * @generated
   * @ordered
   */
  protected static final int MAX_CHAR_INC_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxCharInc() <em>Max Char Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxCharInc()
   * @generated
   * @ordered
   */
  protected int maxCharInc = MAX_CHAR_INC_EDEFAULT;

  /**
   * The default value of the '{@link #getSpCharInc() <em>Sp Char Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpCharInc()
   * @generated
   * @ordered
   */
  protected static final int SP_CHAR_INC_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSpCharInc() <em>Sp Char Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpCharInc()
   * @generated
   * @ordered
   */
  protected int spCharInc = SP_CHAR_INC_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxBExt() <em>Max BExt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxBExt()
   * @generated
   * @ordered
   */
  protected static final int MAX_BEXT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxBExt() <em>Max BExt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxBExt()
   * @generated
   * @ordered
   */
  protected int maxBExt = MAX_BEXT_EDEFAULT;

  /**
   * The default value of the '{@link #getOrntFlgs() <em>Ornt Flgs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrntFlgs()
   * @generated
   * @ordered
   */
  protected static final int ORNT_FLGS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getOrntFlgs() <em>Ornt Flgs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrntFlgs()
   * @generated
   * @ordered
   */
  protected int orntFlgs = ORNT_FLGS_EDEFAULT;

  /**
   * The default value of the '{@link #getReserved2() <em>Reserved2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved2()
   * @generated
   * @ordered
   */
  protected static final int RESERVED2_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getReserved2() <em>Reserved2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved2()
   * @generated
   * @ordered
   */
  protected int reserved2 = RESERVED2_EDEFAULT;

  /**
   * The default value of the '{@link #getEmSpInc() <em>Em Sp Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmSpInc()
   * @generated
   * @ordered
   */
  protected static final int EM_SP_INC_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getEmSpInc() <em>Em Sp Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmSpInc()
   * @generated
   * @ordered
   */
  protected int emSpInc = EM_SP_INC_EDEFAULT;

  /**
   * The default value of the '{@link #getReserved3() <em>Reserved3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved3()
   * @generated
   * @ordered
   */
  protected static final int RESERVED3_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getReserved3() <em>Reserved3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReserved3()
   * @generated
   * @ordered
   */
  protected int reserved3 = RESERVED3_EDEFAULT;

  /**
   * The default value of the '{@link #getFigSpInc() <em>Fig Sp Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFigSpInc()
   * @generated
   * @ordered
   */
  protected static final int FIG_SP_INC_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFigSpInc() <em>Fig Sp Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFigSpInc()
   * @generated
   * @ordered
   */
  protected int figSpInc = FIG_SP_INC_EDEFAULT;

  /**
   * The default value of the '{@link #getNomCharInc() <em>Nom Char Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNomCharInc()
   * @generated
   * @ordered
   */
  protected static final int NOM_CHAR_INC_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNomCharInc() <em>Nom Char Inc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNomCharInc()
   * @generated
   * @ordered
   */
  protected int nomCharInc = NOM_CHAR_INC_EDEFAULT;

  /**
   * The default value of the '{@link #getDefBInc() <em>Def BInc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefBInc()
   * @generated
   * @ordered
   */
  protected static final int DEF_BINC_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getDefBInc() <em>Def BInc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefBInc()
   * @generated
   * @ordered
   */
  protected int defBInc = DEF_BINC_EDEFAULT;

  /**
   * The default value of the '{@link #getMinASp() <em>Min ASp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinASp()
   * @generated
   * @ordered
   */
  protected static final int MIN_ASP_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMinASp() <em>Min ASp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinASp()
   * @generated
   * @ordered
   */
  protected int minASp = MIN_ASP_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FNORGImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getFNORG();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getReserved()
  {
    return reserved;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReserved(int newReserved)
  {
    int oldReserved = reserved;
    reserved = newReserved;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__RESERVED, oldReserved, reserved));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCharRot()
  {
    return charRot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCharRot(int newCharRot)
  {
    int oldCharRot = charRot;
    charRot = newCharRot;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__CHAR_ROT, oldCharRot, charRot));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMaxBOset()
  {
    return maxBOset;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaxBOset(int newMaxBOset)
  {
    int oldMaxBOset = maxBOset;
    maxBOset = newMaxBOset;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__MAX_BOSET, oldMaxBOset, maxBOset));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMaxCharInc()
  {
    return maxCharInc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaxCharInc(int newMaxCharInc)
  {
    int oldMaxCharInc = maxCharInc;
    maxCharInc = newMaxCharInc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__MAX_CHAR_INC, oldMaxCharInc, maxCharInc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getSpCharInc()
  {
    return spCharInc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSpCharInc(int newSpCharInc)
  {
    int oldSpCharInc = spCharInc;
    spCharInc = newSpCharInc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__SP_CHAR_INC, oldSpCharInc, spCharInc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMaxBExt()
  {
    return maxBExt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaxBExt(int newMaxBExt)
  {
    int oldMaxBExt = maxBExt;
    maxBExt = newMaxBExt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__MAX_BEXT, oldMaxBExt, maxBExt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getOrntFlgs()
  {
    return orntFlgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOrntFlgs(int newOrntFlgs)
  {
    int oldOrntFlgs = orntFlgs;
    orntFlgs = newOrntFlgs;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__ORNT_FLGS, oldOrntFlgs, orntFlgs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getReserved2()
  {
    return reserved2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReserved2(int newReserved2)
  {
    int oldReserved2 = reserved2;
    reserved2 = newReserved2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__RESERVED2, oldReserved2, reserved2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getEmSpInc()
  {
    return emSpInc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEmSpInc(int newEmSpInc)
  {
    int oldEmSpInc = emSpInc;
    emSpInc = newEmSpInc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__EM_SP_INC, oldEmSpInc, emSpInc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getReserved3()
  {
    return reserved3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReserved3(int newReserved3)
  {
    int oldReserved3 = reserved3;
    reserved3 = newReserved3;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__RESERVED3, oldReserved3, reserved3));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFigSpInc()
  {
    return figSpInc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFigSpInc(int newFigSpInc)
  {
    int oldFigSpInc = figSpInc;
    figSpInc = newFigSpInc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__FIG_SP_INC, oldFigSpInc, figSpInc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getNomCharInc()
  {
    return nomCharInc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNomCharInc(int newNomCharInc)
  {
    int oldNomCharInc = nomCharInc;
    nomCharInc = newNomCharInc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__NOM_CHAR_INC, oldNomCharInc, nomCharInc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getDefBInc()
  {
    return defBInc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefBInc(int newDefBInc)
  {
    int oldDefBInc = defBInc;
    defBInc = newDefBInc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__DEF_BINC, oldDefBInc, defBInc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMinASp()
  {
    return minASp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinASp(int newMinASp)
  {
    int oldMinASp = minASp;
    minASp = newMinASp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FNORG__MIN_ASP, oldMinASp, minASp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNORG__RESERVED:
        return getReserved();
      case AfpTextPackage.FNORG__CHAR_ROT:
        return getCharRot();
      case AfpTextPackage.FNORG__MAX_BOSET:
        return getMaxBOset();
      case AfpTextPackage.FNORG__MAX_CHAR_INC:
        return getMaxCharInc();
      case AfpTextPackage.FNORG__SP_CHAR_INC:
        return getSpCharInc();
      case AfpTextPackage.FNORG__MAX_BEXT:
        return getMaxBExt();
      case AfpTextPackage.FNORG__ORNT_FLGS:
        return getOrntFlgs();
      case AfpTextPackage.FNORG__RESERVED2:
        return getReserved2();
      case AfpTextPackage.FNORG__EM_SP_INC:
        return getEmSpInc();
      case AfpTextPackage.FNORG__RESERVED3:
        return getReserved3();
      case AfpTextPackage.FNORG__FIG_SP_INC:
        return getFigSpInc();
      case AfpTextPackage.FNORG__NOM_CHAR_INC:
        return getNomCharInc();
      case AfpTextPackage.FNORG__DEF_BINC:
        return getDefBInc();
      case AfpTextPackage.FNORG__MIN_ASP:
        return getMinASp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNORG__RESERVED:
        setReserved((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__CHAR_ROT:
        setCharRot((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__MAX_BOSET:
        setMaxBOset((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__MAX_CHAR_INC:
        setMaxCharInc((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__SP_CHAR_INC:
        setSpCharInc((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__MAX_BEXT:
        setMaxBExt((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__ORNT_FLGS:
        setOrntFlgs((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__RESERVED2:
        setReserved2((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__EM_SP_INC:
        setEmSpInc((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__RESERVED3:
        setReserved3((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__FIG_SP_INC:
        setFigSpInc((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__NOM_CHAR_INC:
        setNomCharInc((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__DEF_BINC:
        setDefBInc((Integer)newValue);
        return;
      case AfpTextPackage.FNORG__MIN_ASP:
        setMinASp((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNORG__RESERVED:
        setReserved(RESERVED_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__CHAR_ROT:
        setCharRot(CHAR_ROT_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__MAX_BOSET:
        setMaxBOset(MAX_BOSET_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__MAX_CHAR_INC:
        setMaxCharInc(MAX_CHAR_INC_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__SP_CHAR_INC:
        setSpCharInc(SP_CHAR_INC_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__MAX_BEXT:
        setMaxBExt(MAX_BEXT_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__ORNT_FLGS:
        setOrntFlgs(ORNT_FLGS_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__RESERVED2:
        setReserved2(RESERVED2_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__EM_SP_INC:
        setEmSpInc(EM_SP_INC_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__RESERVED3:
        setReserved3(RESERVED3_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__FIG_SP_INC:
        setFigSpInc(FIG_SP_INC_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__NOM_CHAR_INC:
        setNomCharInc(NOM_CHAR_INC_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__DEF_BINC:
        setDefBInc(DEF_BINC_EDEFAULT);
        return;
      case AfpTextPackage.FNORG__MIN_ASP:
        setMinASp(MIN_ASP_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.FNORG__RESERVED:
        return reserved != RESERVED_EDEFAULT;
      case AfpTextPackage.FNORG__CHAR_ROT:
        return charRot != CHAR_ROT_EDEFAULT;
      case AfpTextPackage.FNORG__MAX_BOSET:
        return maxBOset != MAX_BOSET_EDEFAULT;
      case AfpTextPackage.FNORG__MAX_CHAR_INC:
        return maxCharInc != MAX_CHAR_INC_EDEFAULT;
      case AfpTextPackage.FNORG__SP_CHAR_INC:
        return spCharInc != SP_CHAR_INC_EDEFAULT;
      case AfpTextPackage.FNORG__MAX_BEXT:
        return maxBExt != MAX_BEXT_EDEFAULT;
      case AfpTextPackage.FNORG__ORNT_FLGS:
        return orntFlgs != ORNT_FLGS_EDEFAULT;
      case AfpTextPackage.FNORG__RESERVED2:
        return reserved2 != RESERVED2_EDEFAULT;
      case AfpTextPackage.FNORG__EM_SP_INC:
        return emSpInc != EM_SP_INC_EDEFAULT;
      case AfpTextPackage.FNORG__RESERVED3:
        return reserved3 != RESERVED3_EDEFAULT;
      case AfpTextPackage.FNORG__FIG_SP_INC:
        return figSpInc != FIG_SP_INC_EDEFAULT;
      case AfpTextPackage.FNORG__NOM_CHAR_INC:
        return nomCharInc != NOM_CHAR_INC_EDEFAULT;
      case AfpTextPackage.FNORG__DEF_BINC:
        return defBInc != DEF_BINC_EDEFAULT;
      case AfpTextPackage.FNORG__MIN_ASP:
        return minASp != MIN_ASP_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (Reserved: ");
    result.append(reserved);
    result.append(", CharRot: ");
    result.append(charRot);
    result.append(", MaxBOset: ");
    result.append(maxBOset);
    result.append(", MaxCharInc: ");
    result.append(maxCharInc);
    result.append(", SpCharInc: ");
    result.append(spCharInc);
    result.append(", MaxBExt: ");
    result.append(maxBExt);
    result.append(", OrntFlgs: ");
    result.append(orntFlgs);
    result.append(", Reserved2: ");
    result.append(reserved2);
    result.append(", EmSpInc: ");
    result.append(emSpInc);
    result.append(", Reserved3: ");
    result.append(reserved3);
    result.append(", FigSpInc: ");
    result.append(figSpInc);
    result.append(", NomCharInc: ");
    result.append(nomCharInc);
    result.append(", DefBInc: ");
    result.append(defBInc);
    result.append(", MinASp: ");
    result.append(minASp);
    result.append(')');
    return result.toString();
  }

} //FNORGImpl
