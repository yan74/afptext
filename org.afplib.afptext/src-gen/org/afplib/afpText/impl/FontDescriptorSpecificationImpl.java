/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.FontDescriptorSpecification;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Font Descriptor Specification</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.FontDescriptorSpecificationImpl#getFtWtClass <em>Ft Wt Class</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FontDescriptorSpecificationImpl#getFtWdClass <em>Ft Wd Class</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FontDescriptorSpecificationImpl#getFtHeight <em>Ft Height</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FontDescriptorSpecificationImpl#getFtWidth <em>Ft Width</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FontDescriptorSpecificationImpl#getFtDsFlags <em>Ft Ds Flags</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FontDescriptorSpecificationImpl#getFtUsFlags <em>Ft Us Flags</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FontDescriptorSpecificationImpl extends tripletImpl implements FontDescriptorSpecification
{
  /**
   * The default value of the '{@link #getFtWtClass() <em>Ft Wt Class</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtWtClass()
   * @generated
   * @ordered
   */
  protected static final int FT_WT_CLASS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFtWtClass() <em>Ft Wt Class</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtWtClass()
   * @generated
   * @ordered
   */
  protected int ftWtClass = FT_WT_CLASS_EDEFAULT;

  /**
   * The default value of the '{@link #getFtWdClass() <em>Ft Wd Class</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtWdClass()
   * @generated
   * @ordered
   */
  protected static final int FT_WD_CLASS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFtWdClass() <em>Ft Wd Class</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtWdClass()
   * @generated
   * @ordered
   */
  protected int ftWdClass = FT_WD_CLASS_EDEFAULT;

  /**
   * The default value of the '{@link #getFtHeight() <em>Ft Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtHeight()
   * @generated
   * @ordered
   */
  protected static final int FT_HEIGHT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFtHeight() <em>Ft Height</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtHeight()
   * @generated
   * @ordered
   */
  protected int ftHeight = FT_HEIGHT_EDEFAULT;

  /**
   * The default value of the '{@link #getFtWidth() <em>Ft Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtWidth()
   * @generated
   * @ordered
   */
  protected static final int FT_WIDTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFtWidth() <em>Ft Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtWidth()
   * @generated
   * @ordered
   */
  protected int ftWidth = FT_WIDTH_EDEFAULT;

  /**
   * The default value of the '{@link #getFtDsFlags() <em>Ft Ds Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtDsFlags()
   * @generated
   * @ordered
   */
  protected static final int FT_DS_FLAGS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFtDsFlags() <em>Ft Ds Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtDsFlags()
   * @generated
   * @ordered
   */
  protected int ftDsFlags = FT_DS_FLAGS_EDEFAULT;

  /**
   * The default value of the '{@link #getFtUsFlags() <em>Ft Us Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtUsFlags()
   * @generated
   * @ordered
   */
  protected static final int FT_US_FLAGS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFtUsFlags() <em>Ft Us Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFtUsFlags()
   * @generated
   * @ordered
   */
  protected int ftUsFlags = FT_US_FLAGS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FontDescriptorSpecificationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getFontDescriptorSpecification();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFtWtClass()
  {
    return ftWtClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFtWtClass(int newFtWtClass)
  {
    int oldFtWtClass = ftWtClass;
    ftWtClass = newFtWtClass;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WT_CLASS, oldFtWtClass, ftWtClass));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFtWdClass()
  {
    return ftWdClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFtWdClass(int newFtWdClass)
  {
    int oldFtWdClass = ftWdClass;
    ftWdClass = newFtWdClass;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WD_CLASS, oldFtWdClass, ftWdClass));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFtHeight()
  {
    return ftHeight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFtHeight(int newFtHeight)
  {
    int oldFtHeight = ftHeight;
    ftHeight = newFtHeight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_HEIGHT, oldFtHeight, ftHeight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFtWidth()
  {
    return ftWidth;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFtWidth(int newFtWidth)
  {
    int oldFtWidth = ftWidth;
    ftWidth = newFtWidth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WIDTH, oldFtWidth, ftWidth));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFtDsFlags()
  {
    return ftDsFlags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFtDsFlags(int newFtDsFlags)
  {
    int oldFtDsFlags = ftDsFlags;
    ftDsFlags = newFtDsFlags;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_DS_FLAGS, oldFtDsFlags, ftDsFlags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFtUsFlags()
  {
    return ftUsFlags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFtUsFlags(int newFtUsFlags)
  {
    int oldFtUsFlags = ftUsFlags;
    ftUsFlags = newFtUsFlags;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_US_FLAGS, oldFtUsFlags, ftUsFlags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WT_CLASS:
        return getFtWtClass();
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WD_CLASS:
        return getFtWdClass();
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_HEIGHT:
        return getFtHeight();
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WIDTH:
        return getFtWidth();
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_DS_FLAGS:
        return getFtDsFlags();
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_US_FLAGS:
        return getFtUsFlags();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WT_CLASS:
        setFtWtClass((Integer)newValue);
        return;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WD_CLASS:
        setFtWdClass((Integer)newValue);
        return;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_HEIGHT:
        setFtHeight((Integer)newValue);
        return;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WIDTH:
        setFtWidth((Integer)newValue);
        return;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_DS_FLAGS:
        setFtDsFlags((Integer)newValue);
        return;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_US_FLAGS:
        setFtUsFlags((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WT_CLASS:
        setFtWtClass(FT_WT_CLASS_EDEFAULT);
        return;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WD_CLASS:
        setFtWdClass(FT_WD_CLASS_EDEFAULT);
        return;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_HEIGHT:
        setFtHeight(FT_HEIGHT_EDEFAULT);
        return;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WIDTH:
        setFtWidth(FT_WIDTH_EDEFAULT);
        return;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_DS_FLAGS:
        setFtDsFlags(FT_DS_FLAGS_EDEFAULT);
        return;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_US_FLAGS:
        setFtUsFlags(FT_US_FLAGS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WT_CLASS:
        return ftWtClass != FT_WT_CLASS_EDEFAULT;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WD_CLASS:
        return ftWdClass != FT_WD_CLASS_EDEFAULT;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_HEIGHT:
        return ftHeight != FT_HEIGHT_EDEFAULT;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_WIDTH:
        return ftWidth != FT_WIDTH_EDEFAULT;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_DS_FLAGS:
        return ftDsFlags != FT_DS_FLAGS_EDEFAULT;
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION__FT_US_FLAGS:
        return ftUsFlags != FT_US_FLAGS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (FtWtClass: ");
    result.append(ftWtClass);
    result.append(", FtWdClass: ");
    result.append(ftWdClass);
    result.append(", FtHeight: ");
    result.append(ftHeight);
    result.append(", FtWidth: ");
    result.append(ftWidth);
    result.append(", FtDsFlags: ");
    result.append(ftDsFlags);
    result.append(", FtUsFlags: ");
    result.append(ftUsFlags);
    result.append(')');
    return result.toString();
  }

} //FontDescriptorSpecificationImpl
