/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.FullyQualifiedName;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Fully Qualified Name</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.FullyQualifiedNameImpl#getFQNType <em>FQN Type</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FullyQualifiedNameImpl#getFQNFormat <em>FQN Format</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.FullyQualifiedNameImpl#getFQName <em>FQ Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FullyQualifiedNameImpl extends tripletImpl implements FullyQualifiedName
{
  /**
   * The default value of the '{@link #getFQNType() <em>FQN Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFQNType()
   * @generated
   * @ordered
   */
  protected static final int FQN_TYPE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFQNType() <em>FQN Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFQNType()
   * @generated
   * @ordered
   */
  protected int fqnType = FQN_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getFQNFormat() <em>FQN Format</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFQNFormat()
   * @generated
   * @ordered
   */
  protected static final int FQN_FORMAT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getFQNFormat() <em>FQN Format</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFQNFormat()
   * @generated
   * @ordered
   */
  protected int fqnFormat = FQN_FORMAT_EDEFAULT;

  /**
   * The default value of the '{@link #getFQName() <em>FQ Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFQName()
   * @generated
   * @ordered
   */
  protected static final String FQ_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFQName() <em>FQ Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFQName()
   * @generated
   * @ordered
   */
  protected String fqName = FQ_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FullyQualifiedNameImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getFullyQualifiedName();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFQNType()
  {
    return fqnType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFQNType(int newFQNType)
  {
    int oldFQNType = fqnType;
    fqnType = newFQNType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FULLY_QUALIFIED_NAME__FQN_TYPE, oldFQNType, fqnType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getFQNFormat()
  {
    return fqnFormat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFQNFormat(int newFQNFormat)
  {
    int oldFQNFormat = fqnFormat;
    fqnFormat = newFQNFormat;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FULLY_QUALIFIED_NAME__FQN_FORMAT, oldFQNFormat, fqnFormat));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFQName()
  {
    return fqName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFQName(String newFQName)
  {
    String oldFQName = fqName;
    fqName = newFQName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.FULLY_QUALIFIED_NAME__FQ_NAME, oldFQName, fqName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQN_TYPE:
        return getFQNType();
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQN_FORMAT:
        return getFQNFormat();
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQ_NAME:
        return getFQName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQN_TYPE:
        setFQNType((Integer)newValue);
        return;
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQN_FORMAT:
        setFQNFormat((Integer)newValue);
        return;
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQ_NAME:
        setFQName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQN_TYPE:
        setFQNType(FQN_TYPE_EDEFAULT);
        return;
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQN_FORMAT:
        setFQNFormat(FQN_FORMAT_EDEFAULT);
        return;
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQ_NAME:
        setFQName(FQ_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQN_TYPE:
        return fqnType != FQN_TYPE_EDEFAULT;
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQN_FORMAT:
        return fqnFormat != FQN_FORMAT_EDEFAULT;
      case AfpTextPackage.FULLY_QUALIFIED_NAME__FQ_NAME:
        return FQ_NAME_EDEFAULT == null ? fqName != null : !FQ_NAME_EDEFAULT.equals(fqName);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (FQNType: ");
    result.append(fqnType);
    result.append(", FQNFormat: ");
    result.append(fqnFormat);
    result.append(", FQName: ");
    result.append(fqName);
    result.append(')');
    return result.toString();
  }

} //FullyQualifiedNameImpl
