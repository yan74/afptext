/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.GSMC;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>GSMC</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.GSMCImpl#getCELLWI <em>CELLWI</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.GSMCImpl#getCELLHI <em>CELLHI</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GSMCImpl extends tripletImpl implements GSMC
{
  /**
   * The default value of the '{@link #getCELLWI() <em>CELLWI</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCELLWI()
   * @generated
   * @ordered
   */
  protected static final int CELLWI_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCELLWI() <em>CELLWI</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCELLWI()
   * @generated
   * @ordered
   */
  protected int cellwi = CELLWI_EDEFAULT;

  /**
   * The default value of the '{@link #getCELLHI() <em>CELLHI</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCELLHI()
   * @generated
   * @ordered
   */
  protected static final int CELLHI_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCELLHI() <em>CELLHI</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCELLHI()
   * @generated
   * @ordered
   */
  protected int cellhi = CELLHI_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GSMCImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getGSMC();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCELLWI()
  {
    return cellwi;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCELLWI(int newCELLWI)
  {
    int oldCELLWI = cellwi;
    cellwi = newCELLWI;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.GSMC__CELLWI, oldCELLWI, cellwi));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCELLHI()
  {
    return cellhi;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCELLHI(int newCELLHI)
  {
    int oldCELLHI = cellhi;
    cellhi = newCELLHI;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.GSMC__CELLHI, oldCELLHI, cellhi));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.GSMC__CELLWI:
        return getCELLWI();
      case AfpTextPackage.GSMC__CELLHI:
        return getCELLHI();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.GSMC__CELLWI:
        setCELLWI((Integer)newValue);
        return;
      case AfpTextPackage.GSMC__CELLHI:
        setCELLHI((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.GSMC__CELLWI:
        setCELLWI(CELLWI_EDEFAULT);
        return;
      case AfpTextPackage.GSMC__CELLHI:
        setCELLHI(CELLHI_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.GSMC__CELLWI:
        return cellwi != CELLWI_EDEFAULT;
      case AfpTextPackage.GSMC__CELLHI:
        return cellhi != CELLHI_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (CELLWI: ");
    result.append(cellwi);
    result.append(", CELLHI: ");
    result.append(cellhi);
    result.append(')');
    return result.toString();
  }

} //GSMCImpl
