/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.ICP;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ICP</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.ICPImpl#getXCOset <em>XC Oset</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.ICPImpl#getYCOset <em>YC Oset</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.ICPImpl#getXCSize <em>XC Size</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.ICPImpl#getYCSize <em>YC Size</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.ICPImpl#getXFilSize <em>XFil Size</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.ICPImpl#getYFilSize <em>YFil Size</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ICPImpl extends structuredFieldImpl implements ICP
{
  /**
   * The default value of the '{@link #getXCOset() <em>XC Oset</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXCOset()
   * @generated
   * @ordered
   */
  protected static final int XC_OSET_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXCOset() <em>XC Oset</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXCOset()
   * @generated
   * @ordered
   */
  protected int xcOset = XC_OSET_EDEFAULT;

  /**
   * The default value of the '{@link #getYCOset() <em>YC Oset</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYCOset()
   * @generated
   * @ordered
   */
  protected static final int YC_OSET_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYCOset() <em>YC Oset</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYCOset()
   * @generated
   * @ordered
   */
  protected int ycOset = YC_OSET_EDEFAULT;

  /**
   * The default value of the '{@link #getXCSize() <em>XC Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXCSize()
   * @generated
   * @ordered
   */
  protected static final int XC_SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXCSize() <em>XC Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXCSize()
   * @generated
   * @ordered
   */
  protected int xcSize = XC_SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getYCSize() <em>YC Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYCSize()
   * @generated
   * @ordered
   */
  protected static final int YC_SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYCSize() <em>YC Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYCSize()
   * @generated
   * @ordered
   */
  protected int ycSize = YC_SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getXFilSize() <em>XFil Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXFilSize()
   * @generated
   * @ordered
   */
  protected static final int XFIL_SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXFilSize() <em>XFil Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXFilSize()
   * @generated
   * @ordered
   */
  protected int xFilSize = XFIL_SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getYFilSize() <em>YFil Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYFilSize()
   * @generated
   * @ordered
   */
  protected static final int YFIL_SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYFilSize() <em>YFil Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYFilSize()
   * @generated
   * @ordered
   */
  protected int yFilSize = YFIL_SIZE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ICPImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getICP();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXCOset()
  {
    return xcOset;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXCOset(int newXCOset)
  {
    int oldXCOset = xcOset;
    xcOset = newXCOset;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.ICP__XC_OSET, oldXCOset, xcOset));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYCOset()
  {
    return ycOset;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYCOset(int newYCOset)
  {
    int oldYCOset = ycOset;
    ycOset = newYCOset;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.ICP__YC_OSET, oldYCOset, ycOset));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXCSize()
  {
    return xcSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXCSize(int newXCSize)
  {
    int oldXCSize = xcSize;
    xcSize = newXCSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.ICP__XC_SIZE, oldXCSize, xcSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYCSize()
  {
    return ycSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYCSize(int newYCSize)
  {
    int oldYCSize = ycSize;
    ycSize = newYCSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.ICP__YC_SIZE, oldYCSize, ycSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXFilSize()
  {
    return xFilSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXFilSize(int newXFilSize)
  {
    int oldXFilSize = xFilSize;
    xFilSize = newXFilSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.ICP__XFIL_SIZE, oldXFilSize, xFilSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYFilSize()
  {
    return yFilSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYFilSize(int newYFilSize)
  {
    int oldYFilSize = yFilSize;
    yFilSize = newYFilSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.ICP__YFIL_SIZE, oldYFilSize, yFilSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.ICP__XC_OSET:
        return getXCOset();
      case AfpTextPackage.ICP__YC_OSET:
        return getYCOset();
      case AfpTextPackage.ICP__XC_SIZE:
        return getXCSize();
      case AfpTextPackage.ICP__YC_SIZE:
        return getYCSize();
      case AfpTextPackage.ICP__XFIL_SIZE:
        return getXFilSize();
      case AfpTextPackage.ICP__YFIL_SIZE:
        return getYFilSize();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.ICP__XC_OSET:
        setXCOset((Integer)newValue);
        return;
      case AfpTextPackage.ICP__YC_OSET:
        setYCOset((Integer)newValue);
        return;
      case AfpTextPackage.ICP__XC_SIZE:
        setXCSize((Integer)newValue);
        return;
      case AfpTextPackage.ICP__YC_SIZE:
        setYCSize((Integer)newValue);
        return;
      case AfpTextPackage.ICP__XFIL_SIZE:
        setXFilSize((Integer)newValue);
        return;
      case AfpTextPackage.ICP__YFIL_SIZE:
        setYFilSize((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.ICP__XC_OSET:
        setXCOset(XC_OSET_EDEFAULT);
        return;
      case AfpTextPackage.ICP__YC_OSET:
        setYCOset(YC_OSET_EDEFAULT);
        return;
      case AfpTextPackage.ICP__XC_SIZE:
        setXCSize(XC_SIZE_EDEFAULT);
        return;
      case AfpTextPackage.ICP__YC_SIZE:
        setYCSize(YC_SIZE_EDEFAULT);
        return;
      case AfpTextPackage.ICP__XFIL_SIZE:
        setXFilSize(XFIL_SIZE_EDEFAULT);
        return;
      case AfpTextPackage.ICP__YFIL_SIZE:
        setYFilSize(YFIL_SIZE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.ICP__XC_OSET:
        return xcOset != XC_OSET_EDEFAULT;
      case AfpTextPackage.ICP__YC_OSET:
        return ycOset != YC_OSET_EDEFAULT;
      case AfpTextPackage.ICP__XC_SIZE:
        return xcSize != XC_SIZE_EDEFAULT;
      case AfpTextPackage.ICP__YC_SIZE:
        return ycSize != YC_SIZE_EDEFAULT;
      case AfpTextPackage.ICP__XFIL_SIZE:
        return xFilSize != XFIL_SIZE_EDEFAULT;
      case AfpTextPackage.ICP__YFIL_SIZE:
        return yFilSize != YFIL_SIZE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (XCOset: ");
    result.append(xcOset);
    result.append(", YCOset: ");
    result.append(ycOset);
    result.append(", XCSize: ");
    result.append(xcSize);
    result.append(", YCSize: ");
    result.append(ycSize);
    result.append(", XFilSize: ");
    result.append(xFilSize);
    result.append(", YFilSize: ");
    result.append(yFilSize);
    result.append(')');
    return result.toString();
  }

} //ICPImpl
