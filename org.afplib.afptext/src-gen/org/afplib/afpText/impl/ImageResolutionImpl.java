/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.ImageResolution;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Image Resolution</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.ImageResolutionImpl#getXBase <em>XBase</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.ImageResolutionImpl#getYBase <em>YBase</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.ImageResolutionImpl#getXResol <em>XResol</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.ImageResolutionImpl#getYResol <em>YResol</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ImageResolutionImpl extends tripletImpl implements ImageResolution
{
  /**
   * The default value of the '{@link #getXBase() <em>XBase</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXBase()
   * @generated
   * @ordered
   */
  protected static final int XBASE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXBase() <em>XBase</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXBase()
   * @generated
   * @ordered
   */
  protected int xBase = XBASE_EDEFAULT;

  /**
   * The default value of the '{@link #getYBase() <em>YBase</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYBase()
   * @generated
   * @ordered
   */
  protected static final int YBASE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYBase() <em>YBase</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYBase()
   * @generated
   * @ordered
   */
  protected int yBase = YBASE_EDEFAULT;

  /**
   * The default value of the '{@link #getXResol() <em>XResol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXResol()
   * @generated
   * @ordered
   */
  protected static final int XRESOL_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXResol() <em>XResol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXResol()
   * @generated
   * @ordered
   */
  protected int xResol = XRESOL_EDEFAULT;

  /**
   * The default value of the '{@link #getYResol() <em>YResol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYResol()
   * @generated
   * @ordered
   */
  protected static final int YRESOL_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYResol() <em>YResol</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYResol()
   * @generated
   * @ordered
   */
  protected int yResol = YRESOL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ImageResolutionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getImageResolution();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXBase()
  {
    return xBase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXBase(int newXBase)
  {
    int oldXBase = xBase;
    xBase = newXBase;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.IMAGE_RESOLUTION__XBASE, oldXBase, xBase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYBase()
  {
    return yBase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYBase(int newYBase)
  {
    int oldYBase = yBase;
    yBase = newYBase;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.IMAGE_RESOLUTION__YBASE, oldYBase, yBase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXResol()
  {
    return xResol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXResol(int newXResol)
  {
    int oldXResol = xResol;
    xResol = newXResol;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.IMAGE_RESOLUTION__XRESOL, oldXResol, xResol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYResol()
  {
    return yResol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYResol(int newYResol)
  {
    int oldYResol = yResol;
    yResol = newYResol;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.IMAGE_RESOLUTION__YRESOL, oldYResol, yResol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.IMAGE_RESOLUTION__XBASE:
        return getXBase();
      case AfpTextPackage.IMAGE_RESOLUTION__YBASE:
        return getYBase();
      case AfpTextPackage.IMAGE_RESOLUTION__XRESOL:
        return getXResol();
      case AfpTextPackage.IMAGE_RESOLUTION__YRESOL:
        return getYResol();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.IMAGE_RESOLUTION__XBASE:
        setXBase((Integer)newValue);
        return;
      case AfpTextPackage.IMAGE_RESOLUTION__YBASE:
        setYBase((Integer)newValue);
        return;
      case AfpTextPackage.IMAGE_RESOLUTION__XRESOL:
        setXResol((Integer)newValue);
        return;
      case AfpTextPackage.IMAGE_RESOLUTION__YRESOL:
        setYResol((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.IMAGE_RESOLUTION__XBASE:
        setXBase(XBASE_EDEFAULT);
        return;
      case AfpTextPackage.IMAGE_RESOLUTION__YBASE:
        setYBase(YBASE_EDEFAULT);
        return;
      case AfpTextPackage.IMAGE_RESOLUTION__XRESOL:
        setXResol(XRESOL_EDEFAULT);
        return;
      case AfpTextPackage.IMAGE_RESOLUTION__YRESOL:
        setYResol(YRESOL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.IMAGE_RESOLUTION__XBASE:
        return xBase != XBASE_EDEFAULT;
      case AfpTextPackage.IMAGE_RESOLUTION__YBASE:
        return yBase != YBASE_EDEFAULT;
      case AfpTextPackage.IMAGE_RESOLUTION__XRESOL:
        return xResol != XRESOL_EDEFAULT;
      case AfpTextPackage.IMAGE_RESOLUTION__YRESOL:
        return yResol != YRESOL_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (XBase: ");
    result.append(xBase);
    result.append(", YBase: ");
    result.append(yBase);
    result.append(", XResol: ");
    result.append(xResol);
    result.append(", YResol: ");
    result.append(yResol);
    result.append(')');
    return result.toString();
  }

} //ImageResolutionImpl
