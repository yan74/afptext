/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import java.util.Collection;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.MDD;
import org.afplib.afpText.triplet;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>MDD</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.MDDImpl#getXmBase <em>Xm Base</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.MDDImpl#getYmBase <em>Ym Base</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.MDDImpl#getXmUnits <em>Xm Units</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.MDDImpl#getYmUnits <em>Ym Units</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.MDDImpl#getXmSize <em>Xm Size</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.MDDImpl#getYmSize <em>Ym Size</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.MDDImpl#getMDDFlgs <em>MDD Flgs</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.MDDImpl#getTriplets <em>Triplets</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MDDImpl extends structuredFieldImpl implements MDD
{
  /**
   * The default value of the '{@link #getXmBase() <em>Xm Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXmBase()
   * @generated
   * @ordered
   */
  protected static final int XM_BASE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXmBase() <em>Xm Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXmBase()
   * @generated
   * @ordered
   */
  protected int xmBase = XM_BASE_EDEFAULT;

  /**
   * The default value of the '{@link #getYmBase() <em>Ym Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYmBase()
   * @generated
   * @ordered
   */
  protected static final int YM_BASE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYmBase() <em>Ym Base</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYmBase()
   * @generated
   * @ordered
   */
  protected int ymBase = YM_BASE_EDEFAULT;

  /**
   * The default value of the '{@link #getXmUnits() <em>Xm Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXmUnits()
   * @generated
   * @ordered
   */
  protected static final int XM_UNITS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXmUnits() <em>Xm Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXmUnits()
   * @generated
   * @ordered
   */
  protected int xmUnits = XM_UNITS_EDEFAULT;

  /**
   * The default value of the '{@link #getYmUnits() <em>Ym Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYmUnits()
   * @generated
   * @ordered
   */
  protected static final int YM_UNITS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYmUnits() <em>Ym Units</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYmUnits()
   * @generated
   * @ordered
   */
  protected int ymUnits = YM_UNITS_EDEFAULT;

  /**
   * The default value of the '{@link #getXmSize() <em>Xm Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXmSize()
   * @generated
   * @ordered
   */
  protected static final int XM_SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXmSize() <em>Xm Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXmSize()
   * @generated
   * @ordered
   */
  protected int xmSize = XM_SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getYmSize() <em>Ym Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYmSize()
   * @generated
   * @ordered
   */
  protected static final int YM_SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getYmSize() <em>Ym Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYmSize()
   * @generated
   * @ordered
   */
  protected int ymSize = YM_SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getMDDFlgs() <em>MDD Flgs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMDDFlgs()
   * @generated
   * @ordered
   */
  protected static final int MDD_FLGS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMDDFlgs() <em>MDD Flgs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMDDFlgs()
   * @generated
   * @ordered
   */
  protected int mddFlgs = MDD_FLGS_EDEFAULT;

  /**
   * The cached value of the '{@link #getTriplets() <em>Triplets</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTriplets()
   * @generated
   * @ordered
   */
  protected EList<triplet> triplets;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MDDImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getMDD();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXmBase()
  {
    return xmBase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXmBase(int newXmBase)
  {
    int oldXmBase = xmBase;
    xmBase = newXmBase;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.MDD__XM_BASE, oldXmBase, xmBase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYmBase()
  {
    return ymBase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYmBase(int newYmBase)
  {
    int oldYmBase = ymBase;
    ymBase = newYmBase;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.MDD__YM_BASE, oldYmBase, ymBase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXmUnits()
  {
    return xmUnits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXmUnits(int newXmUnits)
  {
    int oldXmUnits = xmUnits;
    xmUnits = newXmUnits;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.MDD__XM_UNITS, oldXmUnits, xmUnits));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYmUnits()
  {
    return ymUnits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYmUnits(int newYmUnits)
  {
    int oldYmUnits = ymUnits;
    ymUnits = newYmUnits;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.MDD__YM_UNITS, oldYmUnits, ymUnits));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getXmSize()
  {
    return xmSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXmSize(int newXmSize)
  {
    int oldXmSize = xmSize;
    xmSize = newXmSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.MDD__XM_SIZE, oldXmSize, xmSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getYmSize()
  {
    return ymSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYmSize(int newYmSize)
  {
    int oldYmSize = ymSize;
    ymSize = newYmSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.MDD__YM_SIZE, oldYmSize, ymSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMDDFlgs()
  {
    return mddFlgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMDDFlgs(int newMDDFlgs)
  {
    int oldMDDFlgs = mddFlgs;
    mddFlgs = newMDDFlgs;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.MDD__MDD_FLGS, oldMDDFlgs, mddFlgs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<triplet> getTriplets()
  {
    if (triplets == null)
    {
      triplets = new EObjectContainmentEList<triplet>(triplet.class, this, AfpTextPackage.MDD__TRIPLETS);
    }
    return triplets;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AfpTextPackage.MDD__TRIPLETS:
        return ((InternalEList<?>)getTriplets()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.MDD__XM_BASE:
        return getXmBase();
      case AfpTextPackage.MDD__YM_BASE:
        return getYmBase();
      case AfpTextPackage.MDD__XM_UNITS:
        return getXmUnits();
      case AfpTextPackage.MDD__YM_UNITS:
        return getYmUnits();
      case AfpTextPackage.MDD__XM_SIZE:
        return getXmSize();
      case AfpTextPackage.MDD__YM_SIZE:
        return getYmSize();
      case AfpTextPackage.MDD__MDD_FLGS:
        return getMDDFlgs();
      case AfpTextPackage.MDD__TRIPLETS:
        return getTriplets();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.MDD__XM_BASE:
        setXmBase((Integer)newValue);
        return;
      case AfpTextPackage.MDD__YM_BASE:
        setYmBase((Integer)newValue);
        return;
      case AfpTextPackage.MDD__XM_UNITS:
        setXmUnits((Integer)newValue);
        return;
      case AfpTextPackage.MDD__YM_UNITS:
        setYmUnits((Integer)newValue);
        return;
      case AfpTextPackage.MDD__XM_SIZE:
        setXmSize((Integer)newValue);
        return;
      case AfpTextPackage.MDD__YM_SIZE:
        setYmSize((Integer)newValue);
        return;
      case AfpTextPackage.MDD__MDD_FLGS:
        setMDDFlgs((Integer)newValue);
        return;
      case AfpTextPackage.MDD__TRIPLETS:
        getTriplets().clear();
        getTriplets().addAll((Collection<? extends triplet>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.MDD__XM_BASE:
        setXmBase(XM_BASE_EDEFAULT);
        return;
      case AfpTextPackage.MDD__YM_BASE:
        setYmBase(YM_BASE_EDEFAULT);
        return;
      case AfpTextPackage.MDD__XM_UNITS:
        setXmUnits(XM_UNITS_EDEFAULT);
        return;
      case AfpTextPackage.MDD__YM_UNITS:
        setYmUnits(YM_UNITS_EDEFAULT);
        return;
      case AfpTextPackage.MDD__XM_SIZE:
        setXmSize(XM_SIZE_EDEFAULT);
        return;
      case AfpTextPackage.MDD__YM_SIZE:
        setYmSize(YM_SIZE_EDEFAULT);
        return;
      case AfpTextPackage.MDD__MDD_FLGS:
        setMDDFlgs(MDD_FLGS_EDEFAULT);
        return;
      case AfpTextPackage.MDD__TRIPLETS:
        getTriplets().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.MDD__XM_BASE:
        return xmBase != XM_BASE_EDEFAULT;
      case AfpTextPackage.MDD__YM_BASE:
        return ymBase != YM_BASE_EDEFAULT;
      case AfpTextPackage.MDD__XM_UNITS:
        return xmUnits != XM_UNITS_EDEFAULT;
      case AfpTextPackage.MDD__YM_UNITS:
        return ymUnits != YM_UNITS_EDEFAULT;
      case AfpTextPackage.MDD__XM_SIZE:
        return xmSize != XM_SIZE_EDEFAULT;
      case AfpTextPackage.MDD__YM_SIZE:
        return ymSize != YM_SIZE_EDEFAULT;
      case AfpTextPackage.MDD__MDD_FLGS:
        return mddFlgs != MDD_FLGS_EDEFAULT;
      case AfpTextPackage.MDD__TRIPLETS:
        return triplets != null && !triplets.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (XmBase: ");
    result.append(xmBase);
    result.append(", YmBase: ");
    result.append(ymBase);
    result.append(", XmUnits: ");
    result.append(xmUnits);
    result.append(", YmUnits: ");
    result.append(ymUnits);
    result.append(", XmSize: ");
    result.append(xmSize);
    result.append(", YmSize: ");
    result.append(ymSize);
    result.append(", MDDFlgs: ");
    result.append(mddFlgs);
    result.append(')');
    return result.toString();
  }

} //MDDImpl
