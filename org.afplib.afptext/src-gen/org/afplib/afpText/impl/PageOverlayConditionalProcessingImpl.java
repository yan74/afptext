/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.PageOverlayConditionalProcessing;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Page Overlay Conditional Processing</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.PageOverlayConditionalProcessingImpl#getPgOvType <em>Pg Ov Type</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.PageOverlayConditionalProcessingImpl#getLevel <em>Level</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PageOverlayConditionalProcessingImpl extends tripletImpl implements PageOverlayConditionalProcessing
{
  /**
   * The default value of the '{@link #getPgOvType() <em>Pg Ov Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPgOvType()
   * @generated
   * @ordered
   */
  protected static final int PG_OV_TYPE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPgOvType() <em>Pg Ov Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPgOvType()
   * @generated
   * @ordered
   */
  protected int pgOvType = PG_OV_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getLevel() <em>Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLevel()
   * @generated
   * @ordered
   */
  protected static final int LEVEL_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getLevel() <em>Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLevel()
   * @generated
   * @ordered
   */
  protected int level = LEVEL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PageOverlayConditionalProcessingImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getPageOverlayConditionalProcessing();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getPgOvType()
  {
    return pgOvType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPgOvType(int newPgOvType)
  {
    int oldPgOvType = pgOvType;
    pgOvType = newPgOvType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.PAGE_OVERLAY_CONDITIONAL_PROCESSING__PG_OV_TYPE, oldPgOvType, pgOvType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getLevel()
  {
    return level;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLevel(int newLevel)
  {
    int oldLevel = level;
    level = newLevel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.PAGE_OVERLAY_CONDITIONAL_PROCESSING__LEVEL, oldLevel, level));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.PAGE_OVERLAY_CONDITIONAL_PROCESSING__PG_OV_TYPE:
        return getPgOvType();
      case AfpTextPackage.PAGE_OVERLAY_CONDITIONAL_PROCESSING__LEVEL:
        return getLevel();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.PAGE_OVERLAY_CONDITIONAL_PROCESSING__PG_OV_TYPE:
        setPgOvType((Integer)newValue);
        return;
      case AfpTextPackage.PAGE_OVERLAY_CONDITIONAL_PROCESSING__LEVEL:
        setLevel((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.PAGE_OVERLAY_CONDITIONAL_PROCESSING__PG_OV_TYPE:
        setPgOvType(PG_OV_TYPE_EDEFAULT);
        return;
      case AfpTextPackage.PAGE_OVERLAY_CONDITIONAL_PROCESSING__LEVEL:
        setLevel(LEVEL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.PAGE_OVERLAY_CONDITIONAL_PROCESSING__PG_OV_TYPE:
        return pgOvType != PG_OV_TYPE_EDEFAULT;
      case AfpTextPackage.PAGE_OVERLAY_CONDITIONAL_PROCESSING__LEVEL:
        return level != LEVEL_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (PgOvType: ");
    result.append(pgOvType);
    result.append(", Level: ");
    result.append(level);
    result.append(')');
    return result.toString();
  }

} //PageOverlayConditionalProcessingImpl
