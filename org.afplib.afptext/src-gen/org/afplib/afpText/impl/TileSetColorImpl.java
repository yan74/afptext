/**
 * generated by Xtext 2.18.0.M3
 */
package org.afplib.afpText.impl;

import org.afplib.afpText.AfpTextPackage;
import org.afplib.afpText.TileSetColor;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Tile Set Color</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.afplib.afpText.impl.TileSetColorImpl#getCSPACE <em>CSPACE</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.TileSetColorImpl#getRESERVED <em>RESERVED</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.TileSetColorImpl#getSIZE1 <em>SIZE1</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.TileSetColorImpl#getSIZE2 <em>SIZE2</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.TileSetColorImpl#getSIZE3 <em>SIZE3</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.TileSetColorImpl#getSIZE4 <em>SIZE4</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.TileSetColorImpl#getCVAL1 <em>CVAL1</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.TileSetColorImpl#getCVAL2 <em>CVAL2</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.TileSetColorImpl#getCVAL3 <em>CVAL3</em>}</li>
 *   <li>{@link org.afplib.afpText.impl.TileSetColorImpl#getCVAL4 <em>CVAL4</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TileSetColorImpl extends tripletImpl implements TileSetColor
{
  /**
   * The default value of the '{@link #getCSPACE() <em>CSPACE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCSPACE()
   * @generated
   * @ordered
   */
  protected static final int CSPACE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCSPACE() <em>CSPACE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCSPACE()
   * @generated
   * @ordered
   */
  protected int cspace = CSPACE_EDEFAULT;

  /**
   * The default value of the '{@link #getRESERVED() <em>RESERVED</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRESERVED()
   * @generated
   * @ordered
   */
  protected static final int RESERVED_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRESERVED() <em>RESERVED</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRESERVED()
   * @generated
   * @ordered
   */
  protected int reserved = RESERVED_EDEFAULT;

  /**
   * The default value of the '{@link #getSIZE1() <em>SIZE1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSIZE1()
   * @generated
   * @ordered
   */
  protected static final int SIZE1_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSIZE1() <em>SIZE1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSIZE1()
   * @generated
   * @ordered
   */
  protected int size1 = SIZE1_EDEFAULT;

  /**
   * The default value of the '{@link #getSIZE2() <em>SIZE2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSIZE2()
   * @generated
   * @ordered
   */
  protected static final int SIZE2_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSIZE2() <em>SIZE2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSIZE2()
   * @generated
   * @ordered
   */
  protected int size2 = SIZE2_EDEFAULT;

  /**
   * The default value of the '{@link #getSIZE3() <em>SIZE3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSIZE3()
   * @generated
   * @ordered
   */
  protected static final int SIZE3_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSIZE3() <em>SIZE3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSIZE3()
   * @generated
   * @ordered
   */
  protected int size3 = SIZE3_EDEFAULT;

  /**
   * The default value of the '{@link #getSIZE4() <em>SIZE4</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSIZE4()
   * @generated
   * @ordered
   */
  protected static final int SIZE4_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSIZE4() <em>SIZE4</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSIZE4()
   * @generated
   * @ordered
   */
  protected int size4 = SIZE4_EDEFAULT;

  /**
   * The default value of the '{@link #getCVAL1() <em>CVAL1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCVAL1()
   * @generated
   * @ordered
   */
  protected static final int CVAL1_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCVAL1() <em>CVAL1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCVAL1()
   * @generated
   * @ordered
   */
  protected int cval1 = CVAL1_EDEFAULT;

  /**
   * The default value of the '{@link #getCVAL2() <em>CVAL2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCVAL2()
   * @generated
   * @ordered
   */
  protected static final int CVAL2_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCVAL2() <em>CVAL2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCVAL2()
   * @generated
   * @ordered
   */
  protected int cval2 = CVAL2_EDEFAULT;

  /**
   * The default value of the '{@link #getCVAL3() <em>CVAL3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCVAL3()
   * @generated
   * @ordered
   */
  protected static final int CVAL3_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCVAL3() <em>CVAL3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCVAL3()
   * @generated
   * @ordered
   */
  protected int cval3 = CVAL3_EDEFAULT;

  /**
   * The default value of the '{@link #getCVAL4() <em>CVAL4</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCVAL4()
   * @generated
   * @ordered
   */
  protected static final int CVAL4_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCVAL4() <em>CVAL4</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCVAL4()
   * @generated
   * @ordered
   */
  protected int cval4 = CVAL4_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TileSetColorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AfpTextPackage.eINSTANCE.getTileSetColor();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCSPACE()
  {
    return cspace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCSPACE(int newCSPACE)
  {
    int oldCSPACE = cspace;
    cspace = newCSPACE;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.TILE_SET_COLOR__CSPACE, oldCSPACE, cspace));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getRESERVED()
  {
    return reserved;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRESERVED(int newRESERVED)
  {
    int oldRESERVED = reserved;
    reserved = newRESERVED;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.TILE_SET_COLOR__RESERVED, oldRESERVED, reserved));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getSIZE1()
  {
    return size1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSIZE1(int newSIZE1)
  {
    int oldSIZE1 = size1;
    size1 = newSIZE1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.TILE_SET_COLOR__SIZE1, oldSIZE1, size1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getSIZE2()
  {
    return size2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSIZE2(int newSIZE2)
  {
    int oldSIZE2 = size2;
    size2 = newSIZE2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.TILE_SET_COLOR__SIZE2, oldSIZE2, size2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getSIZE3()
  {
    return size3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSIZE3(int newSIZE3)
  {
    int oldSIZE3 = size3;
    size3 = newSIZE3;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.TILE_SET_COLOR__SIZE3, oldSIZE3, size3));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getSIZE4()
  {
    return size4;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSIZE4(int newSIZE4)
  {
    int oldSIZE4 = size4;
    size4 = newSIZE4;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.TILE_SET_COLOR__SIZE4, oldSIZE4, size4));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCVAL1()
  {
    return cval1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCVAL1(int newCVAL1)
  {
    int oldCVAL1 = cval1;
    cval1 = newCVAL1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.TILE_SET_COLOR__CVAL1, oldCVAL1, cval1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCVAL2()
  {
    return cval2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCVAL2(int newCVAL2)
  {
    int oldCVAL2 = cval2;
    cval2 = newCVAL2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.TILE_SET_COLOR__CVAL2, oldCVAL2, cval2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCVAL3()
  {
    return cval3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCVAL3(int newCVAL3)
  {
    int oldCVAL3 = cval3;
    cval3 = newCVAL3;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.TILE_SET_COLOR__CVAL3, oldCVAL3, cval3));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCVAL4()
  {
    return cval4;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCVAL4(int newCVAL4)
  {
    int oldCVAL4 = cval4;
    cval4 = newCVAL4;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AfpTextPackage.TILE_SET_COLOR__CVAL4, oldCVAL4, cval4));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AfpTextPackage.TILE_SET_COLOR__CSPACE:
        return getCSPACE();
      case AfpTextPackage.TILE_SET_COLOR__RESERVED:
        return getRESERVED();
      case AfpTextPackage.TILE_SET_COLOR__SIZE1:
        return getSIZE1();
      case AfpTextPackage.TILE_SET_COLOR__SIZE2:
        return getSIZE2();
      case AfpTextPackage.TILE_SET_COLOR__SIZE3:
        return getSIZE3();
      case AfpTextPackage.TILE_SET_COLOR__SIZE4:
        return getSIZE4();
      case AfpTextPackage.TILE_SET_COLOR__CVAL1:
        return getCVAL1();
      case AfpTextPackage.TILE_SET_COLOR__CVAL2:
        return getCVAL2();
      case AfpTextPackage.TILE_SET_COLOR__CVAL3:
        return getCVAL3();
      case AfpTextPackage.TILE_SET_COLOR__CVAL4:
        return getCVAL4();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AfpTextPackage.TILE_SET_COLOR__CSPACE:
        setCSPACE((Integer)newValue);
        return;
      case AfpTextPackage.TILE_SET_COLOR__RESERVED:
        setRESERVED((Integer)newValue);
        return;
      case AfpTextPackage.TILE_SET_COLOR__SIZE1:
        setSIZE1((Integer)newValue);
        return;
      case AfpTextPackage.TILE_SET_COLOR__SIZE2:
        setSIZE2((Integer)newValue);
        return;
      case AfpTextPackage.TILE_SET_COLOR__SIZE3:
        setSIZE3((Integer)newValue);
        return;
      case AfpTextPackage.TILE_SET_COLOR__SIZE4:
        setSIZE4((Integer)newValue);
        return;
      case AfpTextPackage.TILE_SET_COLOR__CVAL1:
        setCVAL1((Integer)newValue);
        return;
      case AfpTextPackage.TILE_SET_COLOR__CVAL2:
        setCVAL2((Integer)newValue);
        return;
      case AfpTextPackage.TILE_SET_COLOR__CVAL3:
        setCVAL3((Integer)newValue);
        return;
      case AfpTextPackage.TILE_SET_COLOR__CVAL4:
        setCVAL4((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.TILE_SET_COLOR__CSPACE:
        setCSPACE(CSPACE_EDEFAULT);
        return;
      case AfpTextPackage.TILE_SET_COLOR__RESERVED:
        setRESERVED(RESERVED_EDEFAULT);
        return;
      case AfpTextPackage.TILE_SET_COLOR__SIZE1:
        setSIZE1(SIZE1_EDEFAULT);
        return;
      case AfpTextPackage.TILE_SET_COLOR__SIZE2:
        setSIZE2(SIZE2_EDEFAULT);
        return;
      case AfpTextPackage.TILE_SET_COLOR__SIZE3:
        setSIZE3(SIZE3_EDEFAULT);
        return;
      case AfpTextPackage.TILE_SET_COLOR__SIZE4:
        setSIZE4(SIZE4_EDEFAULT);
        return;
      case AfpTextPackage.TILE_SET_COLOR__CVAL1:
        setCVAL1(CVAL1_EDEFAULT);
        return;
      case AfpTextPackage.TILE_SET_COLOR__CVAL2:
        setCVAL2(CVAL2_EDEFAULT);
        return;
      case AfpTextPackage.TILE_SET_COLOR__CVAL3:
        setCVAL3(CVAL3_EDEFAULT);
        return;
      case AfpTextPackage.TILE_SET_COLOR__CVAL4:
        setCVAL4(CVAL4_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AfpTextPackage.TILE_SET_COLOR__CSPACE:
        return cspace != CSPACE_EDEFAULT;
      case AfpTextPackage.TILE_SET_COLOR__RESERVED:
        return reserved != RESERVED_EDEFAULT;
      case AfpTextPackage.TILE_SET_COLOR__SIZE1:
        return size1 != SIZE1_EDEFAULT;
      case AfpTextPackage.TILE_SET_COLOR__SIZE2:
        return size2 != SIZE2_EDEFAULT;
      case AfpTextPackage.TILE_SET_COLOR__SIZE3:
        return size3 != SIZE3_EDEFAULT;
      case AfpTextPackage.TILE_SET_COLOR__SIZE4:
        return size4 != SIZE4_EDEFAULT;
      case AfpTextPackage.TILE_SET_COLOR__CVAL1:
        return cval1 != CVAL1_EDEFAULT;
      case AfpTextPackage.TILE_SET_COLOR__CVAL2:
        return cval2 != CVAL2_EDEFAULT;
      case AfpTextPackage.TILE_SET_COLOR__CVAL3:
        return cval3 != CVAL3_EDEFAULT;
      case AfpTextPackage.TILE_SET_COLOR__CVAL4:
        return cval4 != CVAL4_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (CSPACE: ");
    result.append(cspace);
    result.append(", RESERVED: ");
    result.append(reserved);
    result.append(", SIZE1: ");
    result.append(size1);
    result.append(", SIZE2: ");
    result.append(size2);
    result.append(", SIZE3: ");
    result.append(size3);
    result.append(", SIZE4: ");
    result.append(size4);
    result.append(", CVAL1: ");
    result.append(cval1);
    result.append(", CVAL2: ");
    result.append(cval2);
    result.append(", CVAL3: ");
    result.append(cval3);
    result.append(", CVAL4: ");
    result.append(cval4);
    result.append(')');
    return result.toString();
  }

} //TileSetColorImpl
