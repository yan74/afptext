/**
 * generated by Xtext 2.19.0
 */
package org.afplib.afpText.util;

import org.afplib.afpText.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.afplib.afpText.AfpTextPackage
 * @generated
 */
public class AfpTextSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static AfpTextPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AfpTextSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = AfpTextPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case AfpTextPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.STRUCTURED_FIELD:
      {
        structuredField structuredField = (structuredField)theEObject;
        T result = casestructuredField(structuredField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.LINE_DATA:
      {
        LineData lineData = (LineData)theEObject;
        T result = caseLineData(lineData);
        if (result == null) result = casestructuredField(lineData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BAG:
      {
        BAG bag = (BAG)theEObject;
        T result = caseBAG(bag);
        if (result == null) result = casestructuredField(bag);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BBC:
      {
        BBC bbc = (BBC)theEObject;
        T result = caseBBC(bbc);
        if (result == null) result = casestructuredField(bbc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BCA:
      {
        BCA bca = (BCA)theEObject;
        T result = caseBCA(bca);
        if (result == null) result = casestructuredField(bca);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BCF:
      {
        BCF bcf = (BCF)theEObject;
        T result = caseBCF(bcf);
        if (result == null) result = casestructuredField(bcf);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BCP:
      {
        BCP bcp = (BCP)theEObject;
        T result = caseBCP(bcp);
        if (result == null) result = casestructuredField(bcp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BDA:
      {
        BDA bda = (BDA)theEObject;
        T result = caseBDA(bda);
        if (result == null) result = casestructuredField(bda);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BDD:
      {
        BDD bdd = (BDD)theEObject;
        T result = caseBDD(bdd);
        if (result == null) result = casestructuredField(bdd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BDG:
      {
        BDG bdg = (BDG)theEObject;
        T result = caseBDG(bdg);
        if (result == null) result = casestructuredField(bdg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BDI:
      {
        BDI bdi = (BDI)theEObject;
        T result = caseBDI(bdi);
        if (result == null) result = casestructuredField(bdi);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BDM:
      {
        BDM bdm = (BDM)theEObject;
        T result = caseBDM(bdm);
        if (result == null) result = casestructuredField(bdm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BDT:
      {
        BDT bdt = (BDT)theEObject;
        T result = caseBDT(bdt);
        if (result == null) result = casestructuredField(bdt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BDX:
      {
        BDX bdx = (BDX)theEObject;
        T result = caseBDX(bdx);
        if (result == null) result = casestructuredField(bdx);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BFG:
      {
        BFG bfg = (BFG)theEObject;
        T result = caseBFG(bfg);
        if (result == null) result = casestructuredField(bfg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BFM:
      {
        BFM bfm = (BFM)theEObject;
        T result = caseBFM(bfm);
        if (result == null) result = casestructuredField(bfm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BFN:
      {
        BFN bfn = (BFN)theEObject;
        T result = caseBFN(bfn);
        if (result == null) result = casestructuredField(bfn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BGR:
      {
        BGR bgr = (BGR)theEObject;
        T result = caseBGR(bgr);
        if (result == null) result = casestructuredField(bgr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BII:
      {
        BII bii = (BII)theEObject;
        T result = caseBII(bii);
        if (result == null) result = casestructuredField(bii);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BIM:
      {
        BIM bim = (BIM)theEObject;
        T result = caseBIM(bim);
        if (result == null) result = casestructuredField(bim);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BMM:
      {
        BMM bmm = (BMM)theEObject;
        T result = caseBMM(bmm);
        if (result == null) result = casestructuredField(bmm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BMO:
      {
        BMO bmo = (BMO)theEObject;
        T result = caseBMO(bmo);
        if (result == null) result = casestructuredField(bmo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BNG:
      {
        BNG bng = (BNG)theEObject;
        T result = caseBNG(bng);
        if (result == null) result = casestructuredField(bng);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BOC:
      {
        BOC boc = (BOC)theEObject;
        T result = caseBOC(boc);
        if (result == null) result = casestructuredField(boc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BOG:
      {
        BOG bog = (BOG)theEObject;
        T result = caseBOG(bog);
        if (result == null) result = casestructuredField(bog);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BPF:
      {
        BPF bpf = (BPF)theEObject;
        T result = caseBPF(bpf);
        if (result == null) result = casestructuredField(bpf);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BPG:
      {
        BPG bpg = (BPG)theEObject;
        T result = caseBPG(bpg);
        if (result == null) result = casestructuredField(bpg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BPM:
      {
        BPM bpm = (BPM)theEObject;
        T result = caseBPM(bpm);
        if (result == null) result = casestructuredField(bpm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BPS:
      {
        BPS bps = (BPS)theEObject;
        T result = caseBPS(bps);
        if (result == null) result = casestructuredField(bps);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BPT:
      {
        BPT bpt = (BPT)theEObject;
        T result = caseBPT(bpt);
        if (result == null) result = casestructuredField(bpt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BRG:
      {
        BRG brg = (BRG)theEObject;
        T result = caseBRG(brg);
        if (result == null) result = casestructuredField(brg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BRS:
      {
        BRS brs = (BRS)theEObject;
        T result = caseBRS(brs);
        if (result == null) result = casestructuredField(brs);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BSG:
      {
        BSG bsg = (BSG)theEObject;
        T result = caseBSG(bsg);
        if (result == null) result = casestructuredField(bsg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CAT:
      {
        CAT cat = (CAT)theEObject;
        T result = caseCAT(cat);
        if (result == null) result = casestructuredField(cat);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CDD:
      {
        CDD cdd = (CDD)theEObject;
        T result = caseCDD(cdd);
        if (result == null) result = casestructuredField(cdd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CFC:
      {
        CFC cfc = (CFC)theEObject;
        T result = caseCFC(cfc);
        if (result == null) result = casestructuredField(cfc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CFI:
      {
        CFI cfi = (CFI)theEObject;
        T result = caseCFI(cfi);
        if (result == null) result = casestructuredField(cfi);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CPC:
      {
        CPC cpc = (CPC)theEObject;
        T result = caseCPC(cpc);
        if (result == null) result = casestructuredField(cpc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CPD:
      {
        CPD cpd = (CPD)theEObject;
        T result = caseCPD(cpd);
        if (result == null) result = casestructuredField(cpd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CPI:
      {
        CPI cpi = (CPI)theEObject;
        T result = caseCPI(cpi);
        if (result == null) result = casestructuredField(cpi);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CTC:
      {
        CTC ctc = (CTC)theEObject;
        T result = caseCTC(ctc);
        if (result == null) result = casestructuredField(ctc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.DXD:
      {
        DXD dxd = (DXD)theEObject;
        T result = caseDXD(dxd);
        if (result == null) result = casestructuredField(dxd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EAG:
      {
        EAG eag = (EAG)theEObject;
        T result = caseEAG(eag);
        if (result == null) result = casestructuredField(eag);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EBC:
      {
        EBC ebc = (EBC)theEObject;
        T result = caseEBC(ebc);
        if (result == null) result = casestructuredField(ebc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ECA:
      {
        ECA eca = (ECA)theEObject;
        T result = caseECA(eca);
        if (result == null) result = casestructuredField(eca);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ECF:
      {
        ECF ecf = (ECF)theEObject;
        T result = caseECF(ecf);
        if (result == null) result = casestructuredField(ecf);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ECP:
      {
        ECP ecp = (ECP)theEObject;
        T result = caseECP(ecp);
        if (result == null) result = casestructuredField(ecp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EDG:
      {
        EDG edg = (EDG)theEObject;
        T result = caseEDG(edg);
        if (result == null) result = casestructuredField(edg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EDI:
      {
        EDI edi = (EDI)theEObject;
        T result = caseEDI(edi);
        if (result == null) result = casestructuredField(edi);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EDM:
      {
        EDM edm = (EDM)theEObject;
        T result = caseEDM(edm);
        if (result == null) result = casestructuredField(edm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EDT:
      {
        EDT edt = (EDT)theEObject;
        T result = caseEDT(edt);
        if (result == null) result = casestructuredField(edt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EDX:
      {
        EDX edx = (EDX)theEObject;
        T result = caseEDX(edx);
        if (result == null) result = casestructuredField(edx);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EFG:
      {
        EFG efg = (EFG)theEObject;
        T result = caseEFG(efg);
        if (result == null) result = casestructuredField(efg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EFM:
      {
        EFM efm = (EFM)theEObject;
        T result = caseEFM(efm);
        if (result == null) result = casestructuredField(efm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EFN:
      {
        EFN efn = (EFN)theEObject;
        T result = caseEFN(efn);
        if (result == null) result = casestructuredField(efn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EGR:
      {
        EGR egr = (EGR)theEObject;
        T result = caseEGR(egr);
        if (result == null) result = casestructuredField(egr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EII:
      {
        EII eii = (EII)theEObject;
        T result = caseEII(eii);
        if (result == null) result = casestructuredField(eii);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EIM:
      {
        EIM eim = (EIM)theEObject;
        T result = caseEIM(eim);
        if (result == null) result = casestructuredField(eim);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EMM:
      {
        EMM emm = (EMM)theEObject;
        T result = caseEMM(emm);
        if (result == null) result = casestructuredField(emm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EMO:
      {
        EMO emo = (EMO)theEObject;
        T result = caseEMO(emo);
        if (result == null) result = casestructuredField(emo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ENG:
      {
        ENG eng = (ENG)theEObject;
        T result = caseENG(eng);
        if (result == null) result = casestructuredField(eng);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EOC:
      {
        EOC eoc = (EOC)theEObject;
        T result = caseEOC(eoc);
        if (result == null) result = casestructuredField(eoc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EOG:
      {
        EOG eog = (EOG)theEObject;
        T result = caseEOG(eog);
        if (result == null) result = casestructuredField(eog);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EPF:
      {
        EPF epf = (EPF)theEObject;
        T result = caseEPF(epf);
        if (result == null) result = casestructuredField(epf);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EPG:
      {
        EPG epg = (EPG)theEObject;
        T result = caseEPG(epg);
        if (result == null) result = casestructuredField(epg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EPM:
      {
        EPM epm = (EPM)theEObject;
        T result = caseEPM(epm);
        if (result == null) result = casestructuredField(epm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EPS:
      {
        EPS eps = (EPS)theEObject;
        T result = caseEPS(eps);
        if (result == null) result = casestructuredField(eps);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EPT:
      {
        EPT ept = (EPT)theEObject;
        T result = caseEPT(ept);
        if (result == null) result = casestructuredField(ept);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ERG:
      {
        ERG erg = (ERG)theEObject;
        T result = caseERG(erg);
        if (result == null) result = casestructuredField(erg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ERS:
      {
        ERS ers = (ERS)theEObject;
        T result = caseERS(ers);
        if (result == null) result = casestructuredField(ers);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ESG:
      {
        ESG esg = (ESG)theEObject;
        T result = caseESG(esg);
        if (result == null) result = casestructuredField(esg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNC:
      {
        FNC fnc = (FNC)theEObject;
        T result = caseFNC(fnc);
        if (result == null) result = casestructuredField(fnc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FND:
      {
        FND fnd = (FND)theEObject;
        T result = caseFND(fnd);
        if (result == null) result = casestructuredField(fnd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNG:
      {
        FNG fng = (FNG)theEObject;
        T result = caseFNG(fng);
        if (result == null) result = casestructuredField(fng);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNI:
      {
        FNI fni = (FNI)theEObject;
        T result = caseFNI(fni);
        if (result == null) result = casestructuredField(fni);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNN:
      {
        FNN fnn = (FNN)theEObject;
        T result = caseFNN(fnn);
        if (result == null) result = casestructuredField(fnn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNM:
      {
        FNM fnm = (FNM)theEObject;
        T result = caseFNM(fnm);
        if (result == null) result = casestructuredField(fnm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNO:
      {
        FNO fno = (FNO)theEObject;
        T result = caseFNO(fno);
        if (result == null) result = casestructuredField(fno);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNP:
      {
        FNP fnp = (FNP)theEObject;
        T result = caseFNP(fnp);
        if (result == null) result = casestructuredField(fnp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GAD:
      {
        GAD gad = (GAD)theEObject;
        T result = caseGAD(gad);
        if (result == null) result = casestructuredField(gad);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GDD:
      {
        GDD gdd = (GDD)theEObject;
        T result = caseGDD(gdd);
        if (result == null) result = casestructuredField(gdd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ICP:
      {
        ICP icp = (ICP)theEObject;
        T result = caseICP(icp);
        if (result == null) result = casestructuredField(icp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IDD:
      {
        IDD idd = (IDD)theEObject;
        T result = caseIDD(idd);
        if (result == null) result = casestructuredField(idd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IEL:
      {
        IEL iel = (IEL)theEObject;
        T result = caseIEL(iel);
        if (result == null) result = casestructuredField(iel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IID:
      {
        IID iid = (IID)theEObject;
        T result = caseIID(iid);
        if (result == null) result = casestructuredField(iid);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IMM:
      {
        IMM imm = (IMM)theEObject;
        T result = caseIMM(imm);
        if (result == null) result = casestructuredField(imm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IOB:
      {
        IOB iob = (IOB)theEObject;
        T result = caseIOB(iob);
        if (result == null) result = casestructuredField(iob);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IOC:
      {
        IOC ioc = (IOC)theEObject;
        T result = caseIOC(ioc);
        if (result == null) result = casestructuredField(ioc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IPD:
      {
        IPD ipd = (IPD)theEObject;
        T result = caseIPD(ipd);
        if (result == null) result = casestructuredField(ipd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IPG:
      {
        IPG ipg = (IPG)theEObject;
        T result = caseIPG(ipg);
        if (result == null) result = casestructuredField(ipg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IPO:
      {
        IPO ipo = (IPO)theEObject;
        T result = caseIPO(ipo);
        if (result == null) result = casestructuredField(ipo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IPS:
      {
        IPS ips = (IPS)theEObject;
        T result = caseIPS(ips);
        if (result == null) result = casestructuredField(ips);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IRD:
      {
        IRD ird = (IRD)theEObject;
        T result = caseIRD(ird);
        if (result == null) result = casestructuredField(ird);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.LLE:
      {
        LLE lle = (LLE)theEObject;
        T result = caseLLE(lle);
        if (result == null) result = casestructuredField(lle);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.LNC:
      {
        LNC lnc = (LNC)theEObject;
        T result = caseLNC(lnc);
        if (result == null) result = casestructuredField(lnc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.LND:
      {
        LND lnd = (LND)theEObject;
        T result = caseLND(lnd);
        if (result == null) result = casestructuredField(lnd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MBC:
      {
        MBC mbc = (MBC)theEObject;
        T result = caseMBC(mbc);
        if (result == null) result = casestructuredField(mbc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MCA:
      {
        MCA mca = (MCA)theEObject;
        T result = caseMCA(mca);
        if (result == null) result = casestructuredField(mca);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MCC:
      {
        MCC mcc = (MCC)theEObject;
        T result = caseMCC(mcc);
        if (result == null) result = casestructuredField(mcc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MCD:
      {
        MCD mcd = (MCD)theEObject;
        T result = caseMCD(mcd);
        if (result == null) result = casestructuredField(mcd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MCF:
      {
        MCF mcf = (MCF)theEObject;
        T result = caseMCF(mcf);
        if (result == null) result = casestructuredField(mcf);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MCF1:
      {
        MCF1 mcf1 = (MCF1)theEObject;
        T result = caseMCF1(mcf1);
        if (result == null) result = casestructuredField(mcf1);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MDD:
      {
        MDD mdd = (MDD)theEObject;
        T result = caseMDD(mdd);
        if (result == null) result = casestructuredField(mdd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MDR:
      {
        MDR mdr = (MDR)theEObject;
        T result = caseMDR(mdr);
        if (result == null) result = casestructuredField(mdr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MFC:
      {
        MFC mfc = (MFC)theEObject;
        T result = caseMFC(mfc);
        if (result == null) result = casestructuredField(mfc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MGO:
      {
        MGO mgo = (MGO)theEObject;
        T result = caseMGO(mgo);
        if (result == null) result = casestructuredField(mgo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MIO:
      {
        MIO mio = (MIO)theEObject;
        T result = caseMIO(mio);
        if (result == null) result = casestructuredField(mio);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MMC:
      {
        MMC mmc = (MMC)theEObject;
        T result = caseMMC(mmc);
        if (result == null) result = casestructuredField(mmc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MMD:
      {
        MMD mmd = (MMD)theEObject;
        T result = caseMMD(mmd);
        if (result == null) result = casestructuredField(mmd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MMO:
      {
        MMO mmo = (MMO)theEObject;
        T result = caseMMO(mmo);
        if (result == null) result = casestructuredField(mmo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MMT:
      {
        MMT mmt = (MMT)theEObject;
        T result = caseMMT(mmt);
        if (result == null) result = casestructuredField(mmt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MPG:
      {
        MPG mpg = (MPG)theEObject;
        T result = caseMPG(mpg);
        if (result == null) result = casestructuredField(mpg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MPO:
      {
        MPO mpo = (MPO)theEObject;
        T result = caseMPO(mpo);
        if (result == null) result = casestructuredField(mpo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MPS:
      {
        MPS mps = (MPS)theEObject;
        T result = caseMPS(mps);
        if (result == null) result = casestructuredField(mps);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MSU:
      {
        MSU msu = (MSU)theEObject;
        T result = caseMSU(msu);
        if (result == null) result = casestructuredField(msu);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.NOP:
      {
        NOP nop = (NOP)theEObject;
        T result = caseNOP(nop);
        if (result == null) result = casestructuredField(nop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBD:
      {
        OBD obd = (OBD)theEObject;
        T result = caseOBD(obd);
        if (result == null) result = casestructuredField(obd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBP:
      {
        OBP obp = (OBP)theEObject;
        T result = caseOBP(obp);
        if (result == null) result = casestructuredField(obp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OCD:
      {
        OCD ocd = (OCD)theEObject;
        T result = caseOCD(ocd);
        if (result == null) result = casestructuredField(ocd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PEC:
      {
        PEC pec = (PEC)theEObject;
        T result = casePEC(pec);
        if (result == null) result = casestructuredField(pec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PFC:
      {
        PFC pfc = (PFC)theEObject;
        T result = casePFC(pfc);
        if (result == null) result = casestructuredField(pfc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PGD:
      {
        PGD pgd = (PGD)theEObject;
        T result = casePGD(pgd);
        if (result == null) result = casestructuredField(pgd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PGP:
      {
        PGP pgp = (PGP)theEObject;
        T result = casePGP(pgp);
        if (result == null) result = casestructuredField(pgp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PGP1:
      {
        PGP1 pgp1 = (PGP1)theEObject;
        T result = casePGP1(pgp1);
        if (result == null) result = casestructuredField(pgp1);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PMC:
      {
        PMC pmc = (PMC)theEObject;
        T result = casePMC(pmc);
        if (result == null) result = casestructuredField(pmc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PPO:
      {
        PPO ppo = (PPO)theEObject;
        T result = casePPO(ppo);
        if (result == null) result = casestructuredField(ppo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PTD:
      {
        PTD ptd = (PTD)theEObject;
        T result = casePTD(ptd);
        if (result == null) result = casestructuredField(ptd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PTD1:
      {
        PTD1 ptd1 = (PTD1)theEObject;
        T result = casePTD1(ptd1);
        if (result == null) result = casestructuredField(ptd1);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PTX:
      {
        PTX ptx = (PTX)theEObject;
        T result = casePTX(ptx);
        if (result == null) result = casestructuredField(ptx);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TLE:
      {
        TLE tle = (TLE)theEObject;
        T result = caseTLE(tle);
        if (result == null) result = casestructuredField(tle);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FGD:
      {
        FGD fgd = (FGD)theEObject;
        T result = caseFGD(fgd);
        if (result == null) result = casestructuredField(fgd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CPIRG:
      {
        CPIRG cpirg = (CPIRG)theEObject;
        T result = caseCPIRG(cpirg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CFIRG:
      {
        CFIRG cfirg = (CFIRG)theEObject;
        T result = caseCFIRG(cfirg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNIRG:
      {
        FNIRG fnirg = (FNIRG)theEObject;
        T result = caseFNIRG(fnirg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNMRG:
      {
        FNMRG fnmrg = (FNMRG)theEObject;
        T result = caseFNMRG(fnmrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.LLERG:
      {
        LLERG llerg = (LLERG)theEObject;
        T result = caseLLERG(llerg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MPSRG:
      {
        MPSRG mpsrg = (MPSRG)theEObject;
        T result = caseMPSRG(mpsrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MCFRG:
      {
        MCFRG mcfrg = (MCFRG)theEObject;
        T result = caseMCFRG(mcfrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MBCRG:
      {
        MBCRG mbcrg = (MBCRG)theEObject;
        T result = caseMBCRG(mbcrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MCARG:
      {
        MCARG mcarg = (MCARG)theEObject;
        T result = caseMCARG(mcarg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MCDRG:
      {
        MCDRG mcdrg = (MCDRG)theEObject;
        T result = caseMCDRG(mcdrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MDRRG:
      {
        MDRRG mdrrg = (MDRRG)theEObject;
        T result = caseMDRRG(mdrrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MGORG:
      {
        MGORG mgorg = (MGORG)theEObject;
        T result = caseMGORG(mgorg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MIORG:
      {
        MIORG miorg = (MIORG)theEObject;
        T result = caseMIORG(miorg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MMDRG:
      {
        MMDRG mmdrg = (MMDRG)theEObject;
        T result = caseMMDRG(mmdrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MMTRG:
      {
        MMTRG mmtrg = (MMTRG)theEObject;
        T result = caseMMTRG(mmtrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MPGRG:
      {
        MPGRG mpgrg = (MPGRG)theEObject;
        T result = caseMPGRG(mpgrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MPORG:
      {
        MPORG mporg = (MPORG)theEObject;
        T result = caseMPORG(mporg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PPORG:
      {
        PPORG pporg = (PPORG)theEObject;
        T result = casePPORG(pporg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PGPRG:
      {
        PGPRG pgprg = (PGPRG)theEObject;
        T result = casePGPRG(pgprg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MCCRG:
      {
        MCCRG mccrg = (MCCRG)theEObject;
        T result = caseMCCRG(mccrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MMORG:
      {
        MMORG mmorg = (MMORG)theEObject;
        T result = caseMMORG(mmorg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BAND_IMAGE_RG:
      {
        BandImageRG bandImageRG = (BandImageRG)theEObject;
        T result = caseBandImageRG(bandImageRG);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MCF1RG:
      {
        MCF1RG mcf1RG = (MCF1RG)theEObject;
        T result = caseMCF1RG(mcf1RG);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MMCRG:
      {
        MMCRG mmcrg = (MMCRG)theEObject;
        T result = caseMMCRG(mmcrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNORG:
      {
        FNORG fnorg = (FNORG)theEObject;
        T result = caseFNORG(fnorg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNPRG:
      {
        FNPRG fnprg = (FNPRG)theEObject;
        T result = caseFNPRG(fnprg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TILE_TOCRG:
      {
        TileTOCRG tileTOCRG = (TileTOCRG)theEObject;
        T result = caseTileTOCRG(tileTOCRG);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.SAMPLING_RATIOS_RG:
      {
        SamplingRatiosRG samplingRatiosRG = (SamplingRatiosRG)theEObject;
        T result = caseSamplingRatiosRG(samplingRatiosRG);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EXTERNAL_ALGORITHM_RG:
      {
        ExternalAlgorithmRG externalAlgorithmRG = (ExternalAlgorithmRG)theEObject;
        T result = caseExternalAlgorithmRG(externalAlgorithmRG);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNNRG:
      {
        FNNRG fnnrg = (FNNRG)theEObject;
        T result = caseFNNRG(fnnrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCBEZRG:
      {
        GCBEZRG gcbezrg = (GCBEZRG)theEObject;
        T result = caseGCBEZRG(gcbezrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCCBEZRG:
      {
        GCCBEZRG gccbezrg = (GCCBEZRG)theEObject;
        T result = caseGCCBEZRG(gccbezrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GFLTRG:
      {
        GFLTRG gfltrg = (GFLTRG)theEObject;
        T result = caseGFLTRG(gfltrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCFLTRG:
      {
        GCFLTRG gcfltrg = (GCFLTRG)theEObject;
        T result = caseGCFLTRG(gcfltrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GLINERG:
      {
        GLINERG glinerg = (GLINERG)theEObject;
        T result = caseGLINERG(glinerg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCLINERG:
      {
        GCLINERG gclinerg = (GCLINERG)theEObject;
        T result = caseGCLINERG(gclinerg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GMRKRG:
      {
        GMRKRG gmrkrg = (GMRKRG)theEObject;
        T result = caseGMRKRG(gmrkrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCMRKRG:
      {
        GCMRKRG gcmrkrg = (GCMRKRG)theEObject;
        T result = caseGCMRKRG(gcmrkrg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GRLINERG:
      {
        GRLINERG grlinerg = (GRLINERG)theEObject;
        T result = caseGRLINERG(grlinerg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCRLINERG:
      {
        GCRLINERG gcrlinerg = (GCRLINERG)theEObject;
        T result = caseGCRLINERG(gcrlinerg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MSURG:
      {
        MSURG msurg = (MSURG)theEObject;
        T result = caseMSURG(msurg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TRIPLET:
      {
        triplet triplet = (triplet)theEObject;
        T result = casetriplet(triplet);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.AMB:
      {
        AMB amb = (AMB)theEObject;
        T result = caseAMB(amb);
        if (result == null) result = casetriplet(amb);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.AMI:
      {
        AMI ami = (AMI)theEObject;
        T result = caseAMI(ami);
        if (result == null) result = casetriplet(ami);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BLN:
      {
        BLN bln = (BLN)theEObject;
        T result = caseBLN(bln);
        if (result == null) result = casetriplet(bln);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BSU:
      {
        BSU bsu = (BSU)theEObject;
        T result = caseBSU(bsu);
        if (result == null) result = casetriplet(bsu);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.DBR:
      {
        DBR dbr = (DBR)theEObject;
        T result = caseDBR(dbr);
        if (result == null) result = casetriplet(dbr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.DIR:
      {
        DIR dir = (DIR)theEObject;
        T result = caseDIR(dir);
        if (result == null) result = casetriplet(dir);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ESU:
      {
        ESU esu = (ESU)theEObject;
        T result = caseESU(esu);
        if (result == null) result = casetriplet(esu);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.NOPCS:
      {
        NOPCS nopcs = (NOPCS)theEObject;
        T result = caseNOPCS(nopcs);
        if (result == null) result = casetriplet(nopcs);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OVS:
      {
        OVS ovs = (OVS)theEObject;
        T result = caseOVS(ovs);
        if (result == null) result = casetriplet(ovs);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.RMB:
      {
        RMB rmb = (RMB)theEObject;
        T result = caseRMB(rmb);
        if (result == null) result = casetriplet(rmb);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.RMI:
      {
        RMI rmi = (RMI)theEObject;
        T result = caseRMI(rmi);
        if (result == null) result = casetriplet(rmi);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.RPS:
      {
        RPS rps = (RPS)theEObject;
        T result = caseRPS(rps);
        if (result == null) result = casetriplet(rps);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.SBI:
      {
        SBI sbi = (SBI)theEObject;
        T result = caseSBI(sbi);
        if (result == null) result = casetriplet(sbi);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.SCFL:
      {
        SCFL scfl = (SCFL)theEObject;
        T result = caseSCFL(scfl);
        if (result == null) result = casetriplet(scfl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.SEC:
      {
        SEC sec = (SEC)theEObject;
        T result = caseSEC(sec);
        if (result == null) result = casetriplet(sec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.SIA:
      {
        SIA sia = (SIA)theEObject;
        T result = caseSIA(sia);
        if (result == null) result = casetriplet(sia);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.SIM:
      {
        SIM sim = (SIM)theEObject;
        T result = caseSIM(sim);
        if (result == null) result = casetriplet(sim);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.STC:
      {
        STC stc = (STC)theEObject;
        T result = caseSTC(stc);
        if (result == null) result = casetriplet(stc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.STO:
      {
        STO sto = (STO)theEObject;
        T result = caseSTO(sto);
        if (result == null) result = casetriplet(sto);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.SVI:
      {
        SVI svi = (SVI)theEObject;
        T result = caseSVI(svi);
        if (result == null) result = casetriplet(svi);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TBM:
      {
        TBM tbm = (TBM)theEObject;
        T result = caseTBM(tbm);
        if (result == null) result = casetriplet(tbm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TRN:
      {
        TRN trn = (TRN)theEObject;
        T result = caseTRN(trn);
        if (result == null) result = casetriplet(trn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.USC:
      {
        USC usc = (USC)theEObject;
        T result = caseUSC(usc);
        if (result == null) result = casetriplet(usc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ATTRIBUTE_QUALIFIER:
      {
        AttributeQualifier attributeQualifier = (AttributeQualifier)theEObject;
        T result = caseAttributeQualifier(attributeQualifier);
        if (result == null) result = casetriplet(attributeQualifier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ATTRIBUTE_VALUE:
      {
        AttributeValue attributeValue = (AttributeValue)theEObject;
        T result = caseAttributeValue(attributeValue);
        if (result == null) result = casetriplet(attributeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CGCSGID:
      {
        CGCSGID cgcsgid = (CGCSGID)theEObject;
        T result = caseCGCSGID(cgcsgid);
        if (result == null) result = casetriplet(cgcsgid);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CRC_RESOURCE_MANAGEMENT:
      {
        CRCResourceManagement crcResourceManagement = (CRCResourceManagement)theEObject;
        T result = caseCRCResourceManagement(crcResourceManagement);
        if (result == null) result = casetriplet(crcResourceManagement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CHARACTER_ROTATION:
      {
        CharacterRotation characterRotation = (CharacterRotation)theEObject;
        T result = caseCharacterRotation(characterRotation);
        if (result == null) result = casetriplet(characterRotation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.COLOR_SPECIFICATION:
      {
        ColorSpecification colorSpecification = (ColorSpecification)theEObject;
        T result = caseColorSpecification(colorSpecification);
        if (result == null) result = casetriplet(colorSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.COMMENT:
      {
        Comment comment = (Comment)theEObject;
        T result = caseComment(comment);
        if (result == null) result = casetriplet(comment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.DATA_OBJECT_FONT_DESCRIPTOR:
      {
        DataObjectFontDescriptor dataObjectFontDescriptor = (DataObjectFontDescriptor)theEObject;
        T result = caseDataObjectFontDescriptor(dataObjectFontDescriptor);
        if (result == null) result = casetriplet(dataObjectFontDescriptor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.DESCRIPTOR_POSITION:
      {
        DescriptorPosition descriptorPosition = (DescriptorPosition)theEObject;
        T result = caseDescriptorPosition(descriptorPosition);
        if (result == null) result = casetriplet(descriptorPosition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.ENCODING_SCHEME_ID:
      {
        EncodingSchemeID encodingSchemeID = (EncodingSchemeID)theEObject;
        T result = caseEncodingSchemeID(encodingSchemeID);
        if (result == null) result = casetriplet(encodingSchemeID);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FONT_RESOLUTION:
      {
        FontResolution fontResolution = (FontResolution)theEObject;
        T result = caseFontResolution(fontResolution);
        if (result == null) result = casetriplet(fontResolution);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FULLY_QUALIFIED_NAME:
      {
        FullyQualifiedName fullyQualifiedName = (FullyQualifiedName)theEObject;
        T result = caseFullyQualifiedName(fullyQualifiedName);
        if (result == null) result = casetriplet(fullyQualifiedName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.LOCAL_DATE_AND_TIME_STAMP:
      {
        LocalDateAndTimeStamp localDateAndTimeStamp = (LocalDateAndTimeStamp)theEObject;
        T result = caseLocalDateAndTimeStamp(localDateAndTimeStamp);
        if (result == null) result = casetriplet(localDateAndTimeStamp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.UNIVERSAL_DATE_AND_TIME_STAMP:
      {
        UniversalDateAndTimeStamp universalDateAndTimeStamp = (UniversalDateAndTimeStamp)theEObject;
        T result = caseUniversalDateAndTimeStamp(universalDateAndTimeStamp);
        if (result == null) result = casetriplet(universalDateAndTimeStamp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MAPPING_OPTION:
      {
        MappingOption mappingOption = (MappingOption)theEObject;
        T result = caseMappingOption(mappingOption);
        if (result == null) result = casetriplet(mappingOption);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MEDIA_EJECT_CONTROL:
      {
        MediaEjectControl mediaEjectControl = (MediaEjectControl)theEObject;
        T result = caseMediaEjectControl(mediaEjectControl);
        if (result == null) result = casetriplet(mediaEjectControl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MEDIUM_MAP_PAGE_NUMBER:
      {
        MediumMapPageNumber mediumMapPageNumber = (MediumMapPageNumber)theEObject;
        T result = caseMediumMapPageNumber(mediumMapPageNumber);
        if (result == null) result = casetriplet(mediumMapPageNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MEDIUM_ORIENTATION:
      {
        MediumOrientation mediumOrientation = (MediumOrientation)theEObject;
        T result = caseMediumOrientation(mediumOrientation);
        if (result == null) result = casetriplet(mediumOrientation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MEASUREMENT_UNITS:
      {
        MeasurementUnits measurementUnits = (MeasurementUnits)theEObject;
        T result = caseMeasurementUnits(measurementUnits);
        if (result == null) result = casetriplet(measurementUnits);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MODCA_INTERCHANGE_SET:
      {
        MODCAInterchangeSet modcaInterchangeSet = (MODCAInterchangeSet)theEObject;
        T result = caseMODCAInterchangeSet(modcaInterchangeSet);
        if (result == null) result = casetriplet(modcaInterchangeSet);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBJECT_AREA_SIZE:
      {
        ObjectAreaSize objectAreaSize = (ObjectAreaSize)theEObject;
        T result = caseObjectAreaSize(objectAreaSize);
        if (result == null) result = casetriplet(objectAreaSize);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBJECT_CLASSIFICATION:
      {
        ObjectClassification objectClassification = (ObjectClassification)theEObject;
        T result = caseObjectClassification(objectClassification);
        if (result == null) result = casetriplet(objectClassification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBJECT_FUNCTION_SET_SPECIFICATION:
      {
        ObjectFunctionSetSpecification objectFunctionSetSpecification = (ObjectFunctionSetSpecification)theEObject;
        T result = caseObjectFunctionSetSpecification(objectFunctionSetSpecification);
        if (result == null) result = casetriplet(objectFunctionSetSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBJECT_OFFSET:
      {
        ObjectOffset objectOffset = (ObjectOffset)theEObject;
        T result = caseObjectOffset(objectOffset);
        if (result == null) result = casetriplet(objectOffset);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.RESOURCE_OBJECT_TYPE:
      {
        ResourceObjectType resourceObjectType = (ResourceObjectType)theEObject;
        T result = caseResourceObjectType(resourceObjectType);
        if (result == null) result = casetriplet(resourceObjectType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PAGE_POSITION_INFORMATION:
      {
        PagePositionInformation pagePositionInformation = (PagePositionInformation)theEObject;
        T result = casePagePositionInformation(pagePositionInformation);
        if (result == null) result = casetriplet(pagePositionInformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PRESENTATION_CONTROL:
      {
        PresentationControl presentationControl = (PresentationControl)theEObject;
        T result = casePresentationControl(presentationControl);
        if (result == null) result = casetriplet(presentationControl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PRESENTATION_SPACE_RESET_MIXING:
      {
        PresentationSpaceResetMixing presentationSpaceResetMixing = (PresentationSpaceResetMixing)theEObject;
        T result = casePresentationSpaceResetMixing(presentationSpaceResetMixing);
        if (result == null) result = casetriplet(presentationSpaceResetMixing);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PRESENTATION_SPACE_MIXING_RULES:
      {
        PresentationSpaceMixingRules presentationSpaceMixingRules = (PresentationSpaceMixingRules)theEObject;
        T result = casePresentationSpaceMixingRules(presentationSpaceMixingRules);
        if (result == null) result = casetriplet(presentationSpaceMixingRules);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.RESOURCE_LOCAL_IDENTIFIER:
      {
        ResourceLocalIdentifier resourceLocalIdentifier = (ResourceLocalIdentifier)theEObject;
        T result = caseResourceLocalIdentifier(resourceLocalIdentifier);
        if (result == null) result = casetriplet(resourceLocalIdentifier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.RESOURCE_SECTION_NUMBER:
      {
        ResourceSectionNumber resourceSectionNumber = (ResourceSectionNumber)theEObject;
        T result = caseResourceSectionNumber(resourceSectionNumber);
        if (result == null) result = casetriplet(resourceSectionNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TEXT_ORIENTATION:
      {
        TextOrientation textOrientation = (TextOrientation)theEObject;
        T result = caseTextOrientation(textOrientation);
        if (result == null) result = casetriplet(textOrientation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FONT_HORIZONTAL_SCALE_FACTOR:
      {
        FontHorizontalScaleFactor fontHorizontalScaleFactor = (FontHorizontalScaleFactor)theEObject;
        T result = caseFontHorizontalScaleFactor(fontHorizontalScaleFactor);
        if (result == null) result = casetriplet(fontHorizontalScaleFactor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FONT_DESCRIPTOR_SPECIFICATION:
      {
        FontDescriptorSpecification fontDescriptorSpecification = (FontDescriptorSpecification)theEObject;
        T result = caseFontDescriptorSpecification(fontDescriptorSpecification);
        if (result == null) result = casetriplet(fontDescriptorSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BEGIN_SEGMENT:
      {
        BeginSegment beginSegment = (BeginSegment)theEObject;
        T result = caseBeginSegment(beginSegment);
        if (result == null) result = casetriplet(beginSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.END_SEGMENT:
      {
        EndSegment endSegment = (EndSegment)theEObject;
        T result = caseEndSegment(endSegment);
        if (result == null) result = casetriplet(endSegment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BEGIN_TILE:
      {
        BeginTile beginTile = (BeginTile)theEObject;
        T result = caseBeginTile(beginTile);
        if (result == null) result = casetriplet(beginTile);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.END_TILE:
      {
        EndTile endTile = (EndTile)theEObject;
        T result = caseEndTile(endTile);
        if (result == null) result = casetriplet(endTile);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BEGIN_TRANSPARENCY_MASK:
      {
        BeginTransparencyMask beginTransparencyMask = (BeginTransparencyMask)theEObject;
        T result = caseBeginTransparencyMask(beginTransparencyMask);
        if (result == null) result = casetriplet(beginTransparencyMask);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.END_TRANSPARENCY_MASK:
      {
        EndTransparencyMask endTransparencyMask = (EndTransparencyMask)theEObject;
        T result = caseEndTransparencyMask(endTransparencyMask);
        if (result == null) result = casetriplet(endTransparencyMask);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BEGIN_IMAGE:
      {
        BeginImage beginImage = (BeginImage)theEObject;
        T result = caseBeginImage(beginImage);
        if (result == null) result = casetriplet(beginImage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.END_IMAGE:
      {
        EndImage endImage = (EndImage)theEObject;
        T result = caseEndImage(endImage);
        if (result == null) result = casetriplet(endImage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IMAGE_SIZE:
      {
        ImageSize imageSize = (ImageSize)theEObject;
        T result = caseImageSize(imageSize);
        if (result == null) result = casetriplet(imageSize);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IMAGE_ENCODING:
      {
        ImageEncoding imageEncoding = (ImageEncoding)theEObject;
        T result = caseImageEncoding(imageEncoding);
        if (result == null) result = casetriplet(imageEncoding);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IDE_SIZE:
      {
        IDESize ideSize = (IDESize)theEObject;
        T result = caseIDESize(ideSize);
        if (result == null) result = casetriplet(ideSize);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IMAGE_LUTID:
      {
        ImageLUTID imageLUTID = (ImageLUTID)theEObject;
        T result = caseImageLUTID(imageLUTID);
        if (result == null) result = casetriplet(imageLUTID);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BAND_IMAGE:
      {
        BandImage bandImage = (BandImage)theEObject;
        T result = caseBandImage(bandImage);
        if (result == null) result = casetriplet(bandImage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IDE_STRUCTURE:
      {
        IDEStructure ideStructure = (IDEStructure)theEObject;
        T result = caseIDEStructure(ideStructure);
        if (result == null) result = casetriplet(ideStructure);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EXTERNAL_ALGORITHM:
      {
        ExternalAlgorithm externalAlgorithm = (ExternalAlgorithm)theEObject;
        T result = caseExternalAlgorithm(externalAlgorithm);
        if (result == null) result = casetriplet(externalAlgorithm);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TILE_POSITION:
      {
        TilePosition tilePosition = (TilePosition)theEObject;
        T result = caseTilePosition(tilePosition);
        if (result == null) result = casetriplet(tilePosition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TILE_SIZE:
      {
        TileSize tileSize = (TileSize)theEObject;
        T result = caseTileSize(tileSize);
        if (result == null) result = casetriplet(tileSize);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TILE_SET_COLOR:
      {
        TileSetColor tileSetColor = (TileSetColor)theEObject;
        T result = caseTileSetColor(tileSetColor);
        if (result == null) result = casetriplet(tileSetColor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.SET_BI_LEVEL_IMAGE_COLOR:
      {
        SetBiLevelImageColor setBiLevelImageColor = (SetBiLevelImageColor)theEObject;
        T result = caseSetBiLevelImageColor(setBiLevelImageColor);
        if (result == null) result = casetriplet(setBiLevelImageColor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IOCA_FUNCTION_SET_IDENTIFICATION:
      {
        IOCAFunctionSetIdentification iocaFunctionSetIdentification = (IOCAFunctionSetIdentification)theEObject;
        T result = caseIOCAFunctionSetIdentification(iocaFunctionSetIdentification);
        if (result == null) result = casetriplet(iocaFunctionSetIdentification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IMAGE_DATA:
      {
        ImageData imageData = (ImageData)theEObject;
        T result = caseImageData(imageData);
        if (result == null) result = casetriplet(imageData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BAND_IMAGE_DATA:
      {
        BandImageData bandImageData = (BandImageData)theEObject;
        T result = caseBandImageData(bandImageData);
        if (result == null) result = casetriplet(bandImageData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.INCLUDE_TILE:
      {
        IncludeTile includeTile = (IncludeTile)theEObject;
        T result = caseIncludeTile(includeTile);
        if (result == null) result = casetriplet(includeTile);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IMAGE_SUBSAMPLING:
      {
        ImageSubsampling imageSubsampling = (ImageSubsampling)theEObject;
        T result = caseImageSubsampling(imageSubsampling);
        if (result == null) result = casetriplet(imageSubsampling);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.SAMPLING_RATIOS:
      {
        SamplingRatios samplingRatios = (SamplingRatios)theEObject;
        T result = caseSamplingRatios(samplingRatios);
        if (result == null) result = casetriplet(samplingRatios);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TILE_TOC:
      {
        TileTOC tileTOC = (TileTOC)theEObject;
        T result = caseTileTOC(tileTOC);
        if (result == null) result = casetriplet(tileTOC);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FNNRG2:
      {
        FNNRG2 fnnrg2 = (FNNRG2)theEObject;
        T result = caseFNNRG2(fnnrg2);
        if (result == null) result = casetriplet(fnnrg2);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.BEGIN_SEGMENT_COMMAND:
      {
        BeginSegmentCommand beginSegmentCommand = (BeginSegmentCommand)theEObject;
        T result = caseBeginSegmentCommand(beginSegmentCommand);
        if (result == null) result = casetriplet(beginSegmentCommand);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.END_SEGMENT_COMMAND:
      {
        EndSegmentCommand endSegmentCommand = (EndSegmentCommand)theEObject;
        T result = caseEndSegmentCommand(endSegmentCommand);
        if (result == null) result = casetriplet(endSegmentCommand);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GBAR:
      {
        GBAR gbar = (GBAR)theEObject;
        T result = caseGBAR(gbar);
        if (result == null) result = casetriplet(gbar);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GBIMG:
      {
        GBIMG gbimg = (GBIMG)theEObject;
        T result = caseGBIMG(gbimg);
        if (result == null) result = casetriplet(gbimg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCBIMG:
      {
        GCBIMG gcbimg = (GCBIMG)theEObject;
        T result = caseGCBIMG(gcbimg);
        if (result == null) result = casetriplet(gcbimg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GBOX:
      {
        GBOX gbox = (GBOX)theEObject;
        T result = caseGBOX(gbox);
        if (result == null) result = casetriplet(gbox);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCBOX:
      {
        GCBOX gcbox = (GCBOX)theEObject;
        T result = caseGCBOX(gcbox);
        if (result == null) result = casetriplet(gcbox);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCHST:
      {
        GCHST gchst = (GCHST)theEObject;
        T result = caseGCHST(gchst);
        if (result == null) result = casetriplet(gchst);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCCHST:
      {
        GCCHST gcchst = (GCCHST)theEObject;
        T result = caseGCCHST(gcchst);
        if (result == null) result = casetriplet(gcchst);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCOMT:
      {
        GCOMT gcomt = (GCOMT)theEObject;
        T result = caseGCOMT(gcomt);
        if (result == null) result = casetriplet(gcomt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GEAR:
      {
        GEAR gear = (GEAR)theEObject;
        T result = caseGEAR(gear);
        if (result == null) result = casetriplet(gear);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GEIMG:
      {
        GEIMG geimg = (GEIMG)theEObject;
        T result = caseGEIMG(geimg);
        if (result == null) result = casetriplet(geimg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GEPROL:
      {
        GEPROL geprol = (GEPROL)theEObject;
        T result = caseGEPROL(geprol);
        if (result == null) result = casetriplet(geprol);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GFLT:
      {
        GFLT gflt = (GFLT)theEObject;
        T result = caseGFLT(gflt);
        if (result == null) result = casetriplet(gflt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCFLT:
      {
        GCFLT gcflt = (GCFLT)theEObject;
        T result = caseGCFLT(gcflt);
        if (result == null) result = casetriplet(gcflt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GFARC:
      {
        GFARC gfarc = (GFARC)theEObject;
        T result = caseGFARC(gfarc);
        if (result == null) result = casetriplet(gfarc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCFARC:
      {
        GCFARC gcfarc = (GCFARC)theEObject;
        T result = caseGCFARC(gcfarc);
        if (result == null) result = casetriplet(gcfarc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GIMD:
      {
        GIMD gimd = (GIMD)theEObject;
        T result = caseGIMD(gimd);
        if (result == null) result = casetriplet(gimd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GLINE:
      {
        GLINE gline = (GLINE)theEObject;
        T result = caseGLINE(gline);
        if (result == null) result = casetriplet(gline);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCLINE:
      {
        GCLINE gcline = (GCLINE)theEObject;
        T result = caseGCLINE(gcline);
        if (result == null) result = casetriplet(gcline);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GMRK:
      {
        GMRK gmrk = (GMRK)theEObject;
        T result = caseGMRK(gmrk);
        if (result == null) result = casetriplet(gmrk);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCMRK:
      {
        GCMRK gcmrk = (GCMRK)theEObject;
        T result = caseGCMRK(gcmrk);
        if (result == null) result = casetriplet(gcmrk);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GNOP1:
      {
        GNOP1 gnop1 = (GNOP1)theEObject;
        T result = caseGNOP1(gnop1);
        if (result == null) result = casetriplet(gnop1);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GPARC:
      {
        GPARC gparc = (GPARC)theEObject;
        T result = caseGPARC(gparc);
        if (result == null) result = casetriplet(gparc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCPARC:
      {
        GCPARC gcparc = (GCPARC)theEObject;
        T result = caseGCPARC(gcparc);
        if (result == null) result = casetriplet(gcparc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GRLINE:
      {
        GRLINE grline = (GRLINE)theEObject;
        T result = caseGRLINE(grline);
        if (result == null) result = casetriplet(grline);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCRLINE:
      {
        GCRLINE gcrline = (GCRLINE)theEObject;
        T result = caseGCRLINE(gcrline);
        if (result == null) result = casetriplet(gcrline);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSGCH:
      {
        GSGCH gsgch = (GSGCH)theEObject;
        T result = caseGSGCH(gsgch);
        if (result == null) result = casetriplet(gsgch);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSAP:
      {
        GSAP gsap = (GSAP)theEObject;
        T result = caseGSAP(gsap);
        if (result == null) result = casetriplet(gsap);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSBMX:
      {
        GSBMX gsbmx = (GSBMX)theEObject;
        T result = caseGSBMX(gsbmx);
        if (result == null) result = casetriplet(gsbmx);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSCA:
      {
        GSCA gsca = (GSCA)theEObject;
        T result = caseGSCA(gsca);
        if (result == null) result = casetriplet(gsca);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSCC:
      {
        GSCC gscc = (GSCC)theEObject;
        T result = caseGSCC(gscc);
        if (result == null) result = casetriplet(gscc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSCD:
      {
        GSCD gscd = (GSCD)theEObject;
        T result = caseGSCD(gscd);
        if (result == null) result = casetriplet(gscd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSCR:
      {
        GSCR gscr = (GSCR)theEObject;
        T result = caseGSCR(gscr);
        if (result == null) result = casetriplet(gscr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSCS:
      {
        GSCS gscs = (GSCS)theEObject;
        T result = caseGSCS(gscs);
        if (result == null) result = casetriplet(gscs);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSCH:
      {
        GSCH gsch = (GSCH)theEObject;
        T result = caseGSCH(gsch);
        if (result == null) result = casetriplet(gsch);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSCOL:
      {
        GSCOL gscol = (GSCOL)theEObject;
        T result = caseGSCOL(gscol);
        if (result == null) result = casetriplet(gscol);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSCP:
      {
        GSCP gscp = (GSCP)theEObject;
        T result = caseGSCP(gscp);
        if (result == null) result = casetriplet(gscp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSECOL:
      {
        GSECOL gsecol = (GSECOL)theEObject;
        T result = caseGSECOL(gsecol);
        if (result == null) result = casetriplet(gsecol);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSFLW:
      {
        GSFLW gsflw = (GSFLW)theEObject;
        T result = caseGSFLW(gsflw);
        if (result == null) result = casetriplet(gsflw);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSLT:
      {
        GSLT gslt = (GSLT)theEObject;
        T result = caseGSLT(gslt);
        if (result == null) result = casetriplet(gslt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSLW:
      {
        GSLW gslw = (GSLW)theEObject;
        T result = caseGSLW(gslw);
        if (result == null) result = casetriplet(gslw);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSMC:
      {
        GSMC gsmc = (GSMC)theEObject;
        T result = caseGSMC(gsmc);
        if (result == null) result = casetriplet(gsmc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSMP:
      {
        GSMP gsmp = (GSMP)theEObject;
        T result = caseGSMP(gsmp);
        if (result == null) result = casetriplet(gsmp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSMS:
      {
        GSMS gsms = (GSMS)theEObject;
        T result = caseGSMS(gsms);
        if (result == null) result = casetriplet(gsms);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSMT:
      {
        GSMT gsmt = (GSMT)theEObject;
        T result = caseGSMT(gsmt);
        if (result == null) result = casetriplet(gsmt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSMX:
      {
        GSMX gsmx = (GSMX)theEObject;
        T result = caseGSMX(gsmx);
        if (result == null) result = casetriplet(gsmx);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSPS:
      {
        GSPS gsps = (GSPS)theEObject;
        T result = caseGSPS(gsps);
        if (result == null) result = casetriplet(gsps);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSPT:
      {
        GSPT gspt = (GSPT)theEObject;
        T result = caseGSPT(gspt);
        if (result == null) result = casetriplet(gspt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSPCOL:
      {
        GSPCOL gspcol = (GSPCOL)theEObject;
        T result = caseGSPCOL(gspcol);
        if (result == null) result = casetriplet(gspcol);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSLE:
      {
        GSLE gsle = (GSLE)theEObject;
        T result = caseGSLE(gsle);
        if (result == null) result = casetriplet(gsle);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GSLJ:
      {
        GSLJ gslj = (GSLJ)theEObject;
        T result = caseGSLJ(gslj);
        if (result == null) result = casetriplet(gslj);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCBEZ:
      {
        GCBEZ gcbez = (GCBEZ)theEObject;
        T result = caseGCBEZ(gcbez);
        if (result == null) result = casetriplet(gcbez);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.GCCBEZ:
      {
        GCCBEZ gccbez = (GCCBEZ)theEObject;
        T result = caseGCCBEZ(gccbez);
        if (result == null) result = casetriplet(gccbez);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.WINDOW_SPECIFICATION:
      {
        WindowSpecification windowSpecification = (WindowSpecification)theEObject;
        T result = caseWindowSpecification(windowSpecification);
        if (result == null) result = casetriplet(windowSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.DRAWING_ORDER_SUBSET:
      {
        DrawingOrderSubset drawingOrderSubset = (DrawingOrderSubset)theEObject;
        T result = caseDrawingOrderSubset(drawingOrderSubset);
        if (result == null) result = casetriplet(drawingOrderSubset);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TONER_SAVER:
      {
        TonerSaver tonerSaver = (TonerSaver)theEObject;
        T result = caseTonerSaver(tonerSaver);
        if (result == null) result = casetriplet(tonerSaver);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.COLOR_FIDELITY:
      {
        ColorFidelity colorFidelity = (ColorFidelity)theEObject;
        T result = caseColorFidelity(colorFidelity);
        if (result == null) result = casetriplet(colorFidelity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FONT_FIDELITY:
      {
        FontFidelity fontFidelity = (FontFidelity)theEObject;
        T result = caseFontFidelity(fontFidelity);
        if (result == null) result = casetriplet(fontFidelity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.TEXT_FIDELITY:
      {
        TextFidelity textFidelity = (TextFidelity)theEObject;
        T result = caseTextFidelity(textFidelity);
        if (result == null) result = casetriplet(textFidelity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.MEDIA_FIDELITY:
      {
        MediaFidelity mediaFidelity = (MediaFidelity)theEObject;
        T result = caseMediaFidelity(mediaFidelity);
        if (result == null) result = casetriplet(mediaFidelity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FINISHING_FIDELITY:
      {
        FinishingFidelity finishingFidelity = (FinishingFidelity)theEObject;
        T result = caseFinishingFidelity(finishingFidelity);
        if (result == null) result = casetriplet(finishingFidelity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.CMR_FIDELITY:
      {
        CMRFidelity cmrFidelity = (CMRFidelity)theEObject;
        T result = caseCMRFidelity(cmrFidelity);
        if (result == null) result = casetriplet(cmrFidelity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBJECT_BYTE_EXTENT:
      {
        ObjectByteExtent objectByteExtent = (ObjectByteExtent)theEObject;
        T result = caseObjectByteExtent(objectByteExtent);
        if (result == null) result = casetriplet(objectByteExtent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBJECT_BYTE_OFFSET:
      {
        ObjectByteOffset objectByteOffset = (ObjectByteOffset)theEObject;
        T result = caseObjectByteOffset(objectByteOffset);
        if (result == null) result = casetriplet(objectByteOffset);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBJECT_STRUCTURED_FIELD_EXTENT:
      {
        ObjectStructuredFieldExtent objectStructuredFieldExtent = (ObjectStructuredFieldExtent)theEObject;
        T result = caseObjectStructuredFieldExtent(objectStructuredFieldExtent);
        if (result == null) result = casetriplet(objectStructuredFieldExtent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBJECT_STRUCTURED_FIELD_OFFSET:
      {
        ObjectStructuredFieldOffset objectStructuredFieldOffset = (ObjectStructuredFieldOffset)theEObject;
        T result = caseObjectStructuredFieldOffset(objectStructuredFieldOffset);
        if (result == null) result = casetriplet(objectStructuredFieldOffset);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBJECT_COUNT:
      {
        ObjectCount objectCount = (ObjectCount)theEObject;
        T result = caseObjectCount(objectCount);
        if (result == null) result = casetriplet(objectCount);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBJECT_ORIGIN_IDENTIFIER:
      {
        ObjectOriginIdentifier objectOriginIdentifier = (ObjectOriginIdentifier)theEObject;
        T result = caseObjectOriginIdentifier(objectOriginIdentifier);
        if (result == null) result = casetriplet(objectOriginIdentifier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.LINE_DATA_OBJECT_POSITION_MIGRATION:
      {
        LineDataObjectPositionMigration lineDataObjectPositionMigration = (LineDataObjectPositionMigration)theEObject;
        T result = caseLineDataObjectPositionMigration(lineDataObjectPositionMigration);
        if (result == null) result = casetriplet(lineDataObjectPositionMigration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.COLOR_MANAGEMENT_RESOURCE_DESCRIPTOR:
      {
        ColorManagementResourceDescriptor colorManagementResourceDescriptor = (ColorManagementResourceDescriptor)theEObject;
        T result = caseColorManagementResourceDescriptor(colorManagementResourceDescriptor);
        if (result == null) result = casetriplet(colorManagementResourceDescriptor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.IMAGE_RESOLUTION:
      {
        ImageResolution imageResolution = (ImageResolution)theEObject;
        T result = caseImageResolution(imageResolution);
        if (result == null) result = casetriplet(imageResolution);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.OBJECT_CONTAINER_PRESENTATION_SPACE_SIZE:
      {
        ObjectContainerPresentationSpaceSize objectContainerPresentationSpaceSize = (ObjectContainerPresentationSpaceSize)theEObject;
        T result = caseObjectContainerPresentationSpaceSize(objectContainerPresentationSpaceSize);
        if (result == null) result = casetriplet(objectContainerPresentationSpaceSize);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EXTENDED_RESOURCE_LOCAL_IDENTIFIER:
      {
        ExtendedResourceLocalIdentifier extendedResourceLocalIdentifier = (ExtendedResourceLocalIdentifier)theEObject;
        T result = caseExtendedResourceLocalIdentifier(extendedResourceLocalIdentifier);
        if (result == null) result = casetriplet(extendedResourceLocalIdentifier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.METRIC_ADJUSTMENT:
      {
        MetricAdjustment metricAdjustment = (MetricAdjustment)theEObject;
        T result = caseMetricAdjustment(metricAdjustment);
        if (result == null) result = casetriplet(metricAdjustment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.EXTENSION_FONT:
      {
        ExtensionFont extensionFont = (ExtensionFont)theEObject;
        T result = caseExtensionFont(extensionFont);
        if (result == null) result = casetriplet(extensionFont);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.RENDERING_INTENT:
      {
        RenderingIntent renderingIntent = (RenderingIntent)theEObject;
        T result = caseRenderingIntent(renderingIntent);
        if (result == null) result = casetriplet(renderingIntent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FONT_CODED_GRAPHIC_CHARACTER_SET_GLOBAL_IDENTIFIER:
      {
        FontCodedGraphicCharacterSetGlobalIdentifier fontCodedGraphicCharacterSetGlobalIdentifier = (FontCodedGraphicCharacterSetGlobalIdentifier)theEObject;
        T result = caseFontCodedGraphicCharacterSetGlobalIdentifier(fontCodedGraphicCharacterSetGlobalIdentifier);
        if (result == null) result = casetriplet(fontCodedGraphicCharacterSetGlobalIdentifier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.LOCALE_SELECTOR:
      {
        LocaleSelector localeSelector = (LocaleSelector)theEObject;
        T result = caseLocaleSelector(localeSelector);
        if (result == null) result = casetriplet(localeSelector);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.FINISHING_OPERATION:
      {
        FinishingOperation finishingOperation = (FinishingOperation)theEObject;
        T result = caseFinishingOperation(finishingOperation);
        if (result == null) result = casetriplet(finishingOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.UP_3I_FINISHING_OPERATION:
      {
        UP3iFinishingOperation up3iFinishingOperation = (UP3iFinishingOperation)theEObject;
        T result = caseUP3iFinishingOperation(up3iFinishingOperation);
        if (result == null) result = casetriplet(up3iFinishingOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.DEVICE_APPEARANCE:
      {
        DeviceAppearance deviceAppearance = (DeviceAppearance)theEObject;
        T result = caseDeviceAppearance(deviceAppearance);
        if (result == null) result = casetriplet(deviceAppearance);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.RESOURCE_OBJECT_INCLUDE:
      {
        ResourceObjectInclude resourceObjectInclude = (ResourceObjectInclude)theEObject;
        T result = caseResourceObjectInclude(resourceObjectInclude);
        if (result == null) result = casetriplet(resourceObjectInclude);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.PAGE_OVERLAY_CONDITIONAL_PROCESSING:
      {
        PageOverlayConditionalProcessing pageOverlayConditionalProcessing = (PageOverlayConditionalProcessing)theEObject;
        T result = casePageOverlayConditionalProcessing(pageOverlayConditionalProcessing);
        if (result == null) result = casetriplet(pageOverlayConditionalProcessing);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AfpTextPackage.RESOURCE_USAGE_ATTRIBUTE:
      {
        ResourceUsageAttribute resourceUsageAttribute = (ResourceUsageAttribute)theEObject;
        T result = caseResourceUsageAttribute(resourceUsageAttribute);
        if (result == null) result = casetriplet(resourceUsageAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>structured Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>structured Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casestructuredField(structuredField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Line Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Line Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLineData(LineData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BAG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BAG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBAG(BAG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BBC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BBC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBBC(BBC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BCA</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BCA</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBCA(BCA object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BCF</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BCF</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBCF(BCF object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BCP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BCP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBCP(BCP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BDA</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BDA</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBDA(BDA object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BDD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BDD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBDD(BDD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BDG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BDG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBDG(BDG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BDI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BDI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBDI(BDI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BDM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BDM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBDM(BDM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BDT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BDT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBDT(BDT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BDX</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BDX</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBDX(BDX object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BFG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BFG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBFG(BFG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BFM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BFM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBFM(BFM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BFN</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BFN</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBFN(BFN object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BGR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BGR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBGR(BGR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BII</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BII</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBII(BII object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BIM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BIM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBIM(BIM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BMM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BMM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBMM(BMM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BMO</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BMO</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBMO(BMO object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BNG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BNG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBNG(BNG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BOC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BOC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBOC(BOC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BOG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BOG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBOG(BOG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BPF</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BPF</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBPF(BPF object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BPG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BPG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBPG(BPG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BPM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BPM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBPM(BPM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BPS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BPS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBPS(BPS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BPT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BPT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBPT(BPT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBRG(BRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BRS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BRS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBRS(BRS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BSG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BSG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBSG(BSG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CAT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CAT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCAT(CAT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CDD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CDD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCDD(CDD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CFC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CFC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCFC(CFC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CFI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CFI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCFI(CFI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CPC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CPC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCPC(CPC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CPD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CPD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCPD(CPD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CPI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CPI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCPI(CPI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CTC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CTC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCTC(CTC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DXD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DXD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDXD(DXD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAG(EAG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EBC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EBC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEBC(EBC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECA</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECA</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseECA(ECA object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECF</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECF</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseECF(ECF object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseECP(ECP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EDG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EDG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEDG(EDG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EDI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EDI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEDI(EDI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EDM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EDM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEDM(EDM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EDT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EDT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEDT(EDT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EDX</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EDX</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEDX(EDX object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EFG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EFG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEFG(EFG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EFM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EFM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEFM(EFM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EFN</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EFN</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEFN(EFN object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EGR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EGR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEGR(EGR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EII</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EII</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEII(EII object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EIM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EIM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEIM(EIM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EMM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EMM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEMM(EMM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EMO</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EMO</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEMO(EMO object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ENG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ENG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseENG(ENG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOC(EOC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOG(EOG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPF</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPF</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPF(EPF object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPG(EPG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPM(EPM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPS(EPS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPT(EPT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ERG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ERG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseERG(ERG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ERS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ERS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseERS(ERS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ESG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ESG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseESG(ESG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNC(FNC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FND</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FND</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFND(FND object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNG(FNG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNI(FNI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNN</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNN</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNN(FNN object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNM(FNM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNO</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNO</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNO(FNO object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNP(FNP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GAD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GAD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGAD(GAD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GDD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GDD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGDD(GDD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ICP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ICP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseICP(ICP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IDD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IDD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIDD(IDD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IEL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IEL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIEL(IEL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IID</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IID</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIID(IID object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IMM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IMM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIMM(IMM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IOB</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IOB</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIOB(IOB object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IOC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IOC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIOC(IOC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IPD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IPD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIPD(IPD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IPG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IPG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIPG(IPG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IPO</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IPO</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIPO(IPO object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IPS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IPS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIPS(IPS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IRD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IRD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIRD(IRD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>LLE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>LLE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLLE(LLE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>LNC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>LNC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLNC(LNC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>LND</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>LND</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLND(LND object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MBC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MBC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMBC(MBC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MCA</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MCA</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCA(MCA object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MCC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MCC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCC(MCC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MCD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MCD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCD(MCD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MCF</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MCF</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCF(MCF object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MCF1</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MCF1</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCF1(MCF1 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MDD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MDD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMDD(MDD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MDR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MDR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMDR(MDR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MFC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MFC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMFC(MFC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MGO</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MGO</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMGO(MGO object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MIO</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MIO</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMIO(MIO object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MMC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MMC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMMC(MMC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MMD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MMD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMMD(MMD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MMO</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MMO</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMMO(MMO object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MMT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MMT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMMT(MMT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MPG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MPG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMPG(MPG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MPO</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MPO</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMPO(MPO object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MPS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MPS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMPS(MPS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MSU</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MSU</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMSU(MSU object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>NOP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>NOP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNOP(NOP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>OBD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>OBD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOBD(OBD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>OBP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>OBP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOBP(OBP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>OCD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>OCD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOCD(OCD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PEC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PEC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePEC(PEC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PFC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PFC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePFC(PFC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PGD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PGD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePGD(PGD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PGP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PGP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePGP(PGP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PGP1</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PGP1</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePGP1(PGP1 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PMC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PMC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePMC(PMC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PPO</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PPO</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePPO(PPO object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PTD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PTD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePTD(PTD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PTD1</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PTD1</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePTD1(PTD1 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PTX</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PTX</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePTX(PTX object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>TLE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>TLE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTLE(TLE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FGD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FGD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFGD(FGD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CPIRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CPIRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCPIRG(CPIRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CFIRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CFIRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCFIRG(CFIRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNIRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNIRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNIRG(FNIRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNMRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNMRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNMRG(FNMRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>LLERG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>LLERG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLLERG(LLERG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MPSRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MPSRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMPSRG(MPSRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MCFRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MCFRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCFRG(MCFRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MBCRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MBCRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMBCRG(MBCRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MCARG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MCARG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCARG(MCARG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MCDRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MCDRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCDRG(MCDRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MDRRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MDRRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMDRRG(MDRRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MGORG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MGORG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMGORG(MGORG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MIORG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MIORG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMIORG(MIORG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MMDRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MMDRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMMDRG(MMDRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MMTRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MMTRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMMTRG(MMTRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MPGRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MPGRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMPGRG(MPGRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MPORG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MPORG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMPORG(MPORG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PPORG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PPORG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePPORG(PPORG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>PGPRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>PGPRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePGPRG(PGPRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MCCRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MCCRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCCRG(MCCRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MMORG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MMORG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMMORG(MMORG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Band Image RG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Band Image RG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBandImageRG(BandImageRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MCF1RG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MCF1RG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCF1RG(MCF1RG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MMCRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MMCRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMMCRG(MMCRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNORG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNORG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNORG(FNORG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNPRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNPRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNPRG(FNPRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tile TOCRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tile TOCRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTileTOCRG(TileTOCRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sampling Ratios RG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sampling Ratios RG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSamplingRatiosRG(SamplingRatiosRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>External Algorithm RG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>External Algorithm RG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExternalAlgorithmRG(ExternalAlgorithmRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNNRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNNRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNNRG(FNNRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCBEZRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCBEZRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCBEZRG(GCBEZRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCCBEZRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCCBEZRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCCBEZRG(GCCBEZRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GFLTRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GFLTRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGFLTRG(GFLTRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCFLTRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCFLTRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCFLTRG(GCFLTRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GLINERG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GLINERG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGLINERG(GLINERG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCLINERG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCLINERG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCLINERG(GCLINERG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GMRKRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GMRKRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGMRKRG(GMRKRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCMRKRG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCMRKRG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCMRKRG(GCMRKRG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GRLINERG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GRLINERG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGRLINERG(GRLINERG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCRLINERG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCRLINERG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCRLINERG(GCRLINERG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MSURG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MSURG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMSURG(MSURG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>triplet</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>triplet</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casetriplet(triplet object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>AMB</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>AMB</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAMB(AMB object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>AMI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>AMI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAMI(AMI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BLN</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BLN</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBLN(BLN object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BSU</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BSU</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBSU(BSU object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DBR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DBR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDBR(DBR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DIR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DIR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDIR(DIR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ESU</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ESU</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseESU(ESU object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>NOPCS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>NOPCS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNOPCS(NOPCS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>OVS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>OVS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOVS(OVS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>RMB</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>RMB</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRMB(RMB object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>RMI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>RMI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRMI(RMI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>RPS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>RPS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRPS(RPS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>SBI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>SBI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSBI(SBI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>SCFL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>SCFL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSCFL(SCFL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>SEC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>SEC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSEC(SEC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>SIA</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>SIA</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSIA(SIA object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>SIM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>SIM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSIM(SIM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>STC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>STC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSTC(STC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>STO</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>STO</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSTO(STO object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>SVI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>SVI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSVI(SVI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>TBM</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>TBM</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTBM(TBM object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>TRN</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>TRN</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTRN(TRN object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>USC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>USC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUSC(USC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Qualifier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Qualifier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributeQualifier(AttributeQualifier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributeValue(AttributeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CGCSGID</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CGCSGID</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCGCSGID(CGCSGID object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CRC Resource Management</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CRC Resource Management</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCRCResourceManagement(CRCResourceManagement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Character Rotation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Character Rotation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCharacterRotation(CharacterRotation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Color Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Color Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseColorSpecification(ColorSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Comment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Comment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComment(Comment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Object Font Descriptor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Object Font Descriptor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataObjectFontDescriptor(DataObjectFontDescriptor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Descriptor Position</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Descriptor Position</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDescriptorPosition(DescriptorPosition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Encoding Scheme ID</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Encoding Scheme ID</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEncodingSchemeID(EncodingSchemeID object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Font Resolution</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Font Resolution</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFontResolution(FontResolution object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fully Qualified Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fully Qualified Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFullyQualifiedName(FullyQualifiedName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Local Date And Time Stamp</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Local Date And Time Stamp</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocalDateAndTimeStamp(LocalDateAndTimeStamp object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Universal Date And Time Stamp</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Universal Date And Time Stamp</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUniversalDateAndTimeStamp(UniversalDateAndTimeStamp object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mapping Option</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mapping Option</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMappingOption(MappingOption object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Media Eject Control</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Media Eject Control</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMediaEjectControl(MediaEjectControl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Medium Map Page Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Medium Map Page Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMediumMapPageNumber(MediumMapPageNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Medium Orientation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Medium Orientation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMediumOrientation(MediumOrientation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Measurement Units</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Measurement Units</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMeasurementUnits(MeasurementUnits object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MODCA Interchange Set</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MODCA Interchange Set</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMODCAInterchangeSet(MODCAInterchangeSet object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Area Size</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Area Size</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectAreaSize(ObjectAreaSize object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Classification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Classification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectClassification(ObjectClassification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Function Set Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Function Set Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectFunctionSetSpecification(ObjectFunctionSetSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Offset</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Offset</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectOffset(ObjectOffset object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Resource Object Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Resource Object Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResourceObjectType(ResourceObjectType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Page Position Information</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Page Position Information</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePagePositionInformation(PagePositionInformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Presentation Control</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Presentation Control</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePresentationControl(PresentationControl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Presentation Space Reset Mixing</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Presentation Space Reset Mixing</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePresentationSpaceResetMixing(PresentationSpaceResetMixing object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Presentation Space Mixing Rules</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Presentation Space Mixing Rules</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePresentationSpaceMixingRules(PresentationSpaceMixingRules object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Resource Local Identifier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Resource Local Identifier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResourceLocalIdentifier(ResourceLocalIdentifier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Resource Section Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Resource Section Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResourceSectionNumber(ResourceSectionNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Text Orientation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Text Orientation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTextOrientation(TextOrientation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Font Horizontal Scale Factor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Font Horizontal Scale Factor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFontHorizontalScaleFactor(FontHorizontalScaleFactor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Font Descriptor Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Font Descriptor Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFontDescriptorSpecification(FontDescriptorSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Begin Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Begin Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBeginSegment(BeginSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>End Segment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>End Segment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEndSegment(EndSegment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Begin Tile</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Begin Tile</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBeginTile(BeginTile object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>End Tile</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>End Tile</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEndTile(EndTile object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Begin Transparency Mask</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Begin Transparency Mask</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBeginTransparencyMask(BeginTransparencyMask object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>End Transparency Mask</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>End Transparency Mask</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEndTransparencyMask(EndTransparencyMask object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Begin Image</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Begin Image</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBeginImage(BeginImage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>End Image</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>End Image</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEndImage(EndImage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Image Size</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Image Size</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImageSize(ImageSize object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Image Encoding</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Image Encoding</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImageEncoding(ImageEncoding object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IDE Size</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IDE Size</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIDESize(IDESize object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Image LUTID</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Image LUTID</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImageLUTID(ImageLUTID object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Band Image</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Band Image</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBandImage(BandImage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IDE Structure</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IDE Structure</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIDEStructure(IDEStructure object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>External Algorithm</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>External Algorithm</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExternalAlgorithm(ExternalAlgorithm object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tile Position</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tile Position</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTilePosition(TilePosition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tile Size</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tile Size</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTileSize(TileSize object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tile Set Color</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tile Set Color</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTileSetColor(TileSetColor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Set Bi Level Image Color</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Set Bi Level Image Color</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSetBiLevelImageColor(SetBiLevelImageColor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IOCA Function Set Identification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IOCA Function Set Identification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIOCAFunctionSetIdentification(IOCAFunctionSetIdentification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Image Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Image Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImageData(ImageData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Band Image Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Band Image Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBandImageData(BandImageData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Include Tile</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Include Tile</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIncludeTile(IncludeTile object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Image Subsampling</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Image Subsampling</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImageSubsampling(ImageSubsampling object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sampling Ratios</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sampling Ratios</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSamplingRatios(SamplingRatios object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tile TOC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tile TOC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTileTOC(TileTOC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>FNNRG2</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>FNNRG2</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFNNRG2(FNNRG2 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Begin Segment Command</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Begin Segment Command</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBeginSegmentCommand(BeginSegmentCommand object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>End Segment Command</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>End Segment Command</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEndSegmentCommand(EndSegmentCommand object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GBAR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GBAR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGBAR(GBAR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GBIMG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GBIMG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGBIMG(GBIMG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCBIMG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCBIMG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCBIMG(GCBIMG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GBOX</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GBOX</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGBOX(GBOX object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCBOX</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCBOX</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCBOX(GCBOX object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCHST</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCHST</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCHST(GCHST object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCCHST</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCCHST</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCCHST(GCCHST object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCOMT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCOMT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCOMT(GCOMT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GEAR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GEAR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGEAR(GEAR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GEIMG</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GEIMG</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGEIMG(GEIMG object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GEPROL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GEPROL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGEPROL(GEPROL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GFLT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GFLT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGFLT(GFLT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCFLT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCFLT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCFLT(GCFLT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GFARC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GFARC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGFARC(GFARC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCFARC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCFARC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCFARC(GCFARC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GIMD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GIMD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGIMD(GIMD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GLINE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GLINE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGLINE(GLINE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCLINE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCLINE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCLINE(GCLINE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GMRK</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GMRK</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGMRK(GMRK object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCMRK</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCMRK</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCMRK(GCMRK object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GNOP1</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GNOP1</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGNOP1(GNOP1 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GPARC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GPARC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGPARC(GPARC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCPARC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCPARC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCPARC(GCPARC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GRLINE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GRLINE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGRLINE(GRLINE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCRLINE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCRLINE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCRLINE(GCRLINE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSGCH</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSGCH</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSGCH(GSGCH object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSAP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSAP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSAP(GSAP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSBMX</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSBMX</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSBMX(GSBMX object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSCA</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSCA</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSCA(GSCA object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSCC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSCC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSCC(GSCC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSCD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSCD</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSCD(GSCD object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSCR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSCR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSCR(GSCR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSCS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSCS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSCS(GSCS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSCH</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSCH</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSCH(GSCH object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSCOL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSCOL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSCOL(GSCOL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSCP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSCP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSCP(GSCP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSECOL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSECOL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSECOL(GSECOL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSFLW</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSFLW</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSFLW(GSFLW object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSLT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSLT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSLT(GSLT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSLW</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSLW</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSLW(GSLW object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSMC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSMC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSMC(GSMC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSMP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSMP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSMP(GSMP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSMS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSMS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSMS(GSMS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSMT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSMT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSMT(GSMT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSMX</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSMX</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSMX(GSMX object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSPS</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSPS</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSPS(GSPS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSPT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSPT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSPT(GSPT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSPCOL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSPCOL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSPCOL(GSPCOL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSLE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSLE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSLE(GSLE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GSLJ</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GSLJ</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGSLJ(GSLJ object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCBEZ</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCBEZ</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCBEZ(GCBEZ object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GCCBEZ</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GCCBEZ</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGCCBEZ(GCCBEZ object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Window Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Window Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWindowSpecification(WindowSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Drawing Order Subset</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Drawing Order Subset</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDrawingOrderSubset(DrawingOrderSubset object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Toner Saver</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Toner Saver</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTonerSaver(TonerSaver object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Color Fidelity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Color Fidelity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseColorFidelity(ColorFidelity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Font Fidelity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Font Fidelity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFontFidelity(FontFidelity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Text Fidelity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Text Fidelity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTextFidelity(TextFidelity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Media Fidelity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Media Fidelity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMediaFidelity(MediaFidelity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Finishing Fidelity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Finishing Fidelity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFinishingFidelity(FinishingFidelity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CMR Fidelity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CMR Fidelity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCMRFidelity(CMRFidelity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Byte Extent</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Byte Extent</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectByteExtent(ObjectByteExtent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Byte Offset</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Byte Offset</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectByteOffset(ObjectByteOffset object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Structured Field Extent</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Structured Field Extent</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectStructuredFieldExtent(ObjectStructuredFieldExtent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Structured Field Offset</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Structured Field Offset</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectStructuredFieldOffset(ObjectStructuredFieldOffset object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Count</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Count</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectCount(ObjectCount object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Origin Identifier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Origin Identifier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectOriginIdentifier(ObjectOriginIdentifier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Line Data Object Position Migration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Line Data Object Position Migration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLineDataObjectPositionMigration(LineDataObjectPositionMigration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Color Management Resource Descriptor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Color Management Resource Descriptor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseColorManagementResourceDescriptor(ColorManagementResourceDescriptor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Image Resolution</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Image Resolution</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImageResolution(ImageResolution object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object Container Presentation Space Size</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object Container Presentation Space Size</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObjectContainerPresentationSpaceSize(ObjectContainerPresentationSpaceSize object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Extended Resource Local Identifier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Extended Resource Local Identifier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExtendedResourceLocalIdentifier(ExtendedResourceLocalIdentifier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metric Adjustment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metric Adjustment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetricAdjustment(MetricAdjustment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Extension Font</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Extension Font</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExtensionFont(ExtensionFont object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rendering Intent</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rendering Intent</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRenderingIntent(RenderingIntent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Font Coded Graphic Character Set Global Identifier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Font Coded Graphic Character Set Global Identifier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFontCodedGraphicCharacterSetGlobalIdentifier(FontCodedGraphicCharacterSetGlobalIdentifier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Locale Selector</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Locale Selector</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocaleSelector(LocaleSelector object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Finishing Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Finishing Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFinishingOperation(FinishingOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>UP 3i Finishing Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>UP 3i Finishing Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUP3iFinishingOperation(UP3iFinishingOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Device Appearance</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Device Appearance</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeviceAppearance(DeviceAppearance object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Resource Object Include</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Resource Object Include</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResourceObjectInclude(ResourceObjectInclude object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Page Overlay Conditional Processing</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Page Overlay Conditional Processing</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePageOverlayConditionalProcessing(PageOverlayConditionalProcessing object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Resource Usage Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Resource Usage Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResourceUsageAttribute(ResourceUsageAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //AfpTextSwitch
